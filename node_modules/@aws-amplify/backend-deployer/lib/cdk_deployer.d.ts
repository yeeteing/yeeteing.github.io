import { BackendDeployer, DeployProps } from './cdk_deployer_singleton_factory.js';
import { CdkErrorMapper } from './cdk_error_mapper.js';
import { AmplifyIOHost, BackendIdentifier, type PackageManagerController } from '@aws-amplify/plugin-types';
import { BackendLocator } from '@aws-amplify/platform-core';
import { Toolkit } from '@aws-cdk/toolkit-lib';
/**
 * Invokes CDK command via execa
 */
export declare class CDKDeployer implements BackendDeployer {
    private readonly cdkErrorMapper;
    private readonly backendLocator;
    private readonly packageManagerController;
    private readonly cdkToolkit;
    private readonly ioHost;
    private readonly absoluteCloudAssemblyLocation;
    /**
     * Instantiates instance of CDKDeployer
     */
    constructor(cdkErrorMapper: CdkErrorMapper, backendLocator: BackendLocator, packageManagerController: PackageManagerController, cdkToolkit: Toolkit, ioHost: AmplifyIOHost);
    /**
     * Invokes cdk deploy API
     */
    deploy: (backendId: BackendIdentifier, deployProps?: DeployProps) => Promise<{
        deploymentTimes: {
            synthesisTime: number;
            totalTime: number;
        };
    }>;
    /**
     * Invokes cdk destroy API
     */
    destroy: (backendId: BackendIdentifier) => Promise<{
        deploymentTimes: {
            totalTime: number;
        };
    }>;
    compileProject: (projectDirectory: string) => Promise<void>;
    /**
     * Build cloud executable from dynamically importing the cdk ts file, i.e. backend.ts
     */
    private getCdkCloudAssembly;
}
//# sourceMappingURL=cdk_deployer.d.ts.map