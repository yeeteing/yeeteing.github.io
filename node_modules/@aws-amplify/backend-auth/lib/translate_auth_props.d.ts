import { AuthProps } from '@aws-amplify/auth-construct';
import { BackendSecretResolver, ConstructFactoryGetInstanceProps } from '@aws-amplify/plugin-types';
import { AuthLoginWithFactoryProps } from './types.js';
import { AmplifyAuthProps } from './factory.js';
/**
 * Translate an Auth factory's loginWith to its Auth construct counterpart. Backend secret fields will be resolved
 * to an CFN token and map to the required construct type. Note that not all construct secret fields are of sdk
 * SecretValue type, many are (wrongly) of type string as well.
 */
export declare const translateToAuthConstructLoginWith: (authFactoryLoginWith: AuthLoginWithFactoryProps, backendSecretResolver: BackendSecretResolver) => AuthProps["loginWith"];
/**
 * Translates the senders property from AmplifyAuthProps to AuthProps format.
 * @param senders - The senders object from AmplifyAuthProps.
 * @param getInstanceProps - Properties used to get an instance of the sender.
 * @returns The translated senders object in AuthProps format, or undefined if no valid sender is provided.
 * @description
 * This function handles the translation of the 'senders' property, specifically for email and sms senders.
 * If no senders are provided, it returns undefined.
 * If a sender has a 'getInstance' method, it retrieves the Lambda function and returns it.
 * Otherwise, it returns the sender as is.
 */
export declare const translateToAuthConstructSenders: (senders: AmplifyAuthProps["senders"] | undefined, getInstanceProps: ConstructFactoryGetInstanceProps) => AuthProps["senders"] | undefined;
//# sourceMappingURL=translate_auth_props.d.ts.map