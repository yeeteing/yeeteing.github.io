import { existsSync as _existsSync } from 'fs';
import _fsp from 'fs/promises';
import * as _path from 'path';
import { Printer } from '../printer/printer.js';
import { PackageManagerControllerBase } from './package_manager_controller_base.js';
import { YarnModernLockFileReader } from './lock-file-reader/yarn_modern_lock_file_reader.js';
/**
 * YarnModernPackageManagerController is an abstraction around yarn modern (yarn v2+) commands that are needed to initialize a project and install dependencies
 */
export declare class YarnModernPackageManagerController extends PackageManagerControllerBase {
    protected readonly cwd: string;
    private readonly printer;
    protected readonly fsp: typeof _fsp;
    protected readonly path: _path.PlatformPath;
    protected readonly execa: import("execa").ExecaMethod<{}>;
    protected readonly executeWithDebugLogger: (cwd: string, executable: string, args?: Readonly<string[]>, execa?: import("execa").ExecaMethod<{}>, options?: import("@aws-amplify/plugin-types").ExecaOptions) => ReturnType<import("execa").ExecaMethod>;
    protected readonly existsSync: typeof _existsSync;
    protected readonly lockFileReader: YarnModernLockFileReader;
    /**
     * constructor
     */
    constructor(cwd: string, printer: Printer, fsp?: typeof _fsp, path?: _path.PlatformPath, execa?: import("execa").ExecaMethod<{}>, executeWithDebugLogger?: (cwd: string, executable: string, args?: Readonly<string[]>, execa?: import("execa").ExecaMethod<{}>, options?: import("@aws-amplify/plugin-types").ExecaOptions) => ReturnType<import("execa").ExecaMethod>, existsSync?: typeof _existsSync, lockFileReader?: YarnModernLockFileReader);
    initializeTsConfig: (targetDir: string) => Promise<void>;
    /**
     * addLockFile - adds a yarn.lock file to the project root for yarn v2+
     */
    private addLockFile;
    private addTypescript;
}
//# sourceMappingURL=yarn_modern_package_manager_controller.d.ts.map