"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.storageOutputSchema = void 0;
const zod_1 = require("zod");
const storageAccessActionEnum = zod_1.z.enum([
    'read',
    'get',
    'list',
    'write',
    'delete',
]);
const pathSchema = zod_1.z.record(zod_1.z.string(), zod_1.z.object({
    guest: zod_1.z.array(storageAccessActionEnum).optional(),
    authenticated: zod_1.z.array(storageAccessActionEnum).optional(),
    groups: zod_1.z.array(storageAccessActionEnum).optional(),
    entity: zod_1.z.array(storageAccessActionEnum).optional(),
    resource: zod_1.z.array(storageAccessActionEnum).optional(),
}));
const bucketSchema = zod_1.z.object({
    name: zod_1.z.string(),
    bucketName: zod_1.z.string(),
    storageRegion: zod_1.z.string(),
    paths: pathSchema.optional(),
});
exports.storageOutputSchema = zod_1.z.object({
    version: zod_1.z.literal('1'),
    payload: zod_1.z.object({
        bucketName: zod_1.z.string(),
        storageRegion: zod_1.z.string(),
        buckets: zod_1.z.string(zod_1.z.array(bucketSchema)).optional(), // JSON serialized array of bucketSchema
    }),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RvcmFnZS92MS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2QkFBd0I7QUFFeEIsTUFBTSx1QkFBdUIsR0FBRyxPQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3JDLE1BQU07SUFDTixLQUFLO0lBQ0wsTUFBTTtJQUNOLE9BQU87SUFDUCxRQUFRO0NBQ1QsQ0FBQyxDQUFDO0FBRUgsTUFBTSxVQUFVLEdBQUcsT0FBQyxDQUFDLE1BQU0sQ0FDekIsT0FBQyxDQUFDLE1BQU0sRUFBRSxFQUNWLE9BQUMsQ0FBQyxNQUFNLENBQUM7SUFDUCxLQUFLLEVBQUUsT0FBQyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLFFBQVEsRUFBRTtJQUNsRCxhQUFhLEVBQUUsT0FBQyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLFFBQVEsRUFBRTtJQUMxRCxNQUFNLEVBQUUsT0FBQyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLFFBQVEsRUFBRTtJQUNuRCxNQUFNLEVBQUUsT0FBQyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLFFBQVEsRUFBRTtJQUNuRCxRQUFRLEVBQUUsT0FBQyxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLFFBQVEsRUFBRTtDQUN0RCxDQUFDLENBQ0gsQ0FBQztBQUVGLE1BQU0sWUFBWSxHQUFHLE9BQUMsQ0FBQyxNQUFNLENBQUM7SUFDNUIsSUFBSSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDaEIsVUFBVSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDdEIsYUFBYSxFQUFFLE9BQUMsQ0FBQyxNQUFNLEVBQUU7SUFDekIsS0FBSyxFQUFFLFVBQVUsQ0FBQyxRQUFRLEVBQUU7Q0FDN0IsQ0FBQyxDQUFDO0FBRVUsUUFBQSxtQkFBbUIsR0FBRyxPQUFDLENBQUMsTUFBTSxDQUFDO0lBQzFDLE9BQU8sRUFBRSxPQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztJQUN2QixPQUFPLEVBQUUsT0FBQyxDQUFDLE1BQU0sQ0FBQztRQUNoQixVQUFVLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtRQUN0QixhQUFhLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtRQUN6QixPQUFPLEVBQUUsT0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFDLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsd0NBQXdDO0tBQzlGLENBQUM7Q0FDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcblxuY29uc3Qgc3RvcmFnZUFjY2Vzc0FjdGlvbkVudW0gPSB6LmVudW0oW1xuICAncmVhZCcsXG4gICdnZXQnLFxuICAnbGlzdCcsXG4gICd3cml0ZScsXG4gICdkZWxldGUnLFxuXSk7XG5cbmNvbnN0IHBhdGhTY2hlbWEgPSB6LnJlY29yZChcbiAgei5zdHJpbmcoKSxcbiAgei5vYmplY3Qoe1xuICAgIGd1ZXN0OiB6LmFycmF5KHN0b3JhZ2VBY2Nlc3NBY3Rpb25FbnVtKS5vcHRpb25hbCgpLFxuICAgIGF1dGhlbnRpY2F0ZWQ6IHouYXJyYXkoc3RvcmFnZUFjY2Vzc0FjdGlvbkVudW0pLm9wdGlvbmFsKCksXG4gICAgZ3JvdXBzOiB6LmFycmF5KHN0b3JhZ2VBY2Nlc3NBY3Rpb25FbnVtKS5vcHRpb25hbCgpLFxuICAgIGVudGl0eTogei5hcnJheShzdG9yYWdlQWNjZXNzQWN0aW9uRW51bSkub3B0aW9uYWwoKSxcbiAgICByZXNvdXJjZTogei5hcnJheShzdG9yYWdlQWNjZXNzQWN0aW9uRW51bSkub3B0aW9uYWwoKSxcbiAgfSksXG4pO1xuXG5jb25zdCBidWNrZXRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIG5hbWU6IHouc3RyaW5nKCksXG4gIGJ1Y2tldE5hbWU6IHouc3RyaW5nKCksXG4gIHN0b3JhZ2VSZWdpb246IHouc3RyaW5nKCksXG4gIHBhdGhzOiBwYXRoU2NoZW1hLm9wdGlvbmFsKCksXG59KTtcblxuZXhwb3J0IGNvbnN0IHN0b3JhZ2VPdXRwdXRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHZlcnNpb246IHoubGl0ZXJhbCgnMScpLFxuICBwYXlsb2FkOiB6Lm9iamVjdCh7XG4gICAgYnVja2V0TmFtZTogei5zdHJpbmcoKSxcbiAgICBzdG9yYWdlUmVnaW9uOiB6LnN0cmluZygpLFxuICAgIGJ1Y2tldHM6IHouc3RyaW5nKHouYXJyYXkoYnVja2V0U2NoZW1hKSkub3B0aW9uYWwoKSwgLy8gSlNPTiBzZXJpYWxpemVkIGFycmF5IG9mIGJ1Y2tldFNjaGVtYVxuICB9KSxcbn0pO1xuIl19