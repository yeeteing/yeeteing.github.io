import { AmplifyIOEventsBridge } from './amplify_io_events_bridge.js';
import { AmplifyEventLogger } from './amplify_event_loggers.js';
import { printer as globalPrinter } from '../printer.js';
/**
 * Create a singleton for the AmplifyIOEventsBridge. There should
 * exist just one instance and used by all consumers.
 */
export class AmplifyIOEventsBridgeSingletonFactory {
    printer;
    static instance;
    /**
     * Constructor for AmplifyIOEventsBridgeSingletonFactory. Takes a printer
     * instance to be used for logging.
     * @param printer a printer instance to be used for logging
     */
    constructor(printer = globalPrinter) {
        this.printer = printer;
    }
    /**
     * Returns a singleton instance of a AmplifyIOEventsBridge
     */
    getInstance = () => {
        if (!AmplifyIOEventsBridgeSingletonFactory.instance) {
            const cdkEventLogger = new AmplifyEventLogger(this.printer, this);
            AmplifyIOEventsBridgeSingletonFactory.instance =
                new AmplifyIOEventsBridge(cdkEventLogger.getEventLoggers(), this.printer);
        }
        return AmplifyIOEventsBridgeSingletonFactory.instance;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1wbGlmeV9pb19ldmVudHNfYnJpZGdlX3NpbmdsZXRvbl9mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xvZ2dlcnMvYW1wbGlmeV9pb19ldmVudHNfYnJpZGdlX3NpbmdsZXRvbl9mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWhFLE9BQU8sRUFBRSxPQUFPLElBQUksYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxxQ0FBcUM7SUFRbkI7SUFQckIsTUFBTSxDQUFDLFFBQVEsQ0FBb0M7SUFFM0Q7Ozs7T0FJRztJQUNILFlBQTZCLFVBQW1CLGFBQWE7UUFBaEMsWUFBTyxHQUFQLE9BQU8sQ0FBeUI7SUFBRyxDQUFDO0lBRWpFOztPQUVHO0lBQ0gsV0FBVyxHQUFHLEdBQWtCLEVBQUU7UUFDaEMsSUFBSSxDQUFDLHFDQUFxQyxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3BELE1BQU0sY0FBYyxHQUFHLElBQUksa0JBQWtCLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNsRSxxQ0FBcUMsQ0FBQyxRQUFRO2dCQUM1QyxJQUFJLHFCQUFxQixDQUN2QixjQUFjLENBQUMsZUFBZSxFQUFFLEVBQ2hDLElBQUksQ0FBQyxPQUFPLENBQ2IsQ0FBQztRQUNOLENBQUM7UUFDRCxPQUFPLHFDQUFxQyxDQUFDLFFBQVEsQ0FBQztJQUN4RCxDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFtcGxpZnlJT0V2ZW50c0JyaWRnZSB9IGZyb20gJy4vYW1wbGlmeV9pb19ldmVudHNfYnJpZGdlLmpzJztcbmltcG9ydCB7IEFtcGxpZnlFdmVudExvZ2dlciB9IGZyb20gJy4vYW1wbGlmeV9ldmVudF9sb2dnZXJzLmpzJztcbmltcG9ydCB7IEFtcGxpZnlJT0hvc3QgfSBmcm9tICdAYXdzLWFtcGxpZnkvcGx1Z2luLXR5cGVzJztcbmltcG9ydCB7IHByaW50ZXIgYXMgZ2xvYmFsUHJpbnRlciB9IGZyb20gJy4uL3ByaW50ZXIuanMnO1xuaW1wb3J0IHsgUHJpbnRlciB9IGZyb20gJy4uL3ByaW50ZXIvcHJpbnRlci5qcyc7XG4vKipcbiAqIENyZWF0ZSBhIHNpbmdsZXRvbiBmb3IgdGhlIEFtcGxpZnlJT0V2ZW50c0JyaWRnZS4gVGhlcmUgc2hvdWxkXG4gKiBleGlzdCBqdXN0IG9uZSBpbnN0YW5jZSBhbmQgdXNlZCBieSBhbGwgY29uc3VtZXJzLlxuICovXG5leHBvcnQgY2xhc3MgQW1wbGlmeUlPRXZlbnRzQnJpZGdlU2luZ2xldG9uRmFjdG9yeSB7XG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBBbXBsaWZ5SU9FdmVudHNCcmlkZ2UgfCB1bmRlZmluZWQ7XG5cbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yIGZvciBBbXBsaWZ5SU9FdmVudHNCcmlkZ2VTaW5nbGV0b25GYWN0b3J5LiBUYWtlcyBhIHByaW50ZXJcbiAgICogaW5zdGFuY2UgdG8gYmUgdXNlZCBmb3IgbG9nZ2luZy5cbiAgICogQHBhcmFtIHByaW50ZXIgYSBwcmludGVyIGluc3RhbmNlIHRvIGJlIHVzZWQgZm9yIGxvZ2dpbmdcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgcHJpbnRlcjogUHJpbnRlciA9IGdsb2JhbFByaW50ZXIpIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBzaW5nbGV0b24gaW5zdGFuY2Ugb2YgYSBBbXBsaWZ5SU9FdmVudHNCcmlkZ2VcbiAgICovXG4gIGdldEluc3RhbmNlID0gKCk6IEFtcGxpZnlJT0hvc3QgPT4ge1xuICAgIGlmICghQW1wbGlmeUlPRXZlbnRzQnJpZGdlU2luZ2xldG9uRmFjdG9yeS5pbnN0YW5jZSkge1xuICAgICAgY29uc3QgY2RrRXZlbnRMb2dnZXIgPSBuZXcgQW1wbGlmeUV2ZW50TG9nZ2VyKHRoaXMucHJpbnRlciwgdGhpcyk7XG4gICAgICBBbXBsaWZ5SU9FdmVudHNCcmlkZ2VTaW5nbGV0b25GYWN0b3J5Lmluc3RhbmNlID1cbiAgICAgICAgbmV3IEFtcGxpZnlJT0V2ZW50c0JyaWRnZShcbiAgICAgICAgICBjZGtFdmVudExvZ2dlci5nZXRFdmVudExvZ2dlcnMoKSxcbiAgICAgICAgICB0aGlzLnByaW50ZXIsXG4gICAgICAgICk7XG4gICAgfVxuICAgIHJldHVybiBBbXBsaWZ5SU9FdmVudHNCcmlkZ2VTaW5nbGV0b25GYWN0b3J5Lmluc3RhbmNlO1xuICB9O1xufVxuIl19