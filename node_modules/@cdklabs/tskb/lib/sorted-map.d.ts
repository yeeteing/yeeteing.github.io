export type SortedMultiMap<A, B> = Array<[A, B]>;
/**
 * A sorted map that may contain the same key multiple times
 *
 * Stored as a sorted array of [key, value] pairs, using binary search to locate
 * entries.
 */
export declare namespace sortedMap {
    type Comparator<A> = (a: A, b: A) => number;
    function add<A, B>(map: SortedMultiMap<A, B>, cmp: Comparator<A>, key: A, value: B): void;
    function find<A, B>(map: SortedMultiMap<A, B>, cmp: Comparator<A>, key: A): B | undefined;
    function findAll<A, B>(map: SortedMultiMap<A, B>, cmp: Comparator<A>, key: A): B[];
}
