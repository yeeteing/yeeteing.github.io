import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { AmplifyServiceException as __BaseException } from "./AmplifyServiceException";
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare const Stage: {
  readonly BETA: "BETA";
  readonly DEVELOPMENT: "DEVELOPMENT";
  readonly EXPERIMENTAL: "EXPERIMENTAL";
  readonly PRODUCTION: "PRODUCTION";
  readonly PULL_REQUEST: "PULL_REQUEST";
};
export type Stage = (typeof Stage)[keyof typeof Stage];
export interface AutoBranchCreationConfig {
  stage?: Stage | undefined;
  framework?: string | undefined;
  enableAutoBuild?: boolean | undefined;
  environmentVariables?: Record<string, string> | undefined;
  basicAuthCredentials?: string | undefined;
  enableBasicAuth?: boolean | undefined;
  enablePerformanceMode?: boolean | undefined;
  buildSpec?: string | undefined;
  enablePullRequestPreview?: boolean | undefined;
  pullRequestEnvironmentName?: string | undefined;
}
export declare const CacheConfigType: {
  readonly AMPLIFY_MANAGED: "AMPLIFY_MANAGED";
  readonly AMPLIFY_MANAGED_NO_COOKIES: "AMPLIFY_MANAGED_NO_COOKIES";
};
export type CacheConfigType =
  (typeof CacheConfigType)[keyof typeof CacheConfigType];
export interface CacheConfig {
  type: CacheConfigType | undefined;
}
export interface CustomRule {
  source: string | undefined;
  target: string | undefined;
  status?: string | undefined;
  condition?: string | undefined;
}
export declare const BuildComputeType: {
  readonly LARGE_16GB: "LARGE_16GB";
  readonly STANDARD_8GB: "STANDARD_8GB";
  readonly XLARGE_72GB: "XLARGE_72GB";
};
export type BuildComputeType =
  (typeof BuildComputeType)[keyof typeof BuildComputeType];
export interface JobConfig {
  buildComputeType: BuildComputeType | undefined;
}
export declare const Platform: {
  readonly WEB: "WEB";
  readonly WEB_COMPUTE: "WEB_COMPUTE";
  readonly WEB_DYNAMIC: "WEB_DYNAMIC";
};
export type Platform = (typeof Platform)[keyof typeof Platform];
export interface CreateAppRequest {
  name: string | undefined;
  description?: string | undefined;
  repository?: string | undefined;
  platform?: Platform | undefined;
  computeRoleArn?: string | undefined;
  iamServiceRoleArn?: string | undefined;
  oauthToken?: string | undefined;
  accessToken?: string | undefined;
  environmentVariables?: Record<string, string> | undefined;
  enableBranchAutoBuild?: boolean | undefined;
  enableBranchAutoDeletion?: boolean | undefined;
  enableBasicAuth?: boolean | undefined;
  basicAuthCredentials?: string | undefined;
  customRules?: CustomRule[] | undefined;
  tags?: Record<string, string> | undefined;
  buildSpec?: string | undefined;
  customHeaders?: string | undefined;
  enableAutoBranchCreation?: boolean | undefined;
  autoBranchCreationPatterns?: string[] | undefined;
  autoBranchCreationConfig?: AutoBranchCreationConfig | undefined;
  jobConfig?: JobConfig | undefined;
  cacheConfig?: CacheConfig | undefined;
}
export interface ProductionBranch {
  lastDeployTime?: Date | undefined;
  status?: string | undefined;
  thumbnailUrl?: string | undefined;
  branchName?: string | undefined;
}
export declare const RepositoryCloneMethod: {
  readonly SIGV4: "SIGV4";
  readonly SSH: "SSH";
  readonly TOKEN: "TOKEN";
};
export type RepositoryCloneMethod =
  (typeof RepositoryCloneMethod)[keyof typeof RepositoryCloneMethod];
export declare const WafStatus: {
  readonly ASSOCIATING: "ASSOCIATING";
  readonly ASSOCIATION_FAILED: "ASSOCIATION_FAILED";
  readonly ASSOCIATION_SUCCESS: "ASSOCIATION_SUCCESS";
  readonly DISASSOCIATING: "DISASSOCIATING";
  readonly DISASSOCIATION_FAILED: "DISASSOCIATION_FAILED";
};
export type WafStatus = (typeof WafStatus)[keyof typeof WafStatus];
export interface WafConfiguration {
  webAclArn?: string | undefined;
  wafStatus?: WafStatus | undefined;
  statusReason?: string | undefined;
}
export interface App {
  appId: string | undefined;
  appArn: string | undefined;
  name: string | undefined;
  tags?: Record<string, string> | undefined;
  description: string | undefined;
  repository: string | undefined;
  platform: Platform | undefined;
  createTime: Date | undefined;
  updateTime: Date | undefined;
  computeRoleArn?: string | undefined;
  iamServiceRoleArn?: string | undefined;
  environmentVariables: Record<string, string> | undefined;
  defaultDomain: string | undefined;
  enableBranchAutoBuild: boolean | undefined;
  enableBranchAutoDeletion?: boolean | undefined;
  enableBasicAuth: boolean | undefined;
  basicAuthCredentials?: string | undefined;
  customRules?: CustomRule[] | undefined;
  productionBranch?: ProductionBranch | undefined;
  buildSpec?: string | undefined;
  customHeaders?: string | undefined;
  enableAutoBranchCreation?: boolean | undefined;
  autoBranchCreationPatterns?: string[] | undefined;
  autoBranchCreationConfig?: AutoBranchCreationConfig | undefined;
  repositoryCloneMethod?: RepositoryCloneMethod | undefined;
  cacheConfig?: CacheConfig | undefined;
  webhookCreateTime?: Date | undefined;
  wafConfiguration?: WafConfiguration | undefined;
  jobConfig?: JobConfig | undefined;
}
export interface CreateAppResult {
  app: App | undefined;
}
export declare class DependentServiceFailureException extends __BaseException {
  readonly name: "DependentServiceFailureException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<
      DependentServiceFailureException,
      __BaseException
    >
  );
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class UnauthorizedException extends __BaseException {
  readonly name: "UnauthorizedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnauthorizedException, __BaseException>
  );
}
export interface CreateBackendEnvironmentRequest {
  appId: string | undefined;
  environmentName: string | undefined;
  stackName?: string | undefined;
  deploymentArtifacts?: string | undefined;
}
export interface BackendEnvironment {
  backendEnvironmentArn: string | undefined;
  environmentName: string | undefined;
  stackName?: string | undefined;
  deploymentArtifacts?: string | undefined;
  createTime: Date | undefined;
  updateTime: Date | undefined;
}
export interface CreateBackendEnvironmentResult {
  backendEnvironment: BackendEnvironment | undefined;
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export interface Backend {
  stackArn?: string | undefined;
}
export interface CreateBranchRequest {
  appId: string | undefined;
  branchName: string | undefined;
  description?: string | undefined;
  stage?: Stage | undefined;
  framework?: string | undefined;
  enableNotification?: boolean | undefined;
  enableAutoBuild?: boolean | undefined;
  enableSkewProtection?: boolean | undefined;
  environmentVariables?: Record<string, string> | undefined;
  basicAuthCredentials?: string | undefined;
  enableBasicAuth?: boolean | undefined;
  enablePerformanceMode?: boolean | undefined;
  tags?: Record<string, string> | undefined;
  buildSpec?: string | undefined;
  ttl?: string | undefined;
  displayName?: string | undefined;
  enablePullRequestPreview?: boolean | undefined;
  pullRequestEnvironmentName?: string | undefined;
  backendEnvironmentArn?: string | undefined;
  backend?: Backend | undefined;
  computeRoleArn?: string | undefined;
}
export interface Branch {
  branchArn: string | undefined;
  branchName: string | undefined;
  description: string | undefined;
  tags?: Record<string, string> | undefined;
  stage: Stage | undefined;
  displayName: string | undefined;
  enableNotification: boolean | undefined;
  createTime: Date | undefined;
  updateTime: Date | undefined;
  environmentVariables: Record<string, string> | undefined;
  enableAutoBuild: boolean | undefined;
  enableSkewProtection?: boolean | undefined;
  customDomains: string[] | undefined;
  framework: string | undefined;
  activeJobId: string | undefined;
  totalNumberOfJobs: string | undefined;
  enableBasicAuth: boolean | undefined;
  enablePerformanceMode?: boolean | undefined;
  thumbnailUrl?: string | undefined;
  basicAuthCredentials?: string | undefined;
  buildSpec?: string | undefined;
  ttl: string | undefined;
  associatedResources?: string[] | undefined;
  enablePullRequestPreview: boolean | undefined;
  pullRequestEnvironmentName?: string | undefined;
  destinationBranch?: string | undefined;
  sourceBranch?: string | undefined;
  backendEnvironmentArn?: string | undefined;
  backend?: Backend | undefined;
  computeRoleArn?: string | undefined;
}
export interface CreateBranchResult {
  branch: Branch | undefined;
}
export interface CreateDeploymentRequest {
  appId: string | undefined;
  branchName: string | undefined;
  fileMap?: Record<string, string> | undefined;
}
export interface CreateDeploymentResult {
  jobId?: string | undefined;
  fileUploadUrls: Record<string, string> | undefined;
  zipUploadUrl: string | undefined;
}
export declare const CertificateType: {
  readonly AMPLIFY_MANAGED: "AMPLIFY_MANAGED";
  readonly CUSTOM: "CUSTOM";
};
export type CertificateType =
  (typeof CertificateType)[keyof typeof CertificateType];
export interface CertificateSettings {
  type: CertificateType | undefined;
  customCertificateArn?: string | undefined;
}
export interface SubDomainSetting {
  prefix: string | undefined;
  branchName: string | undefined;
}
export interface CreateDomainAssociationRequest {
  appId: string | undefined;
  domainName: string | undefined;
  enableAutoSubDomain?: boolean | undefined;
  subDomainSettings: SubDomainSetting[] | undefined;
  autoSubDomainCreationPatterns?: string[] | undefined;
  autoSubDomainIAMRole?: string | undefined;
  certificateSettings?: CertificateSettings | undefined;
}
export interface Certificate {
  type: CertificateType | undefined;
  customCertificateArn?: string | undefined;
  certificateVerificationDNSRecord?: string | undefined;
}
export declare const DomainStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly AWAITING_APP_CNAME: "AWAITING_APP_CNAME";
  readonly CREATING: "CREATING";
  readonly FAILED: "FAILED";
  readonly IMPORTING_CUSTOM_CERTIFICATE: "IMPORTING_CUSTOM_CERTIFICATE";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly PENDING_DEPLOYMENT: "PENDING_DEPLOYMENT";
  readonly PENDING_VERIFICATION: "PENDING_VERIFICATION";
  readonly REQUESTING_CERTIFICATE: "REQUESTING_CERTIFICATE";
  readonly UPDATING: "UPDATING";
};
export type DomainStatus = (typeof DomainStatus)[keyof typeof DomainStatus];
export interface SubDomain {
  subDomainSetting: SubDomainSetting | undefined;
  verified: boolean | undefined;
  dnsRecord: string | undefined;
}
export declare const UpdateStatus: {
  readonly AWAITING_APP_CNAME: "AWAITING_APP_CNAME";
  readonly IMPORTING_CUSTOM_CERTIFICATE: "IMPORTING_CUSTOM_CERTIFICATE";
  readonly PENDING_DEPLOYMENT: "PENDING_DEPLOYMENT";
  readonly PENDING_VERIFICATION: "PENDING_VERIFICATION";
  readonly REQUESTING_CERTIFICATE: "REQUESTING_CERTIFICATE";
  readonly UPDATE_COMPLETE: "UPDATE_COMPLETE";
  readonly UPDATE_FAILED: "UPDATE_FAILED";
};
export type UpdateStatus = (typeof UpdateStatus)[keyof typeof UpdateStatus];
export interface DomainAssociation {
  domainAssociationArn: string | undefined;
  domainName: string | undefined;
  enableAutoSubDomain: boolean | undefined;
  autoSubDomainCreationPatterns?: string[] | undefined;
  autoSubDomainIAMRole?: string | undefined;
  domainStatus: DomainStatus | undefined;
  updateStatus?: UpdateStatus | undefined;
  statusReason: string | undefined;
  certificateVerificationDNSRecord?: string | undefined;
  subDomains: SubDomain[] | undefined;
  certificate?: Certificate | undefined;
}
export interface CreateDomainAssociationResult {
  domainAssociation: DomainAssociation | undefined;
}
export interface CreateWebhookRequest {
  appId: string | undefined;
  branchName: string | undefined;
  description?: string | undefined;
}
export interface Webhook {
  webhookArn: string | undefined;
  webhookId: string | undefined;
  webhookUrl: string | undefined;
  appId?: string | undefined;
  branchName: string | undefined;
  description: string | undefined;
  createTime: Date | undefined;
  updateTime: Date | undefined;
}
export interface CreateWebhookResult {
  webhook: Webhook | undefined;
}
export interface DeleteAppRequest {
  appId: string | undefined;
}
export interface DeleteAppResult {
  app: App | undefined;
}
export interface DeleteBackendEnvironmentRequest {
  appId: string | undefined;
  environmentName: string | undefined;
}
export interface DeleteBackendEnvironmentResult {
  backendEnvironment: BackendEnvironment | undefined;
}
export interface DeleteBranchRequest {
  appId: string | undefined;
  branchName: string | undefined;
}
export interface DeleteBranchResult {
  branch: Branch | undefined;
}
export interface DeleteDomainAssociationRequest {
  appId: string | undefined;
  domainName: string | undefined;
}
export interface DeleteDomainAssociationResult {
  domainAssociation: DomainAssociation | undefined;
}
export interface DeleteJobRequest {
  appId: string | undefined;
  branchName: string | undefined;
  jobId: string | undefined;
}
export declare const JobType: {
  readonly MANUAL: "MANUAL";
  readonly RELEASE: "RELEASE";
  readonly RETRY: "RETRY";
  readonly WEB_HOOK: "WEB_HOOK";
};
export type JobType = (typeof JobType)[keyof typeof JobType];
export declare const SourceUrlType: {
  readonly BUCKET_PREFIX: "BUCKET_PREFIX";
  readonly ZIP: "ZIP";
};
export type SourceUrlType = (typeof SourceUrlType)[keyof typeof SourceUrlType];
export declare const JobStatus: {
  readonly CANCELLED: "CANCELLED";
  readonly CANCELLING: "CANCELLING";
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly PENDING: "PENDING";
  readonly PROVISIONING: "PROVISIONING";
  readonly RUNNING: "RUNNING";
  readonly SUCCEED: "SUCCEED";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export interface JobSummary {
  jobArn: string | undefined;
  jobId: string | undefined;
  commitId: string | undefined;
  commitMessage: string | undefined;
  commitTime: Date | undefined;
  startTime: Date | undefined;
  status: JobStatus | undefined;
  endTime?: Date | undefined;
  jobType: JobType | undefined;
  sourceUrl?: string | undefined;
  sourceUrlType?: SourceUrlType | undefined;
}
export interface DeleteJobResult {
  jobSummary: JobSummary | undefined;
}
export interface DeleteWebhookRequest {
  webhookId: string | undefined;
}
export interface DeleteWebhookResult {
  webhook: Webhook | undefined;
}
export interface GenerateAccessLogsRequest {
  startTime?: Date | undefined;
  endTime?: Date | undefined;
  domainName: string | undefined;
  appId: string | undefined;
}
export interface GenerateAccessLogsResult {
  logUrl?: string | undefined;
}
export interface GetAppRequest {
  appId: string | undefined;
}
export interface GetAppResult {
  app: App | undefined;
}
export interface GetArtifactUrlRequest {
  artifactId: string | undefined;
}
export interface GetArtifactUrlResult {
  artifactId: string | undefined;
  artifactUrl: string | undefined;
}
export interface GetBackendEnvironmentRequest {
  appId: string | undefined;
  environmentName: string | undefined;
}
export interface GetBackendEnvironmentResult {
  backendEnvironment: BackendEnvironment | undefined;
}
export interface GetBranchRequest {
  appId: string | undefined;
  branchName: string | undefined;
}
export interface GetBranchResult {
  branch: Branch | undefined;
}
export interface GetDomainAssociationRequest {
  appId: string | undefined;
  domainName: string | undefined;
}
export interface GetDomainAssociationResult {
  domainAssociation: DomainAssociation | undefined;
}
export interface GetJobRequest {
  appId: string | undefined;
  branchName: string | undefined;
  jobId: string | undefined;
}
export interface Step {
  stepName: string | undefined;
  startTime: Date | undefined;
  status: JobStatus | undefined;
  endTime: Date | undefined;
  logUrl?: string | undefined;
  artifactsUrl?: string | undefined;
  testArtifactsUrl?: string | undefined;
  testConfigUrl?: string | undefined;
  screenshots?: Record<string, string> | undefined;
  statusReason?: string | undefined;
  context?: string | undefined;
}
export interface Job {
  summary: JobSummary | undefined;
  steps: Step[] | undefined;
}
export interface GetJobResult {
  job: Job | undefined;
}
export interface GetWebhookRequest {
  webhookId: string | undefined;
}
export interface GetWebhookResult {
  webhook: Webhook | undefined;
}
export interface ListAppsRequest {
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface ListAppsResult {
  apps: App[] | undefined;
  nextToken?: string | undefined;
}
export interface ListArtifactsRequest {
  appId: string | undefined;
  branchName: string | undefined;
  jobId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface Artifact {
  artifactFileName: string | undefined;
  artifactId: string | undefined;
}
export interface ListArtifactsResult {
  artifacts: Artifact[] | undefined;
  nextToken?: string | undefined;
}
export interface ListBackendEnvironmentsRequest {
  appId: string | undefined;
  environmentName?: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface ListBackendEnvironmentsResult {
  backendEnvironments: BackendEnvironment[] | undefined;
  nextToken?: string | undefined;
}
export interface ListBranchesRequest {
  appId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface ListBranchesResult {
  branches: Branch[] | undefined;
  nextToken?: string | undefined;
}
export interface ListDomainAssociationsRequest {
  appId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface ListDomainAssociationsResult {
  domainAssociations: DomainAssociation[] | undefined;
  nextToken?: string | undefined;
}
export interface ListJobsRequest {
  appId: string | undefined;
  branchName: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface ListJobsResult {
  jobSummaries: JobSummary[] | undefined;
  nextToken?: string | undefined;
}
export interface ListTagsForResourceRequest {
  resourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  tags?: Record<string, string> | undefined;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  code: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface ListWebhooksRequest {
  appId: string | undefined;
  nextToken?: string | undefined;
  maxResults?: number | undefined;
}
export interface ListWebhooksResult {
  webhooks: Webhook[] | undefined;
  nextToken?: string | undefined;
}
export interface StartDeploymentRequest {
  appId: string | undefined;
  branchName: string | undefined;
  jobId?: string | undefined;
  sourceUrl?: string | undefined;
  sourceUrlType?: SourceUrlType | undefined;
}
export interface StartDeploymentResult {
  jobSummary: JobSummary | undefined;
}
export interface StartJobRequest {
  appId: string | undefined;
  branchName: string | undefined;
  jobId?: string | undefined;
  jobType: JobType | undefined;
  jobReason?: string | undefined;
  commitId?: string | undefined;
  commitMessage?: string | undefined;
  commitTime?: Date | undefined;
}
export interface StartJobResult {
  jobSummary: JobSummary | undefined;
}
export interface StopJobRequest {
  appId: string | undefined;
  branchName: string | undefined;
  jobId: string | undefined;
}
export interface StopJobResult {
  jobSummary: JobSummary | undefined;
}
export interface TagResourceRequest {
  resourceArn: string | undefined;
  tags: Record<string, string> | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  resourceArn: string | undefined;
  tagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateAppRequest {
  appId: string | undefined;
  name?: string | undefined;
  description?: string | undefined;
  platform?: Platform | undefined;
  computeRoleArn?: string | undefined;
  iamServiceRoleArn?: string | undefined;
  environmentVariables?: Record<string, string> | undefined;
  enableBranchAutoBuild?: boolean | undefined;
  enableBranchAutoDeletion?: boolean | undefined;
  enableBasicAuth?: boolean | undefined;
  basicAuthCredentials?: string | undefined;
  customRules?: CustomRule[] | undefined;
  buildSpec?: string | undefined;
  customHeaders?: string | undefined;
  enableAutoBranchCreation?: boolean | undefined;
  autoBranchCreationPatterns?: string[] | undefined;
  autoBranchCreationConfig?: AutoBranchCreationConfig | undefined;
  repository?: string | undefined;
  oauthToken?: string | undefined;
  accessToken?: string | undefined;
  jobConfig?: JobConfig | undefined;
  cacheConfig?: CacheConfig | undefined;
}
export interface UpdateAppResult {
  app: App | undefined;
}
export interface UpdateBranchRequest {
  appId: string | undefined;
  branchName: string | undefined;
  description?: string | undefined;
  framework?: string | undefined;
  stage?: Stage | undefined;
  enableNotification?: boolean | undefined;
  enableAutoBuild?: boolean | undefined;
  enableSkewProtection?: boolean | undefined;
  environmentVariables?: Record<string, string> | undefined;
  basicAuthCredentials?: string | undefined;
  enableBasicAuth?: boolean | undefined;
  enablePerformanceMode?: boolean | undefined;
  buildSpec?: string | undefined;
  ttl?: string | undefined;
  displayName?: string | undefined;
  enablePullRequestPreview?: boolean | undefined;
  pullRequestEnvironmentName?: string | undefined;
  backendEnvironmentArn?: string | undefined;
  backend?: Backend | undefined;
  computeRoleArn?: string | undefined;
}
export interface UpdateBranchResult {
  branch: Branch | undefined;
}
export interface UpdateDomainAssociationRequest {
  appId: string | undefined;
  domainName: string | undefined;
  enableAutoSubDomain?: boolean | undefined;
  subDomainSettings?: SubDomainSetting[] | undefined;
  autoSubDomainCreationPatterns?: string[] | undefined;
  autoSubDomainIAMRole?: string | undefined;
  certificateSettings?: CertificateSettings | undefined;
}
export interface UpdateDomainAssociationResult {
  domainAssociation: DomainAssociation | undefined;
}
export interface UpdateWebhookRequest {
  webhookId: string | undefined;
  branchName?: string | undefined;
  description?: string | undefined;
}
export interface UpdateWebhookResult {
  webhook: Webhook | undefined;
}
export declare const AutoBranchCreationConfigFilterSensitiveLog: (
  obj: AutoBranchCreationConfig
) => any;
export declare const CreateAppRequestFilterSensitiveLog: (
  obj: CreateAppRequest
) => any;
export declare const AppFilterSensitiveLog: (obj: App) => any;
export declare const CreateAppResultFilterSensitiveLog: (
  obj: CreateAppResult
) => any;
export declare const CreateBranchRequestFilterSensitiveLog: (
  obj: CreateBranchRequest
) => any;
export declare const BranchFilterSensitiveLog: (obj: Branch) => any;
export declare const CreateBranchResultFilterSensitiveLog: (
  obj: CreateBranchResult
) => any;
export declare const DeleteAppResultFilterSensitiveLog: (
  obj: DeleteAppResult
) => any;
export declare const DeleteBranchResultFilterSensitiveLog: (
  obj: DeleteBranchResult
) => any;
export declare const GetAppResultFilterSensitiveLog: (obj: GetAppResult) => any;
export declare const GetBranchResultFilterSensitiveLog: (
  obj: GetBranchResult
) => any;
export declare const ListAppsResultFilterSensitiveLog: (
  obj: ListAppsResult
) => any;
export declare const ListBranchesResultFilterSensitiveLog: (
  obj: ListBranchesResult
) => any;
export declare const UpdateAppRequestFilterSensitiveLog: (
  obj: UpdateAppRequest
) => any;
export declare const UpdateAppResultFilterSensitiveLog: (
  obj: UpdateAppResult
) => any;
export declare const UpdateBranchRequestFilterSensitiveLog: (
  obj: UpdateBranchRequest
) => any;
export declare const UpdateBranchResultFilterSensitiveLog: (
  obj: UpdateBranchResult
) => any;
