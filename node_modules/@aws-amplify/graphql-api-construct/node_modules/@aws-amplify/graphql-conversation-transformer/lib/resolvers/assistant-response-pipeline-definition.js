"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assistantResponsePipelineDefinition = void 0;
const resolver_function_definition_1 = require("./resolver-function-definition");
exports.assistantResponsePipelineDefinition = {
    requestSlots: [init(), auth(), verifySessionOwner()],
    dataSlot: data(),
    responseSlots: [],
    field: (config) => ({ typeName: 'Mutation', fieldName: fieldName(config) }),
};
function init() {
    return (0, resolver_function_definition_1.createResolverFunctionDefinition)({
        slotName: 'init',
        fileName: 'init-resolver-fn.template.js',
        generateTemplate: templateGenerator('init'),
    });
}
function auth() {
    return (0, resolver_function_definition_1.createResolverFunctionDefinition)({
        slotName: 'auth',
        fileName: 'auth-resolver-fn.template.js',
        generateTemplate: templateGenerator('auth'),
    });
}
function verifySessionOwner() {
    return (0, resolver_function_definition_1.createResolverFunctionDefinition)({
        slotName: 'verifySessionOwner',
        fileName: 'verify-session-owner-resolver-fn.template.js',
        generateTemplate: templateGenerator('verify-session-owner'),
        dataSource: (config) => config.dataSources.conversationTableDataSource,
        substitutions: () => ({
            CONVERSATION_ID_PARENT: 'ctx.args.input',
        }),
    });
}
function data() {
    return (0, resolver_function_definition_1.createResolverFunctionDefinition)({
        slotName: 'data',
        fileName: 'assistant-mutation-resolver-fn.template.js',
        generateTemplate: templateGenerator('assistant-response'),
        dataSource: (config) => config.dataSources.messageTableDataSource,
        substitutions: (config) => ({
            CONVERSATION_MESSAGE_TYPE_NAME: config.message.model.name.value,
        }),
    });
}
function fieldName(config) {
    return config.assistantResponseMutation.field.name.value;
}
function templateGenerator(slotName) {
    return (0, resolver_function_definition_1.createS3AssetMappingTemplateGenerator)('Mutation', slotName, fieldName);
}
//# sourceMappingURL=assistant-response-pipeline-definition.js.map