import { DirectiveNode, FieldDefinitionNode, InputObjectTypeDefinitionNode, NamedTypeNode, ObjectTypeDefinitionNode } from 'graphql';
export type MessageModel = {
    authDirective: DirectiveNode;
    modelDirective: DirectiveNode;
    belongsToConversationDirective: DirectiveNode;
    conversationField: FieldDefinitionNode;
    model: ObjectTypeDefinitionNode;
};
export declare const createMessageModel: (conversationName: string, messageName: string, referenceFieldName: string, conversationMessageInterface: NamedTypeNode) => MessageModel;
export declare const createMessageSubscription: (subscriptionName: string, onMutationName: string) => FieldDefinitionNode;
export declare const createAssistantMutationField: (fieldName: string, messageName: string, inputTypeName: string) => FieldDefinitionNode;
export declare const createAssistantResponseMutationInput: (messageName: string) => InputObjectTypeDefinitionNode;
export declare const createAssistantResponseStreamingMutationInput: (messageModelName: string) => InputObjectTypeDefinitionNode;
export declare const createConversationTurnErrorInput: () => InputObjectTypeDefinitionNode;
export declare const createAssistantStreamingMutationField: (fieldName: string, inputTypeName: string) => FieldDefinitionNode;
export declare const constructStreamResponseType: () => ObjectTypeDefinitionNode;
//# sourceMappingURL=message-model.d.ts.map