import { Construct } from 'constructs';
import { AmplifyData } from '@aws-amplify/data-construct';
import { JsResolver } from '@aws-amplify/data-schema-types';
/**
 *
 * This returns the top-level passthrough resolver request/response handler (see: https://docs.aws.amazon.com/appsync/latest/devguide/resolver-reference-overview-js.html#anatomy-of-a-pipeline-resolver-js)
 * It's required for defining a pipeline resolver. The only purpose it serves is returning the output of the last function in the pipeline back to the client.
 *
 * Customer-provided handlers are added as a Functions list in `pipelineConfig.functions`
 *
 * Add Amplify API ID and environment name to the context stash for use in the customer-provided handlers.
 */
export declare const defaultJsResolverCode: (amplifyApiId: string, amplifyApiEnvironmentName: string) => string;
/**
 * Converts JS Resolver definition emitted by data-schema into AppSync pipeline
 * resolvers via L1 construct
 */
export declare const convertJsResolverDefinition: (scope: Construct, amplifyApi: AmplifyData, jsResolvers: JsResolver[] | undefined) => void;
//# sourceMappingURL=convert_js_resolvers.d.ts.map