import type { AssemblyManifest } from '@aws-cdk/cloud-assembly-schema';
import type { ResourceLocation } from './cloudformation';
export interface ExcludeList {
    isExcluded(location: ResourceLocation): boolean;
    union(other: ExcludeList): ExcludeList;
}
declare abstract class AbstractExcludeList implements ExcludeList {
    abstract isExcluded(location: ResourceLocation): boolean;
    union(other: ExcludeList): ExcludeList;
}
export declare class ManifestExcludeList extends AbstractExcludeList {
    private readonly excludedLocations;
    constructor(manifest: AssemblyManifest);
    private getExcludedLocations;
    isExcluded(location: ResourceLocation): boolean;
}
export declare class InMemoryExcludeList extends AbstractExcludeList {
    private readonly excludedLocations;
    private readonly excludedPaths;
    constructor(items: string[]);
    isExcluded(location: ResourceLocation): boolean;
}
export declare class UnionExcludeList extends AbstractExcludeList {
    private readonly excludeLists;
    constructor(excludeLists: ExcludeList[]);
    isExcluded(location: ResourceLocation): boolean;
}
export declare class NeverExclude extends AbstractExcludeList {
    isExcluded(_location: ResourceLocation): boolean;
}
export declare class AlwaysExclude extends AbstractExcludeList {
    isExcluded(_location: ResourceLocation): boolean;
}
export {};
