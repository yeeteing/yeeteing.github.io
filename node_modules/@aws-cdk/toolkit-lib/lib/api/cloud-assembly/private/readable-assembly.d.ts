import type * as cxapi from '@aws-cdk/cx-api';
import type { IReadLock } from '../../rwlock';
import type { IReadableCloudAssembly } from '../types';
export interface ReadableCloudAssemblyOptions {
    /**
     * Delete the Cloud Assembly directory when the object is disposed
     *
     * @default false
     */
    readonly deleteOnDispose?: boolean;
}
/**
 * The canonical implementation of `IReadableCloudAssembly`
 *
 * Holds a read lock that is unlocked on disposal, as well as optionally deletes the
 * cloud assembly directory.
 */
export declare class ReadableCloudAssembly implements IReadableCloudAssembly {
    readonly cloudAssembly: cxapi.CloudAssembly;
    private readonly lock;
    private readonly options?;
    constructor(cloudAssembly: cxapi.CloudAssembly, lock: IReadLock, options?: ReadableCloudAssemblyOptions | undefined);
    _unlock(): Promise<void>;
    dispose(): Promise<void>;
    [Symbol.asyncDispose](): Promise<void>;
}
