"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assemblyFromSource = assemblyFromSource;
const private_1 = require("../../api/cloud-assembly/private");
/**
 * Creates a Toolkit internal CloudAssembly from a CloudAssemblySource.
 *
 * The caller assumes ownership of the returned `StackAssembly`, and `dispose()`
 * should be called on this object after use.
 *
 * @param assemblySource - the source for the cloud assembly
 * @param cache - if the assembly should be cached, default: `true`
 * @returns the CloudAssembly object
 */
async function assemblyFromSource(ioHelper, assemblySource, cache = true) {
    if (assemblySource instanceof private_1.StackAssembly) {
        return assemblySource;
    }
    if (cache) {
        const ret = new private_1.StackAssembly(await assemblySource.produce(), ioHelper);
        return ret;
    }
    return new private_1.StackAssembly(await assemblySource.produce(), ioHelper);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQTBCQSxnREFXQztBQWxDRCw4REFBaUU7QUFhakU7Ozs7Ozs7OztHQVNHO0FBQ0ksS0FBSyxVQUFVLGtCQUFrQixDQUFDLFFBQWtCLEVBQUUsY0FBb0MsRUFBRSxRQUFpQixJQUFJO0lBQ3RILElBQUksY0FBYyxZQUFZLHVCQUFhLEVBQUUsQ0FBQztRQUM1QyxPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUNWLE1BQU0sR0FBRyxHQUFHLElBQUksdUJBQWEsQ0FBQyxNQUFNLGNBQWMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN4RSxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7SUFFRCxPQUFPLElBQUksdUJBQWEsQ0FBQyxNQUFNLGNBQWMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQztBQUNyRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgdHlwZSB7IFNka1Byb3ZpZGVyIH0gZnJvbSAnLi4vLi4vYXBpL2F3cy1hdXRoL3ByaXZhdGUnO1xuaW1wb3J0IHR5cGUgeyBJQ2xvdWRBc3NlbWJseVNvdXJjZSB9IGZyb20gJy4uLy4uL2FwaS9jbG91ZC1hc3NlbWJseSc7XG5pbXBvcnQgeyBTdGFja0Fzc2VtYmx5IH0gZnJvbSAnLi4vLi4vYXBpL2Nsb3VkLWFzc2VtYmx5L3ByaXZhdGUnO1xuaW1wb3J0IHR5cGUgeyBJb0hlbHBlciB9IGZyb20gJy4uLy4uL2FwaS9pby9wcml2YXRlJztcbmltcG9ydCB0eXBlIHsgUGx1Z2luSG9zdCB9IGZyb20gJy4uLy4uL2FwaS9wbHVnaW4nO1xuXG4vKipcbiAqIEhlbHBlciBzdHJ1Y3QgdG8gcGFzcyBpbnRlcm5hbCBzZXJ2aWNlcyBhcm91bmQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVG9vbGtpdFNlcnZpY2VzIHtcbiAgc2RrUHJvdmlkZXI6IFNka1Byb3ZpZGVyO1xuICBpb0hlbHBlcjogSW9IZWxwZXI7XG4gIHBsdWdpbkhvc3Q6IFBsdWdpbkhvc3Q7XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFRvb2xraXQgaW50ZXJuYWwgQ2xvdWRBc3NlbWJseSBmcm9tIGEgQ2xvdWRBc3NlbWJseVNvdXJjZS5cbiAqXG4gKiBUaGUgY2FsbGVyIGFzc3VtZXMgb3duZXJzaGlwIG9mIHRoZSByZXR1cm5lZCBgU3RhY2tBc3NlbWJseWAsIGFuZCBgZGlzcG9zZSgpYFxuICogc2hvdWxkIGJlIGNhbGxlZCBvbiB0aGlzIG9iamVjdCBhZnRlciB1c2UuXG4gKlxuICogQHBhcmFtIGFzc2VtYmx5U291cmNlIC0gdGhlIHNvdXJjZSBmb3IgdGhlIGNsb3VkIGFzc2VtYmx5XG4gKiBAcGFyYW0gY2FjaGUgLSBpZiB0aGUgYXNzZW1ibHkgc2hvdWxkIGJlIGNhY2hlZCwgZGVmYXVsdDogYHRydWVgXG4gKiBAcmV0dXJucyB0aGUgQ2xvdWRBc3NlbWJseSBvYmplY3RcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFzc2VtYmx5RnJvbVNvdXJjZShpb0hlbHBlcjogSW9IZWxwZXIsIGFzc2VtYmx5U291cmNlOiBJQ2xvdWRBc3NlbWJseVNvdXJjZSwgY2FjaGU6IGJvb2xlYW4gPSB0cnVlKTogUHJvbWlzZTxTdGFja0Fzc2VtYmx5PiB7XG4gIGlmIChhc3NlbWJseVNvdXJjZSBpbnN0YW5jZW9mIFN0YWNrQXNzZW1ibHkpIHtcbiAgICByZXR1cm4gYXNzZW1ibHlTb3VyY2U7XG4gIH1cblxuICBpZiAoY2FjaGUpIHtcbiAgICBjb25zdCByZXQgPSBuZXcgU3RhY2tBc3NlbWJseShhd2FpdCBhc3NlbWJseVNvdXJjZS5wcm9kdWNlKCksIGlvSGVscGVyKTtcbiAgICByZXR1cm4gcmV0O1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTdGFja0Fzc2VtYmx5KGF3YWl0IGFzc2VtYmx5U291cmNlLnByb2R1Y2UoKSwgaW9IZWxwZXIpO1xufVxuIl19