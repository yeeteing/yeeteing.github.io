"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.storageOutputSchema = void 0;
const zod_1 = require("zod");
const storageAccessActionEnum = zod_1.z.enum([
    'read',
    'get',
    'list',
    'write',
    'delete',
]);
const pathSchema = zod_1.z.record(zod_1.z.string(), zod_1.z.intersection(zod_1.z.object({
    guest: zod_1.z.array(storageAccessActionEnum),
    authenticated: zod_1.z.array(storageAccessActionEnum),
    resource: zod_1.z.array(storageAccessActionEnum),
}), zod_1.z.record(zod_1.z.string(), zod_1.z.array(storageAccessActionEnum))));
const bucketSchema = zod_1.z.object({
    name: zod_1.z.string(),
    bucketName: zod_1.z.string(),
    storageRegion: zod_1.z.string(),
    paths: pathSchema.optional(),
});
exports.storageOutputSchema = zod_1.z.object({
    version: zod_1.z.literal('1'),
    payload: zod_1.z.object({
        bucketName: zod_1.z.string(),
        storageRegion: zod_1.z.string(),
        buckets: zod_1.z.string(zod_1.z.array(bucketSchema)).optional(), // JSON serialized array of bucketSchema
    }),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RvcmFnZS92MS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2QkFBd0I7QUFFeEIsTUFBTSx1QkFBdUIsR0FBRyxPQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3JDLE1BQU07SUFDTixLQUFLO0lBQ0wsTUFBTTtJQUNOLE9BQU87SUFDUCxRQUFRO0NBQ1QsQ0FBQyxDQUFDO0FBRUgsTUFBTSxVQUFVLEdBQUcsT0FBQyxDQUFDLE1BQU0sQ0FDekIsT0FBQyxDQUFDLE1BQU0sRUFBRSxFQUNWLE9BQUMsQ0FBQyxZQUFZLENBQ1osT0FBQyxDQUFDLE1BQU0sQ0FBQztJQUNQLEtBQUssRUFBRSxPQUFDLENBQUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDO0lBQ3ZDLGFBQWEsRUFBRSxPQUFDLENBQUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDO0lBQy9DLFFBQVEsRUFBRSxPQUFDLENBQUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDO0NBQzNDLENBQUMsRUFDRixPQUFDLENBQUMsTUFBTSxDQUFDLE9BQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxPQUFDLENBQUMsS0FBSyxDQUFDLHVCQUF1QixDQUFDLENBQUMsQ0FDdkQsQ0FDRixDQUFDO0FBRUYsTUFBTSxZQUFZLEdBQUcsT0FBQyxDQUFDLE1BQU0sQ0FBQztJQUM1QixJQUFJLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtJQUNoQixVQUFVLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtJQUN0QixhQUFhLEVBQUUsT0FBQyxDQUFDLE1BQU0sRUFBRTtJQUN6QixLQUFLLEVBQUUsVUFBVSxDQUFDLFFBQVEsRUFBRTtDQUM3QixDQUFDLENBQUM7QUFFVSxRQUFBLG1CQUFtQixHQUFHLE9BQUMsQ0FBQyxNQUFNLENBQUM7SUFDMUMsT0FBTyxFQUFFLE9BQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBQ3ZCLE9BQU8sRUFBRSxPQUFDLENBQUMsTUFBTSxDQUFDO1FBQ2hCLFVBQVUsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFO1FBQ3RCLGFBQWEsRUFBRSxPQUFDLENBQUMsTUFBTSxFQUFFO1FBQ3pCLE9BQU8sRUFBRSxPQUFDLENBQUMsTUFBTSxDQUFDLE9BQUMsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSx3Q0FBd0M7S0FDOUYsQ0FBQztDQUNILENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuXG5jb25zdCBzdG9yYWdlQWNjZXNzQWN0aW9uRW51bSA9IHouZW51bShbXG4gICdyZWFkJyxcbiAgJ2dldCcsXG4gICdsaXN0JyxcbiAgJ3dyaXRlJyxcbiAgJ2RlbGV0ZScsXG5dKTtcblxuY29uc3QgcGF0aFNjaGVtYSA9IHoucmVjb3JkKFxuICB6LnN0cmluZygpLFxuICB6LmludGVyc2VjdGlvbihcbiAgICB6Lm9iamVjdCh7XG4gICAgICBndWVzdDogei5hcnJheShzdG9yYWdlQWNjZXNzQWN0aW9uRW51bSksXG4gICAgICBhdXRoZW50aWNhdGVkOiB6LmFycmF5KHN0b3JhZ2VBY2Nlc3NBY3Rpb25FbnVtKSxcbiAgICAgIHJlc291cmNlOiB6LmFycmF5KHN0b3JhZ2VBY2Nlc3NBY3Rpb25FbnVtKSxcbiAgICB9KSxcbiAgICB6LnJlY29yZCh6LnN0cmluZygpLCB6LmFycmF5KHN0b3JhZ2VBY2Nlc3NBY3Rpb25FbnVtKSksXG4gICksXG4pO1xuXG5jb25zdCBidWNrZXRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIG5hbWU6IHouc3RyaW5nKCksXG4gIGJ1Y2tldE5hbWU6IHouc3RyaW5nKCksXG4gIHN0b3JhZ2VSZWdpb246IHouc3RyaW5nKCksXG4gIHBhdGhzOiBwYXRoU2NoZW1hLm9wdGlvbmFsKCksXG59KTtcblxuZXhwb3J0IGNvbnN0IHN0b3JhZ2VPdXRwdXRTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHZlcnNpb246IHoubGl0ZXJhbCgnMScpLFxuICBwYXlsb2FkOiB6Lm9iamVjdCh7XG4gICAgYnVja2V0TmFtZTogei5zdHJpbmcoKSxcbiAgICBzdG9yYWdlUmVnaW9uOiB6LnN0cmluZygpLFxuICAgIGJ1Y2tldHM6IHouc3RyaW5nKHouYXJyYXkoYnVja2V0U2NoZW1hKSkub3B0aW9uYWwoKSwgLy8gSlNPTiBzZXJpYWxpemVkIGFycmF5IG9mIGJ1Y2tldFNjaGVtYVxuICB9KSxcbn0pO1xuIl19