import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { ElasticLoadBalancingV2ServiceException as __BaseException } from "./ElasticLoadBalancingV2ServiceException";
export declare const AuthenticateCognitoActionConditionalBehaviorEnum: {
  readonly ALLOW: "allow";
  readonly AUTHENTICATE: "authenticate";
  readonly DENY: "deny";
};
export type AuthenticateCognitoActionConditionalBehaviorEnum =
  (typeof AuthenticateCognitoActionConditionalBehaviorEnum)[keyof typeof AuthenticateCognitoActionConditionalBehaviorEnum];
export interface AuthenticateCognitoActionConfig {
  UserPoolArn: string | undefined;
  UserPoolClientId: string | undefined;
  UserPoolDomain: string | undefined;
  SessionCookieName?: string | undefined;
  Scope?: string | undefined;
  SessionTimeout?: number | undefined;
  AuthenticationRequestExtraParams?: Record<string, string> | undefined;
  OnUnauthenticatedRequest?:
    | AuthenticateCognitoActionConditionalBehaviorEnum
    | undefined;
}
export declare const AuthenticateOidcActionConditionalBehaviorEnum: {
  readonly ALLOW: "allow";
  readonly AUTHENTICATE: "authenticate";
  readonly DENY: "deny";
};
export type AuthenticateOidcActionConditionalBehaviorEnum =
  (typeof AuthenticateOidcActionConditionalBehaviorEnum)[keyof typeof AuthenticateOidcActionConditionalBehaviorEnum];
export interface AuthenticateOidcActionConfig {
  Issuer: string | undefined;
  AuthorizationEndpoint: string | undefined;
  TokenEndpoint: string | undefined;
  UserInfoEndpoint: string | undefined;
  ClientId: string | undefined;
  ClientSecret?: string | undefined;
  SessionCookieName?: string | undefined;
  Scope?: string | undefined;
  SessionTimeout?: number | undefined;
  AuthenticationRequestExtraParams?: Record<string, string> | undefined;
  OnUnauthenticatedRequest?:
    | AuthenticateOidcActionConditionalBehaviorEnum
    | undefined;
  UseExistingClientSecret?: boolean | undefined;
}
export interface FixedResponseActionConfig {
  MessageBody?: string | undefined;
  StatusCode: string | undefined;
  ContentType?: string | undefined;
}
export interface TargetGroupTuple {
  TargetGroupArn?: string | undefined;
  Weight?: number | undefined;
}
export interface TargetGroupStickinessConfig {
  Enabled?: boolean | undefined;
  DurationSeconds?: number | undefined;
}
export interface ForwardActionConfig {
  TargetGroups?: TargetGroupTuple[] | undefined;
  TargetGroupStickinessConfig?: TargetGroupStickinessConfig | undefined;
}
export declare const RedirectActionStatusCodeEnum: {
  readonly HTTP_301: "HTTP_301";
  readonly HTTP_302: "HTTP_302";
};
export type RedirectActionStatusCodeEnum =
  (typeof RedirectActionStatusCodeEnum)[keyof typeof RedirectActionStatusCodeEnum];
export interface RedirectActionConfig {
  Protocol?: string | undefined;
  Port?: string | undefined;
  Host?: string | undefined;
  Path?: string | undefined;
  Query?: string | undefined;
  StatusCode: RedirectActionStatusCodeEnum | undefined;
}
export declare const ActionTypeEnum: {
  readonly AUTHENTICATE_COGNITO: "authenticate-cognito";
  readonly AUTHENTICATE_OIDC: "authenticate-oidc";
  readonly FIXED_RESPONSE: "fixed-response";
  readonly FORWARD: "forward";
  readonly REDIRECT: "redirect";
};
export type ActionTypeEnum =
  (typeof ActionTypeEnum)[keyof typeof ActionTypeEnum];
export interface Action {
  Type: ActionTypeEnum | undefined;
  TargetGroupArn?: string | undefined;
  AuthenticateOidcConfig?: AuthenticateOidcActionConfig | undefined;
  AuthenticateCognitoConfig?: AuthenticateCognitoActionConfig | undefined;
  Order?: number | undefined;
  RedirectConfig?: RedirectActionConfig | undefined;
  FixedResponseConfig?: FixedResponseActionConfig | undefined;
  ForwardConfig?: ForwardActionConfig | undefined;
}
export interface Certificate {
  CertificateArn?: string | undefined;
  IsDefault?: boolean | undefined;
}
export interface AddListenerCertificatesInput {
  ListenerArn: string | undefined;
  Certificates: Certificate[] | undefined;
}
export interface AddListenerCertificatesOutput {
  Certificates?: Certificate[] | undefined;
}
export declare class CertificateNotFoundException extends __BaseException {
  readonly name: "CertificateNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<CertificateNotFoundException, __BaseException>
  );
}
export declare class ListenerNotFoundException extends __BaseException {
  readonly name: "ListenerNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ListenerNotFoundException, __BaseException>
  );
}
export declare class TooManyCertificatesException extends __BaseException {
  readonly name: "TooManyCertificatesException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyCertificatesException, __BaseException>
  );
}
export interface Tag {
  Key: string | undefined;
  Value?: string | undefined;
}
export interface AddTagsInput {
  ResourceArns: string[] | undefined;
  Tags: Tag[] | undefined;
}
export interface AddTagsOutput {}
export declare class DuplicateTagKeysException extends __BaseException {
  readonly name: "DuplicateTagKeysException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DuplicateTagKeysException, __BaseException>
  );
}
export declare class LoadBalancerNotFoundException extends __BaseException {
  readonly name: "LoadBalancerNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<LoadBalancerNotFoundException, __BaseException>
  );
}
export declare class RuleNotFoundException extends __BaseException {
  readonly name: "RuleNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<RuleNotFoundException, __BaseException>
  );
}
export declare class TargetGroupNotFoundException extends __BaseException {
  readonly name: "TargetGroupNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TargetGroupNotFoundException, __BaseException>
  );
}
export declare class TooManyTagsException extends __BaseException {
  readonly name: "TooManyTagsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyTagsException, __BaseException>
  );
}
export declare class TrustStoreNotFoundException extends __BaseException {
  readonly name: "TrustStoreNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TrustStoreNotFoundException, __BaseException>
  );
}
export declare const RevocationType: {
  readonly CRL: "CRL";
};
export type RevocationType =
  (typeof RevocationType)[keyof typeof RevocationType];
export interface RevocationContent {
  S3Bucket?: string | undefined;
  S3Key?: string | undefined;
  S3ObjectVersion?: string | undefined;
  RevocationType?: RevocationType | undefined;
}
export interface AddTrustStoreRevocationsInput {
  TrustStoreArn: string | undefined;
  RevocationContents?: RevocationContent[] | undefined;
}
export interface TrustStoreRevocation {
  TrustStoreArn?: string | undefined;
  RevocationId?: number | undefined;
  RevocationType?: RevocationType | undefined;
  NumberOfRevokedEntries?: number | undefined;
}
export interface AddTrustStoreRevocationsOutput {
  TrustStoreRevocations?: TrustStoreRevocation[] | undefined;
}
export declare class InvalidRevocationContentException extends __BaseException {
  readonly name: "InvalidRevocationContentException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      InvalidRevocationContentException,
      __BaseException
    >
  );
}
export declare class RevocationContentNotFoundException extends __BaseException {
  readonly name: "RevocationContentNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      RevocationContentNotFoundException,
      __BaseException
    >
  );
}
export declare class TooManyTrustStoreRevocationEntriesException extends __BaseException {
  readonly name: "TooManyTrustStoreRevocationEntriesException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      TooManyTrustStoreRevocationEntriesException,
      __BaseException
    >
  );
}
export declare const TargetAdministrativeOverrideReasonEnum: {
  readonly INTERNAL_ERROR: "AdministrativeOverride.Unknown";
  readonly NO_OVERRIDE_ENGAGED: "AdministrativeOverride.NoOverride";
  readonly ZONAL_SHIFT_DELEGATED_TO_DNS: "AdministrativeOverride.ZonalShiftDelegatedToDns";
  readonly ZONAL_SHIFT_ENGAGED: "AdministrativeOverride.ZonalShiftActive";
};
export type TargetAdministrativeOverrideReasonEnum =
  (typeof TargetAdministrativeOverrideReasonEnum)[keyof typeof TargetAdministrativeOverrideReasonEnum];
export declare const TargetAdministrativeOverrideStateEnum: {
  readonly NO_OVERRIDE: "no_override";
  readonly UNKNOWN: "unknown";
  readonly ZONAL_SHIFT_ACTIVE: "zonal_shift_active";
  readonly ZONAL_SHIFT_DELEGATED_TO_DNS: "zonal_shift_delegated_to_dns";
};
export type TargetAdministrativeOverrideStateEnum =
  (typeof TargetAdministrativeOverrideStateEnum)[keyof typeof TargetAdministrativeOverrideStateEnum];
export interface AdministrativeOverride {
  State?: TargetAdministrativeOverrideStateEnum | undefined;
  Reason?: TargetAdministrativeOverrideReasonEnum | undefined;
  Description?: string | undefined;
}
export declare const AdvertiseTrustStoreCaNamesEnum: {
  readonly off: "off";
  readonly on: "on";
};
export type AdvertiseTrustStoreCaNamesEnum =
  (typeof AdvertiseTrustStoreCaNamesEnum)[keyof typeof AdvertiseTrustStoreCaNamesEnum];
export declare class AllocationIdNotFoundException extends __BaseException {
  readonly name: "AllocationIdNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AllocationIdNotFoundException, __BaseException>
  );
}
export declare class ALPNPolicyNotSupportedException extends __BaseException {
  readonly name: "ALPNPolicyNotSupportedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      ALPNPolicyNotSupportedException,
      __BaseException
    >
  );
}
export declare const MitigationInEffectEnum: {
  readonly NO: "no";
  readonly YES: "yes";
};
export type MitigationInEffectEnum =
  (typeof MitigationInEffectEnum)[keyof typeof MitigationInEffectEnum];
export declare const AnomalyResultEnum: {
  readonly ANOMALOUS: "anomalous";
  readonly NORMAL: "normal";
};
export type AnomalyResultEnum =
  (typeof AnomalyResultEnum)[keyof typeof AnomalyResultEnum];
export interface AnomalyDetection {
  Result?: AnomalyResultEnum | undefined;
  MitigationInEffect?: MitigationInEffectEnum | undefined;
}
export interface LoadBalancerAddress {
  IpAddress?: string | undefined;
  AllocationId?: string | undefined;
  PrivateIPv4Address?: string | undefined;
  IPv6Address?: string | undefined;
}
export interface AvailabilityZone {
  ZoneName?: string | undefined;
  SubnetId?: string | undefined;
  OutpostId?: string | undefined;
  LoadBalancerAddresses?: LoadBalancerAddress[] | undefined;
  SourceNatIpv6Prefixes?: string[] | undefined;
}
export declare class AvailabilityZoneNotSupportedException extends __BaseException {
  readonly name: "AvailabilityZoneNotSupportedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      AvailabilityZoneNotSupportedException,
      __BaseException
    >
  );
}
export declare class CaCertificatesBundleNotFoundException extends __BaseException {
  readonly name: "CaCertificatesBundleNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      CaCertificatesBundleNotFoundException,
      __BaseException
    >
  );
}
export declare class CapacityDecreaseRequestsLimitExceededException extends __BaseException {
  readonly name: "CapacityDecreaseRequestsLimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      CapacityDecreaseRequestsLimitExceededException,
      __BaseException
    >
  );
}
export declare class CapacityReservationPendingException extends __BaseException {
  readonly name: "CapacityReservationPendingException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      CapacityReservationPendingException,
      __BaseException
    >
  );
}
export declare const CapacityReservationStateEnum: {
  readonly FAILED: "failed";
  readonly PENDING: "pending";
  readonly PROVISIONED: "provisioned";
  readonly REBALANCING: "rebalancing";
};
export type CapacityReservationStateEnum =
  (typeof CapacityReservationStateEnum)[keyof typeof CapacityReservationStateEnum];
export interface CapacityReservationStatus {
  Code?: CapacityReservationStateEnum | undefined;
  Reason?: string | undefined;
}
export declare class CapacityUnitsLimitExceededException extends __BaseException {
  readonly name: "CapacityUnitsLimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      CapacityUnitsLimitExceededException,
      __BaseException
    >
  );
}
export interface Cipher {
  Name?: string | undefined;
  Priority?: number | undefined;
}
export declare const TrustStoreAssociationStatusEnum: {
  readonly ACTIVE: "active";
  readonly REMOVED: "removed";
};
export type TrustStoreAssociationStatusEnum =
  (typeof TrustStoreAssociationStatusEnum)[keyof typeof TrustStoreAssociationStatusEnum];
export interface MutualAuthenticationAttributes {
  Mode?: string | undefined;
  TrustStoreArn?: string | undefined;
  IgnoreClientCertificateExpiry?: boolean | undefined;
  TrustStoreAssociationStatus?: TrustStoreAssociationStatusEnum | undefined;
  AdvertiseTrustStoreCaNames?: AdvertiseTrustStoreCaNamesEnum | undefined;
}
export declare const ProtocolEnum: {
  readonly GENEVE: "GENEVE";
  readonly HTTP: "HTTP";
  readonly HTTPS: "HTTPS";
  readonly TCP: "TCP";
  readonly TCP_UDP: "TCP_UDP";
  readonly TLS: "TLS";
  readonly UDP: "UDP";
};
export type ProtocolEnum = (typeof ProtocolEnum)[keyof typeof ProtocolEnum];
export interface CreateListenerInput {
  LoadBalancerArn: string | undefined;
  Protocol?: ProtocolEnum | undefined;
  Port?: number | undefined;
  SslPolicy?: string | undefined;
  Certificates?: Certificate[] | undefined;
  DefaultActions: Action[] | undefined;
  AlpnPolicy?: string[] | undefined;
  Tags?: Tag[] | undefined;
  MutualAuthentication?: MutualAuthenticationAttributes | undefined;
}
export interface Listener {
  ListenerArn?: string | undefined;
  LoadBalancerArn?: string | undefined;
  Port?: number | undefined;
  Protocol?: ProtocolEnum | undefined;
  Certificates?: Certificate[] | undefined;
  SslPolicy?: string | undefined;
  DefaultActions?: Action[] | undefined;
  AlpnPolicy?: string[] | undefined;
  MutualAuthentication?: MutualAuthenticationAttributes | undefined;
}
export interface CreateListenerOutput {
  Listeners?: Listener[] | undefined;
}
export declare class DuplicateListenerException extends __BaseException {
  readonly name: "DuplicateListenerException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<DuplicateListenerException, __BaseException>
  );
}
export declare class IncompatibleProtocolsException extends __BaseException {
  readonly name: "IncompatibleProtocolsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<IncompatibleProtocolsException, __BaseException>
  );
}
export declare class InvalidConfigurationRequestException extends __BaseException {
  readonly name: "InvalidConfigurationRequestException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      InvalidConfigurationRequestException,
      __BaseException
    >
  );
}
export declare class InvalidLoadBalancerActionException extends __BaseException {
  readonly name: "InvalidLoadBalancerActionException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      InvalidLoadBalancerActionException,
      __BaseException
    >
  );
}
export declare class SSLPolicyNotFoundException extends __BaseException {
  readonly name: "SSLPolicyNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<SSLPolicyNotFoundException, __BaseException>
  );
}
export declare class TargetGroupAssociationLimitException extends __BaseException {
  readonly name: "TargetGroupAssociationLimitException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      TargetGroupAssociationLimitException,
      __BaseException
    >
  );
}
export declare class TooManyActionsException extends __BaseException {
  readonly name: "TooManyActionsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyActionsException, __BaseException>
  );
}
export declare class TooManyListenersException extends __BaseException {
  readonly name: "TooManyListenersException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyListenersException, __BaseException>
  );
}
export declare class TooManyRegistrationsForTargetIdException extends __BaseException {
  readonly name: "TooManyRegistrationsForTargetIdException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      TooManyRegistrationsForTargetIdException,
      __BaseException
    >
  );
}
export declare class TooManyTargetsException extends __BaseException {
  readonly name: "TooManyTargetsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyTargetsException, __BaseException>
  );
}
export declare class TooManyUniqueTargetGroupsPerLoadBalancerException extends __BaseException {
  readonly name: "TooManyUniqueTargetGroupsPerLoadBalancerException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      TooManyUniqueTargetGroupsPerLoadBalancerException,
      __BaseException
    >
  );
}
export declare class TrustStoreNotReadyException extends __BaseException {
  readonly name: "TrustStoreNotReadyException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TrustStoreNotReadyException, __BaseException>
  );
}
export declare class UnsupportedProtocolException extends __BaseException {
  readonly name: "UnsupportedProtocolException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<UnsupportedProtocolException, __BaseException>
  );
}
export declare const EnablePrefixForIpv6SourceNatEnum: {
  readonly OFF: "off";
  readonly ON: "on";
};
export type EnablePrefixForIpv6SourceNatEnum =
  (typeof EnablePrefixForIpv6SourceNatEnum)[keyof typeof EnablePrefixForIpv6SourceNatEnum];
export declare const IpAddressType: {
  readonly DUALSTACK: "dualstack";
  readonly DUALSTACK_WITHOUT_PUBLIC_IPV4: "dualstack-without-public-ipv4";
  readonly IPV4: "ipv4";
};
export type IpAddressType = (typeof IpAddressType)[keyof typeof IpAddressType];
export interface IpamPools {
  Ipv4IpamPoolId?: string | undefined;
}
export declare const LoadBalancerSchemeEnum: {
  readonly INTERNAL: "internal";
  readonly INTERNET_FACING: "internet-facing";
};
export type LoadBalancerSchemeEnum =
  (typeof LoadBalancerSchemeEnum)[keyof typeof LoadBalancerSchemeEnum];
export interface SubnetMapping {
  SubnetId?: string | undefined;
  AllocationId?: string | undefined;
  PrivateIPv4Address?: string | undefined;
  IPv6Address?: string | undefined;
  SourceNatIpv6Prefix?: string | undefined;
}
export declare const LoadBalancerTypeEnum: {
  readonly APPLICATION: "application";
  readonly GATEWAY: "gateway";
  readonly NETWORK: "network";
};
export type LoadBalancerTypeEnum =
  (typeof LoadBalancerTypeEnum)[keyof typeof LoadBalancerTypeEnum];
export interface CreateLoadBalancerInput {
  Name: string | undefined;
  Subnets?: string[] | undefined;
  SubnetMappings?: SubnetMapping[] | undefined;
  SecurityGroups?: string[] | undefined;
  Scheme?: LoadBalancerSchemeEnum | undefined;
  Tags?: Tag[] | undefined;
  Type?: LoadBalancerTypeEnum | undefined;
  IpAddressType?: IpAddressType | undefined;
  CustomerOwnedIpv4Pool?: string | undefined;
  EnablePrefixForIpv6SourceNat?: EnablePrefixForIpv6SourceNatEnum | undefined;
  IpamPools?: IpamPools | undefined;
}
export declare const LoadBalancerStateEnum: {
  readonly ACTIVE: "active";
  readonly ACTIVE_IMPAIRED: "active_impaired";
  readonly FAILED: "failed";
  readonly PROVISIONING: "provisioning";
};
export type LoadBalancerStateEnum =
  (typeof LoadBalancerStateEnum)[keyof typeof LoadBalancerStateEnum];
export interface LoadBalancerState {
  Code?: LoadBalancerStateEnum | undefined;
  Reason?: string | undefined;
}
export interface LoadBalancer {
  LoadBalancerArn?: string | undefined;
  DNSName?: string | undefined;
  CanonicalHostedZoneId?: string | undefined;
  CreatedTime?: Date | undefined;
  LoadBalancerName?: string | undefined;
  Scheme?: LoadBalancerSchemeEnum | undefined;
  VpcId?: string | undefined;
  State?: LoadBalancerState | undefined;
  Type?: LoadBalancerTypeEnum | undefined;
  AvailabilityZones?: AvailabilityZone[] | undefined;
  SecurityGroups?: string[] | undefined;
  IpAddressType?: IpAddressType | undefined;
  CustomerOwnedIpv4Pool?: string | undefined;
  EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic?: string | undefined;
  EnablePrefixForIpv6SourceNat?: EnablePrefixForIpv6SourceNatEnum | undefined;
  IpamPools?: IpamPools | undefined;
}
export interface CreateLoadBalancerOutput {
  LoadBalancers?: LoadBalancer[] | undefined;
}
export declare class DuplicateLoadBalancerNameException extends __BaseException {
  readonly name: "DuplicateLoadBalancerNameException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      DuplicateLoadBalancerNameException,
      __BaseException
    >
  );
}
export declare class InvalidSchemeException extends __BaseException {
  readonly name: "InvalidSchemeException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidSchemeException, __BaseException>
  );
}
export declare class InvalidSecurityGroupException extends __BaseException {
  readonly name: "InvalidSecurityGroupException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidSecurityGroupException, __BaseException>
  );
}
export declare class InvalidSubnetException extends __BaseException {
  readonly name: "InvalidSubnetException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidSubnetException, __BaseException>
  );
}
export declare class OperationNotPermittedException extends __BaseException {
  readonly name: "OperationNotPermittedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<OperationNotPermittedException, __BaseException>
  );
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export declare class SubnetNotFoundException extends __BaseException {
  readonly name: "SubnetNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<SubnetNotFoundException, __BaseException>
  );
}
export declare class TooManyLoadBalancersException extends __BaseException {
  readonly name: "TooManyLoadBalancersException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyLoadBalancersException, __BaseException>
  );
}
export interface HostHeaderConditionConfig {
  Values?: string[] | undefined;
}
export interface HttpHeaderConditionConfig {
  HttpHeaderName?: string | undefined;
  Values?: string[] | undefined;
}
export interface HttpRequestMethodConditionConfig {
  Values?: string[] | undefined;
}
export interface PathPatternConditionConfig {
  Values?: string[] | undefined;
}
export interface QueryStringKeyValuePair {
  Key?: string | undefined;
  Value?: string | undefined;
}
export interface QueryStringConditionConfig {
  Values?: QueryStringKeyValuePair[] | undefined;
}
export interface SourceIpConditionConfig {
  Values?: string[] | undefined;
}
export interface RuleCondition {
  Field?: string | undefined;
  Values?: string[] | undefined;
  HostHeaderConfig?: HostHeaderConditionConfig | undefined;
  PathPatternConfig?: PathPatternConditionConfig | undefined;
  HttpHeaderConfig?: HttpHeaderConditionConfig | undefined;
  QueryStringConfig?: QueryStringConditionConfig | undefined;
  HttpRequestMethodConfig?: HttpRequestMethodConditionConfig | undefined;
  SourceIpConfig?: SourceIpConditionConfig | undefined;
}
export interface CreateRuleInput {
  ListenerArn: string | undefined;
  Conditions: RuleCondition[] | undefined;
  Priority: number | undefined;
  Actions: Action[] | undefined;
  Tags?: Tag[] | undefined;
}
export interface Rule {
  RuleArn?: string | undefined;
  Priority?: string | undefined;
  Conditions?: RuleCondition[] | undefined;
  Actions?: Action[] | undefined;
  IsDefault?: boolean | undefined;
}
export interface CreateRuleOutput {
  Rules?: Rule[] | undefined;
}
export declare class PriorityInUseException extends __BaseException {
  readonly name: "PriorityInUseException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<PriorityInUseException, __BaseException>
  );
}
export declare class TooManyRulesException extends __BaseException {
  readonly name: "TooManyRulesException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyRulesException, __BaseException>
  );
}
export declare class TooManyTargetGroupsException extends __BaseException {
  readonly name: "TooManyTargetGroupsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyTargetGroupsException, __BaseException>
  );
}
export declare const TargetGroupIpAddressTypeEnum: {
  readonly IPV4: "ipv4";
  readonly IPV6: "ipv6";
};
export type TargetGroupIpAddressTypeEnum =
  (typeof TargetGroupIpAddressTypeEnum)[keyof typeof TargetGroupIpAddressTypeEnum];
export interface Matcher {
  HttpCode?: string | undefined;
  GrpcCode?: string | undefined;
}
export declare const TargetTypeEnum: {
  readonly ALB: "alb";
  readonly INSTANCE: "instance";
  readonly IP: "ip";
  readonly LAMBDA: "lambda";
};
export type TargetTypeEnum =
  (typeof TargetTypeEnum)[keyof typeof TargetTypeEnum];
export interface CreateTargetGroupInput {
  Name: string | undefined;
  Protocol?: ProtocolEnum | undefined;
  ProtocolVersion?: string | undefined;
  Port?: number | undefined;
  VpcId?: string | undefined;
  HealthCheckProtocol?: ProtocolEnum | undefined;
  HealthCheckPort?: string | undefined;
  HealthCheckEnabled?: boolean | undefined;
  HealthCheckPath?: string | undefined;
  HealthCheckIntervalSeconds?: number | undefined;
  HealthCheckTimeoutSeconds?: number | undefined;
  HealthyThresholdCount?: number | undefined;
  UnhealthyThresholdCount?: number | undefined;
  Matcher?: Matcher | undefined;
  TargetType?: TargetTypeEnum | undefined;
  Tags?: Tag[] | undefined;
  IpAddressType?: TargetGroupIpAddressTypeEnum | undefined;
}
export interface TargetGroup {
  TargetGroupArn?: string | undefined;
  TargetGroupName?: string | undefined;
  Protocol?: ProtocolEnum | undefined;
  Port?: number | undefined;
  VpcId?: string | undefined;
  HealthCheckProtocol?: ProtocolEnum | undefined;
  HealthCheckPort?: string | undefined;
  HealthCheckEnabled?: boolean | undefined;
  HealthCheckIntervalSeconds?: number | undefined;
  HealthCheckTimeoutSeconds?: number | undefined;
  HealthyThresholdCount?: number | undefined;
  UnhealthyThresholdCount?: number | undefined;
  HealthCheckPath?: string | undefined;
  Matcher?: Matcher | undefined;
  LoadBalancerArns?: string[] | undefined;
  TargetType?: TargetTypeEnum | undefined;
  ProtocolVersion?: string | undefined;
  IpAddressType?: TargetGroupIpAddressTypeEnum | undefined;
}
export interface CreateTargetGroupOutput {
  TargetGroups?: TargetGroup[] | undefined;
}
export declare class DuplicateTargetGroupNameException extends __BaseException {
  readonly name: "DuplicateTargetGroupNameException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      DuplicateTargetGroupNameException,
      __BaseException
    >
  );
}
export interface CreateTrustStoreInput {
  Name: string | undefined;
  CaCertificatesBundleS3Bucket: string | undefined;
  CaCertificatesBundleS3Key: string | undefined;
  CaCertificatesBundleS3ObjectVersion?: string | undefined;
  Tags?: Tag[] | undefined;
}
export declare const TrustStoreStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATING: "CREATING";
};
export type TrustStoreStatus =
  (typeof TrustStoreStatus)[keyof typeof TrustStoreStatus];
export interface TrustStore {
  Name?: string | undefined;
  TrustStoreArn?: string | undefined;
  Status?: TrustStoreStatus | undefined;
  NumberOfCaCertificates?: number | undefined;
  TotalRevokedEntries?: number | undefined;
}
export interface CreateTrustStoreOutput {
  TrustStores?: TrustStore[] | undefined;
}
export declare class DuplicateTrustStoreNameException extends __BaseException {
  readonly name: "DuplicateTrustStoreNameException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      DuplicateTrustStoreNameException,
      __BaseException
    >
  );
}
export declare class InvalidCaCertificatesBundleException extends __BaseException {
  readonly name: "InvalidCaCertificatesBundleException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      InvalidCaCertificatesBundleException,
      __BaseException
    >
  );
}
export declare class TooManyTrustStoresException extends __BaseException {
  readonly name: "TooManyTrustStoresException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TooManyTrustStoresException, __BaseException>
  );
}
export declare class DeleteAssociationSameAccountException extends __BaseException {
  readonly name: "DeleteAssociationSameAccountException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      DeleteAssociationSameAccountException,
      __BaseException
    >
  );
}
export interface DeleteListenerInput {
  ListenerArn: string | undefined;
}
export interface DeleteListenerOutput {}
export interface DeleteLoadBalancerInput {
  LoadBalancerArn: string | undefined;
}
export interface DeleteLoadBalancerOutput {}
export interface DeleteRuleInput {
  RuleArn: string | undefined;
}
export interface DeleteRuleOutput {}
export interface DeleteSharedTrustStoreAssociationInput {
  TrustStoreArn: string | undefined;
  ResourceArn: string | undefined;
}
export interface DeleteSharedTrustStoreAssociationOutput {}
export declare class TrustStoreAssociationNotFoundException extends __BaseException {
  readonly name: "TrustStoreAssociationNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      TrustStoreAssociationNotFoundException,
      __BaseException
    >
  );
}
export interface DeleteTargetGroupInput {
  TargetGroupArn: string | undefined;
}
export interface DeleteTargetGroupOutput {}
export interface DeleteTrustStoreInput {
  TrustStoreArn: string | undefined;
}
export interface DeleteTrustStoreOutput {}
export declare class TrustStoreInUseException extends __BaseException {
  readonly name: "TrustStoreInUseException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TrustStoreInUseException, __BaseException>
  );
}
export interface TargetDescription {
  Id: string | undefined;
  Port?: number | undefined;
  AvailabilityZone?: string | undefined;
}
export interface DeregisterTargetsInput {
  TargetGroupArn: string | undefined;
  Targets: TargetDescription[] | undefined;
}
export interface DeregisterTargetsOutput {}
export declare class InvalidTargetException extends __BaseException {
  readonly name: "InvalidTargetException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidTargetException, __BaseException>
  );
}
export interface DescribeAccountLimitsInput {
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface Limit {
  Name?: string | undefined;
  Max?: string | undefined;
}
export interface DescribeAccountLimitsOutput {
  Limits?: Limit[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeCapacityReservationInput {
  LoadBalancerArn: string | undefined;
}
export interface ZonalCapacityReservationState {
  State?: CapacityReservationStatus | undefined;
  AvailabilityZone?: string | undefined;
  EffectiveCapacityUnits?: number | undefined;
}
export interface MinimumLoadBalancerCapacity {
  CapacityUnits?: number | undefined;
}
export interface DescribeCapacityReservationOutput {
  LastModifiedTime?: Date | undefined;
  DecreaseRequestsRemaining?: number | undefined;
  MinimumLoadBalancerCapacity?: MinimumLoadBalancerCapacity | undefined;
  CapacityReservationState?: ZonalCapacityReservationState[] | undefined;
}
export interface DescribeListenerAttributesInput {
  ListenerArn: string | undefined;
}
export interface ListenerAttribute {
  Key?: string | undefined;
  Value?: string | undefined;
}
export interface DescribeListenerAttributesOutput {
  Attributes?: ListenerAttribute[] | undefined;
}
export interface DescribeListenerCertificatesInput {
  ListenerArn: string | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface DescribeListenerCertificatesOutput {
  Certificates?: Certificate[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeListenersInput {
  LoadBalancerArn?: string | undefined;
  ListenerArns?: string[] | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface DescribeListenersOutput {
  Listeners?: Listener[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeLoadBalancerAttributesInput {
  LoadBalancerArn: string | undefined;
}
export interface LoadBalancerAttribute {
  Key?: string | undefined;
  Value?: string | undefined;
}
export interface DescribeLoadBalancerAttributesOutput {
  Attributes?: LoadBalancerAttribute[] | undefined;
}
export interface DescribeLoadBalancersInput {
  LoadBalancerArns?: string[] | undefined;
  Names?: string[] | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface DescribeLoadBalancersOutput {
  LoadBalancers?: LoadBalancer[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeRulesInput {
  ListenerArn?: string | undefined;
  RuleArns?: string[] | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface DescribeRulesOutput {
  Rules?: Rule[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeSSLPoliciesInput {
  Names?: string[] | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
  LoadBalancerType?: LoadBalancerTypeEnum | undefined;
}
export interface SslPolicy {
  SslProtocols?: string[] | undefined;
  Ciphers?: Cipher[] | undefined;
  Name?: string | undefined;
  SupportedLoadBalancerTypes?: string[] | undefined;
}
export interface DescribeSSLPoliciesOutput {
  SslPolicies?: SslPolicy[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeTagsInput {
  ResourceArns: string[] | undefined;
}
export interface TagDescription {
  ResourceArn?: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface DescribeTagsOutput {
  TagDescriptions?: TagDescription[] | undefined;
}
export interface DescribeTargetGroupAttributesInput {
  TargetGroupArn: string | undefined;
}
export interface TargetGroupAttribute {
  Key?: string | undefined;
  Value?: string | undefined;
}
export interface DescribeTargetGroupAttributesOutput {
  Attributes?: TargetGroupAttribute[] | undefined;
}
export interface DescribeTargetGroupsInput {
  LoadBalancerArn?: string | undefined;
  TargetGroupArns?: string[] | undefined;
  Names?: string[] | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface DescribeTargetGroupsOutput {
  TargetGroups?: TargetGroup[] | undefined;
  NextMarker?: string | undefined;
}
export declare const DescribeTargetHealthInputIncludeEnum: {
  readonly ALL: "All";
  readonly ANOMALY: "AnomalyDetection";
};
export type DescribeTargetHealthInputIncludeEnum =
  (typeof DescribeTargetHealthInputIncludeEnum)[keyof typeof DescribeTargetHealthInputIncludeEnum];
export interface DescribeTargetHealthInput {
  TargetGroupArn: string | undefined;
  Targets?: TargetDescription[] | undefined;
  Include?: DescribeTargetHealthInputIncludeEnum[] | undefined;
}
export declare const TargetHealthReasonEnum: {
  readonly DEREGISTRATION_IN_PROGRESS: "Target.DeregistrationInProgress";
  readonly FAILED_HEALTH_CHECKS: "Target.FailedHealthChecks";
  readonly HEALTH_CHECK_DISABLED: "Target.HealthCheckDisabled";
  readonly INITIAL_HEALTH_CHECKING: "Elb.InitialHealthChecking";
  readonly INTERNAL_ERROR: "Elb.InternalError";
  readonly INVALID_STATE: "Target.InvalidState";
  readonly IP_UNUSABLE: "Target.IpUnusable";
  readonly NOT_IN_USE: "Target.NotInUse";
  readonly NOT_REGISTERED: "Target.NotRegistered";
  readonly REGISTRATION_IN_PROGRESS: "Elb.RegistrationInProgress";
  readonly RESPONSE_CODE_MISMATCH: "Target.ResponseCodeMismatch";
  readonly TIMEOUT: "Target.Timeout";
};
export type TargetHealthReasonEnum =
  (typeof TargetHealthReasonEnum)[keyof typeof TargetHealthReasonEnum];
export declare const TargetHealthStateEnum: {
  readonly DRAINING: "draining";
  readonly HEALTHY: "healthy";
  readonly INITIAL: "initial";
  readonly UNAVAILABLE: "unavailable";
  readonly UNHEALTHY: "unhealthy";
  readonly UNHEALTHY_DRAINING: "unhealthy.draining";
  readonly UNUSED: "unused";
};
export type TargetHealthStateEnum =
  (typeof TargetHealthStateEnum)[keyof typeof TargetHealthStateEnum];
export interface TargetHealth {
  State?: TargetHealthStateEnum | undefined;
  Reason?: TargetHealthReasonEnum | undefined;
  Description?: string | undefined;
}
export interface TargetHealthDescription {
  Target?: TargetDescription | undefined;
  HealthCheckPort?: string | undefined;
  TargetHealth?: TargetHealth | undefined;
  AnomalyDetection?: AnomalyDetection | undefined;
  AdministrativeOverride?: AdministrativeOverride | undefined;
}
export interface DescribeTargetHealthOutput {
  TargetHealthDescriptions?: TargetHealthDescription[] | undefined;
}
export declare class HealthUnavailableException extends __BaseException {
  readonly name: "HealthUnavailableException";
  readonly $fault: "server";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<HealthUnavailableException, __BaseException>
  );
}
export interface DescribeTrustStoreAssociationsInput {
  TrustStoreArn: string | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface TrustStoreAssociation {
  ResourceArn?: string | undefined;
}
export interface DescribeTrustStoreAssociationsOutput {
  TrustStoreAssociations?: TrustStoreAssociation[] | undefined;
  NextMarker?: string | undefined;
}
export interface DescribeTrustStoreRevocation {
  TrustStoreArn?: string | undefined;
  RevocationId?: number | undefined;
  RevocationType?: RevocationType | undefined;
  NumberOfRevokedEntries?: number | undefined;
}
export interface DescribeTrustStoreRevocationsInput {
  TrustStoreArn: string | undefined;
  RevocationIds?: number[] | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface DescribeTrustStoreRevocationsOutput {
  TrustStoreRevocations?: DescribeTrustStoreRevocation[] | undefined;
  NextMarker?: string | undefined;
}
export declare class RevocationIdNotFoundException extends __BaseException {
  readonly name: "RevocationIdNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<RevocationIdNotFoundException, __BaseException>
  );
}
export interface DescribeTrustStoresInput {
  TrustStoreArns?: string[] | undefined;
  Names?: string[] | undefined;
  Marker?: string | undefined;
  PageSize?: number | undefined;
}
export interface DescribeTrustStoresOutput {
  TrustStores?: TrustStore[] | undefined;
  NextMarker?: string | undefined;
}
export interface GetResourcePolicyInput {
  ResourceArn: string | undefined;
}
export interface GetResourcePolicyOutput {
  Policy?: string | undefined;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface GetTrustStoreCaCertificatesBundleInput {
  TrustStoreArn: string | undefined;
}
export interface GetTrustStoreCaCertificatesBundleOutput {
  Location?: string | undefined;
}
export interface GetTrustStoreRevocationContentInput {
  TrustStoreArn: string | undefined;
  RevocationId: number | undefined;
}
export interface GetTrustStoreRevocationContentOutput {
  Location?: string | undefined;
}
export declare class InsufficientCapacityException extends __BaseException {
  readonly name: "InsufficientCapacityException";
  readonly $fault: "server";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InsufficientCapacityException, __BaseException>
  );
}
export interface ModifyCapacityReservationInput {
  LoadBalancerArn: string | undefined;
  MinimumLoadBalancerCapacity?: MinimumLoadBalancerCapacity | undefined;
  ResetCapacityReservation?: boolean | undefined;
}
export interface ModifyCapacityReservationOutput {
  LastModifiedTime?: Date | undefined;
  DecreaseRequestsRemaining?: number | undefined;
  MinimumLoadBalancerCapacity?: MinimumLoadBalancerCapacity | undefined;
  CapacityReservationState?: ZonalCapacityReservationState[] | undefined;
}
export declare class PriorRequestNotCompleteException extends __BaseException {
  readonly name: "PriorRequestNotCompleteException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      PriorRequestNotCompleteException,
      __BaseException
    >
  );
}
export declare const RemoveIpamPoolEnum: {
  readonly ipv4: "ipv4";
};
export type RemoveIpamPoolEnum =
  (typeof RemoveIpamPoolEnum)[keyof typeof RemoveIpamPoolEnum];
export interface ModifyIpPoolsInput {
  LoadBalancerArn: string | undefined;
  IpamPools?: IpamPools | undefined;
  RemoveIpamPools?: RemoveIpamPoolEnum[] | undefined;
}
export interface ModifyIpPoolsOutput {
  IpamPools?: IpamPools | undefined;
}
export interface ModifyListenerInput {
  ListenerArn: string | undefined;
  Port?: number | undefined;
  Protocol?: ProtocolEnum | undefined;
  SslPolicy?: string | undefined;
  Certificates?: Certificate[] | undefined;
  DefaultActions?: Action[] | undefined;
  AlpnPolicy?: string[] | undefined;
  MutualAuthentication?: MutualAuthenticationAttributes | undefined;
}
export interface ModifyListenerOutput {
  Listeners?: Listener[] | undefined;
}
export interface ModifyListenerAttributesInput {
  ListenerArn: string | undefined;
  Attributes: ListenerAttribute[] | undefined;
}
export interface ModifyListenerAttributesOutput {
  Attributes?: ListenerAttribute[] | undefined;
}
export interface ModifyLoadBalancerAttributesInput {
  LoadBalancerArn: string | undefined;
  Attributes: LoadBalancerAttribute[] | undefined;
}
export interface ModifyLoadBalancerAttributesOutput {
  Attributes?: LoadBalancerAttribute[] | undefined;
}
export interface ModifyRuleInput {
  RuleArn: string | undefined;
  Conditions?: RuleCondition[] | undefined;
  Actions?: Action[] | undefined;
}
export interface ModifyRuleOutput {
  Rules?: Rule[] | undefined;
}
export interface ModifyTargetGroupInput {
  TargetGroupArn: string | undefined;
  HealthCheckProtocol?: ProtocolEnum | undefined;
  HealthCheckPort?: string | undefined;
  HealthCheckPath?: string | undefined;
  HealthCheckEnabled?: boolean | undefined;
  HealthCheckIntervalSeconds?: number | undefined;
  HealthCheckTimeoutSeconds?: number | undefined;
  HealthyThresholdCount?: number | undefined;
  UnhealthyThresholdCount?: number | undefined;
  Matcher?: Matcher | undefined;
}
export interface ModifyTargetGroupOutput {
  TargetGroups?: TargetGroup[] | undefined;
}
export interface ModifyTargetGroupAttributesInput {
  TargetGroupArn: string | undefined;
  Attributes: TargetGroupAttribute[] | undefined;
}
export interface ModifyTargetGroupAttributesOutput {
  Attributes?: TargetGroupAttribute[] | undefined;
}
export interface ModifyTrustStoreInput {
  TrustStoreArn: string | undefined;
  CaCertificatesBundleS3Bucket: string | undefined;
  CaCertificatesBundleS3Key: string | undefined;
  CaCertificatesBundleS3ObjectVersion?: string | undefined;
}
export interface ModifyTrustStoreOutput {
  TrustStores?: TrustStore[] | undefined;
}
export interface RegisterTargetsInput {
  TargetGroupArn: string | undefined;
  Targets: TargetDescription[] | undefined;
}
export interface RegisterTargetsOutput {}
export interface RemoveListenerCertificatesInput {
  ListenerArn: string | undefined;
  Certificates: Certificate[] | undefined;
}
export interface RemoveListenerCertificatesOutput {}
export interface RemoveTagsInput {
  ResourceArns: string[] | undefined;
  TagKeys: string[] | undefined;
}
export interface RemoveTagsOutput {}
export interface RemoveTrustStoreRevocationsInput {
  TrustStoreArn: string | undefined;
  RevocationIds: number[] | undefined;
}
export interface RemoveTrustStoreRevocationsOutput {}
export interface SetIpAddressTypeInput {
  LoadBalancerArn: string | undefined;
  IpAddressType: IpAddressType | undefined;
}
export interface SetIpAddressTypeOutput {
  IpAddressType?: IpAddressType | undefined;
}
export interface RulePriorityPair {
  RuleArn?: string | undefined;
  Priority?: number | undefined;
}
export interface SetRulePrioritiesInput {
  RulePriorities: RulePriorityPair[] | undefined;
}
export interface SetRulePrioritiesOutput {
  Rules?: Rule[] | undefined;
}
export declare const EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum: {
  readonly off: "off";
  readonly on: "on";
};
export type EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum =
  (typeof EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum)[keyof typeof EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum];
export interface SetSecurityGroupsInput {
  LoadBalancerArn: string | undefined;
  SecurityGroups: string[] | undefined;
  EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic?:
    | EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum
    | undefined;
}
export interface SetSecurityGroupsOutput {
  SecurityGroupIds?: string[] | undefined;
  EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic?:
    | EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum
    | undefined;
}
export interface SetSubnetsInput {
  LoadBalancerArn: string | undefined;
  Subnets?: string[] | undefined;
  SubnetMappings?: SubnetMapping[] | undefined;
  IpAddressType?: IpAddressType | undefined;
  EnablePrefixForIpv6SourceNat?: EnablePrefixForIpv6SourceNatEnum | undefined;
}
export interface SetSubnetsOutput {
  AvailabilityZones?: AvailabilityZone[] | undefined;
  IpAddressType?: IpAddressType | undefined;
  EnablePrefixForIpv6SourceNat?: EnablePrefixForIpv6SourceNatEnum | undefined;
}
