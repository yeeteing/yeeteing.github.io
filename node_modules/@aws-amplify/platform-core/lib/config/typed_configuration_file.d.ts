import { z } from 'zod';
import fsp from 'fs/promises';
import { existsSync } from 'fs';
import { TypedConfigurationFile } from './typed_configuration_file_factory';
/**
 * A configuration file with content validation.
 */
export declare class ZodSchemaTypedConfigurationFile<T extends z.ZodTypeAny> implements TypedConfigurationFile<z.infer<T>> {
    private readonly schema;
    private readonly defaultValue;
    private readonly _fsp;
    private readonly _existsSync;
    private readonly filePath;
    private data;
    /**
     * Creates configuration file with content validation.
     */
    constructor(schema: T, fileName: string, defaultValue: z.infer<T>, _fsp?: typeof fsp, _existsSync?: typeof existsSync);
    read: () => Promise<z.infer<T>>;
    write: (data: z.infer<T>) => Promise<void>;
    delete: () => Promise<void>;
}
//# sourceMappingURL=typed_configuration_file.d.ts.map