import { ClientConfigFormat, } from '../client-config-types/client_config.js';
/**
 * Formats client config to desired format
 */
export class ClientConfigFormatterDefault {
    /**
     * Creates new client config formatter.
     */
    constructor() { }
    format = (clientConfig, format) => {
        switch (format) {
            case ClientConfigFormat.DART: {
                // Using raw string, i.e. r''' to disable Dart's interpolations
                // because we're using special characters like $ in some outputs.
                return `const amplifyConfig = r'''${JSON.stringify(clientConfig, null, 2)}''';`;
            }
            case ClientConfigFormat.JSON:
                return JSON.stringify(clientConfig, null, 2);
            default:
                throw new Error(`Unsupported client config format ${format} for client config`);
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50X2NvbmZpZ19mb3JtYXR0ZXJfZGVmYXVsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbGllbnQtY29uZmlnLXdyaXRlci9jbGllbnRfY29uZmlnX2Zvcm1hdHRlcl9kZWZhdWx0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxrQkFBa0IsR0FDbkIsTUFBTSx5Q0FBeUMsQ0FBQztBQUdqRDs7R0FFRztBQUNILE1BQU0sT0FBTyw0QkFBNEI7SUFDdkM7O09BRUc7SUFDSCxnQkFBZSxDQUFDO0lBRWhCLE1BQU0sR0FBRyxDQUFDLFlBQTBCLEVBQUUsTUFBMEIsRUFBVSxFQUFFO1FBQzFFLFFBQVEsTUFBTSxFQUFFLENBQUM7WUFDZixLQUFLLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQzdCLCtEQUErRDtnQkFDL0QsaUVBQWlFO2dCQUNqRSxPQUFPLDZCQUE2QixJQUFJLENBQUMsU0FBUyxDQUNoRCxZQUFZLEVBQ1osSUFBSSxFQUNKLENBQUMsQ0FDRixNQUFNLENBQUM7WUFDVixDQUFDO1lBQ0QsS0FBSyxrQkFBa0IsQ0FBQyxJQUFJO2dCQUMxQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztZQUMvQztnQkFDRSxNQUFNLElBQUksS0FBSyxDQUNiLG9DQUFvQyxNQUFNLG9CQUFvQixDQUMvRCxDQUFDO1FBQ04sQ0FBQztJQUNILENBQUMsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2xpZW50Q29uZmlnLFxuICBDbGllbnRDb25maWdGb3JtYXQsXG59IGZyb20gJy4uL2NsaWVudC1jb25maWctdHlwZXMvY2xpZW50X2NvbmZpZy5qcyc7XG5pbXBvcnQgeyBDbGllbnRDb25maWdGb3JtYXR0ZXIgfSBmcm9tICcuL2NsaWVudF9jb25maWdfZm9ybWF0dGVyLmpzJztcblxuLyoqXG4gKiBGb3JtYXRzIGNsaWVudCBjb25maWcgdG8gZGVzaXJlZCBmb3JtYXRcbiAqL1xuZXhwb3J0IGNsYXNzIENsaWVudENvbmZpZ0Zvcm1hdHRlckRlZmF1bHQgaW1wbGVtZW50cyBDbGllbnRDb25maWdGb3JtYXR0ZXIge1xuICAvKipcbiAgICogQ3JlYXRlcyBuZXcgY2xpZW50IGNvbmZpZyBmb3JtYXR0ZXIuXG4gICAqL1xuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgZm9ybWF0ID0gKGNsaWVudENvbmZpZzogQ2xpZW50Q29uZmlnLCBmb3JtYXQ6IENsaWVudENvbmZpZ0Zvcm1hdCk6IHN0cmluZyA9PiB7XG4gICAgc3dpdGNoIChmb3JtYXQpIHtcbiAgICAgIGNhc2UgQ2xpZW50Q29uZmlnRm9ybWF0LkRBUlQ6IHtcbiAgICAgICAgLy8gVXNpbmcgcmF3IHN0cmluZywgaS5lLiByJycnIHRvIGRpc2FibGUgRGFydCdzIGludGVycG9sYXRpb25zXG4gICAgICAgIC8vIGJlY2F1c2Ugd2UncmUgdXNpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIGxpa2UgJCBpbiBzb21lIG91dHB1dHMuXG4gICAgICAgIHJldHVybiBgY29uc3QgYW1wbGlmeUNvbmZpZyA9IHInJycke0pTT04uc3RyaW5naWZ5KFxuICAgICAgICAgIGNsaWVudENvbmZpZyxcbiAgICAgICAgICBudWxsLFxuICAgICAgICAgIDIsXG4gICAgICAgICl9JycnO2A7XG4gICAgICB9XG4gICAgICBjYXNlIENsaWVudENvbmZpZ0Zvcm1hdC5KU09OOlxuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoY2xpZW50Q29uZmlnLCBudWxsLCAyKTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgVW5zdXBwb3J0ZWQgY2xpZW50IGNvbmZpZyBmb3JtYXQgJHtmb3JtYXR9IGZvciBjbGllbnQgY29uZmlnYCxcbiAgICAgICAgKTtcbiAgICB9XG4gIH07XG59XG4iXX0=