import { ObjectTypeDefinitionNode, FieldDefinitionNode } from 'graphql';
export declare const NUMERIC_VALIDATION_TYPES: readonly ["gt", "lt", "gte", "lte"];
export declare const STRING_VALIDATION_TYPES: readonly ["minLength", "maxLength", "startsWith", "endsWith", "matches"];
export declare const VALIDATION_TYPES: readonly ["gt", "lt", "gte", "lte", "minLength", "maxLength", "startsWith", "endsWith", "matches"];
export type NumericValidationType = (typeof NUMERIC_VALIDATION_TYPES)[number];
export type StringValidationType = (typeof STRING_VALIDATION_TYPES)[number];
export type ValidationType = NumericValidationType | StringValidationType;
export interface ValidateDirectiveArgs {
    type: ValidationType;
    value: string;
    errorMessage: string;
}
export interface ValidationRuleConfig {
    validationType: ValidationType;
    validationValue: string;
    errorMessage: string;
}
export interface ValidateDirectiveConfiguration extends ValidationRuleConfig {
    parentNode: ObjectTypeDefinitionNode;
    fieldNode: FieldDefinitionNode;
}
export type ValidationsByField = {
    [fieldName: string]: ValidationRuleConfig[];
};
//# sourceMappingURL=types.d.ts.map