"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isMessageRelevantForLevel = isMessageRelevantForLevel;
/**
 * Keep this list ordered from most to least verbose.
 * Every level "includes" all of the levels below it.
 * This is used to compare levels of messages to determine what should be logged.
 */
const levels = [
    'trace',
    'debug',
    'info',
    'warn',
    'result',
    'error',
];
// compare levels helper
// helper to convert the array into a map with numbers
const orderedLevels = Object.fromEntries(Object.entries(levels).map(a => a.reverse()));
function compareFn(a, b) {
    return orderedLevels[a] - orderedLevels[b];
}
/**
 * Determines if a message is relevant for the given log level.
 *
 * @param msg - The message to compare.
 * @param level - The level to compare against.
 * @returns true if the message is relevant for the given level.
 */
function isMessageRelevantForLevel(msg, level) {
    return compareFn(msg.level, level) >= 0;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGV2ZWwtcHJpb3JpdHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsZXZlbC1wcmlvcml0eS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQThCQSw4REFFQztBQTlCRDs7OztHQUlHO0FBQ0gsTUFBTSxNQUFNLEdBQUc7SUFDYixPQUFPO0lBQ1AsT0FBTztJQUNQLE1BQU07SUFDTixNQUFNO0lBQ04sUUFBUTtJQUNSLE9BQU87Q0FDQyxDQUFDO0FBRVgsd0JBQXdCO0FBQ3hCLHNEQUFzRDtBQUN0RCxNQUFNLGFBQWEsR0FBMEMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDOUgsU0FBUyxTQUFTLENBQUMsQ0FBaUIsRUFBRSxDQUFpQjtJQUNyRCxPQUFPLGFBQWEsQ0FBQyxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0MsQ0FBQztBQUVEOzs7Ozs7R0FNRztBQUNILFNBQWdCLHlCQUF5QixDQUFDLEdBQThCLEVBQUUsS0FBcUI7SUFDN0YsT0FBTyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDMUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgSW9NZXNzYWdlTGV2ZWwgfSBmcm9tICcuLi8nO1xuXG4vKipcbiAqIEtlZXAgdGhpcyBsaXN0IG9yZGVyZWQgZnJvbSBtb3N0IHRvIGxlYXN0IHZlcmJvc2UuXG4gKiBFdmVyeSBsZXZlbCBcImluY2x1ZGVzXCIgYWxsIG9mIHRoZSBsZXZlbHMgYmVsb3cgaXQuXG4gKiBUaGlzIGlzIHVzZWQgdG8gY29tcGFyZSBsZXZlbHMgb2YgbWVzc2FnZXMgdG8gZGV0ZXJtaW5lIHdoYXQgc2hvdWxkIGJlIGxvZ2dlZC5cbiAqL1xuY29uc3QgbGV2ZWxzID0gW1xuICAndHJhY2UnLFxuICAnZGVidWcnLFxuICAnaW5mbycsXG4gICd3YXJuJyxcbiAgJ3Jlc3VsdCcsXG4gICdlcnJvcicsXG5dIGFzIGNvbnN0O1xuXG4vLyBjb21wYXJlIGxldmVscyBoZWxwZXJcbi8vIGhlbHBlciB0byBjb252ZXJ0IHRoZSBhcnJheSBpbnRvIGEgbWFwIHdpdGggbnVtYmVyc1xuY29uc3Qgb3JkZXJlZExldmVsczogUmVjb3JkPHR5cGVvZiBsZXZlbHNbbnVtYmVyXSwgbnVtYmVyPiA9IE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhsZXZlbHMpLm1hcChhID0+IGEucmV2ZXJzZSgpKSk7XG5mdW5jdGlvbiBjb21wYXJlRm4oYTogSW9NZXNzYWdlTGV2ZWwsIGI6IElvTWVzc2FnZUxldmVsKTogbnVtYmVyIHtcbiAgcmV0dXJuIG9yZGVyZWRMZXZlbHNbYV0gLSBvcmRlcmVkTGV2ZWxzW2JdO1xufVxuXG4vKipcbiAqIERldGVybWluZXMgaWYgYSBtZXNzYWdlIGlzIHJlbGV2YW50IGZvciB0aGUgZ2l2ZW4gbG9nIGxldmVsLlxuICpcbiAqIEBwYXJhbSBtc2cgLSBUaGUgbWVzc2FnZSB0byBjb21wYXJlLlxuICogQHBhcmFtIGxldmVsIC0gVGhlIGxldmVsIHRvIGNvbXBhcmUgYWdhaW5zdC5cbiAqIEByZXR1cm5zIHRydWUgaWYgdGhlIG1lc3NhZ2UgaXMgcmVsZXZhbnQgZm9yIHRoZSBnaXZlbiBsZXZlbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTWVzc2FnZVJlbGV2YW50Rm9yTGV2ZWwobXNnOiB7IGxldmVsOiBJb01lc3NhZ2VMZXZlbCB9LCBsZXZlbDogSW9NZXNzYWdlTGV2ZWwpOiBib29sZWFuIHtcbiAgcmV0dXJuIGNvbXBhcmVGbihtc2cubGV2ZWwsIGxldmVsKSA+PSAwO1xufVxuXG4iXX0=