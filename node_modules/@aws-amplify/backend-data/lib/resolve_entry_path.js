import { AmplifyUserError, FilePathExtractor, } from '@aws-amplify/platform-core';
import { dirname, join } from 'path';
import fs from 'fs';
/**
 * Resolve JS Resolver Handler or Sql Reference Handler entry path to absolute path
 * @param entry handler entry
 * @returns resolved absolute file path
 */
export const resolveEntryPath = (entry) => {
    if (typeof entry === 'string') {
        if (fs.existsSync(entry)) {
            return entry;
        }
        throw new AmplifyUserError('InvalidPathError', {
            message: `Cannot find file at ${entry}`,
            resolution: `Check that the file exists at ${entry} and is readable`,
        });
    }
    const importPath = new FilePathExtractor(entry.importLine).extract();
    if (importPath) {
        const filePath = join(dirname(importPath), entry.relativePath);
        if (filePath && fs.existsSync(filePath)) {
            return filePath;
        }
    }
    throw new AmplifyUserError('UnresolvedEntryPathError', {
        message: 'Could not determine import path to construct absolute code path from relative path: ' +
            JSON.stringify(entry),
        resolution: 'Consider using an absolute path instead.',
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZV9lbnRyeV9wYXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3Jlc29sdmVfZW50cnlfcGF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsZ0JBQWdCLEVBQ2hCLGlCQUFpQixHQUNsQixNQUFNLDRCQUE0QixDQUFDO0FBQ3BDLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR3JDLE9BQU8sRUFBRSxNQUFNLElBQUksQ0FBQztBQUVwQjs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxLQUFzQixFQUFVLEVBQUU7SUFDakUsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUUsQ0FBQztRQUM5QixJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUN6QixPQUFPLEtBQUssQ0FBQztRQUNmLENBQUM7UUFDRCxNQUFNLElBQUksZ0JBQWdCLENBQW1CLGtCQUFrQixFQUFFO1lBQy9ELE9BQU8sRUFBRSx1QkFBdUIsS0FBSyxFQUFFO1lBQ3ZDLFVBQVUsRUFBRSxpQ0FBaUMsS0FBSyxrQkFBa0I7U0FDckUsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELE1BQU0sVUFBVSxHQUFHLElBQUksaUJBQWlCLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBRXJFLElBQUksVUFBVSxFQUFFLENBQUM7UUFDZixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMvRCxJQUFJLFFBQVEsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7WUFDeEMsT0FBTyxRQUFRLENBQUM7UUFDbEIsQ0FBQztJQUNILENBQUM7SUFFRCxNQUFNLElBQUksZ0JBQWdCLENBQW1CLDBCQUEwQixFQUFFO1FBQ3ZFLE9BQU8sRUFDTCxzRkFBc0Y7WUFDdEYsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDdkIsVUFBVSxFQUFFLDBDQUEwQztLQUN2RCxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBbXBsaWZ5VXNlckVycm9yLFxuICBGaWxlUGF0aEV4dHJhY3Rvcixcbn0gZnJvbSAnQGF3cy1hbXBsaWZ5L3BsYXRmb3JtLWNvcmUnO1xuaW1wb3J0IHsgZGlybmFtZSwgam9pbiB9IGZyb20gJ3BhdGgnO1xuaW1wb3J0IHR5cGUgeyBKc1Jlc29sdmVyRW50cnkgfSBmcm9tICdAYXdzLWFtcGxpZnkvZGF0YS1zY2hlbWEtdHlwZXMnO1xuaW1wb3J0IHsgQW1wbGlmeURhdGFFcnJvciB9IGZyb20gJy4vdHlwZXMuanMnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzJztcblxuLyoqXG4gKiBSZXNvbHZlIEpTIFJlc29sdmVyIEhhbmRsZXIgb3IgU3FsIFJlZmVyZW5jZSBIYW5kbGVyIGVudHJ5IHBhdGggdG8gYWJzb2x1dGUgcGF0aFxuICogQHBhcmFtIGVudHJ5IGhhbmRsZXIgZW50cnlcbiAqIEByZXR1cm5zIHJlc29sdmVkIGFic29sdXRlIGZpbGUgcGF0aFxuICovXG5leHBvcnQgY29uc3QgcmVzb2x2ZUVudHJ5UGF0aCA9IChlbnRyeTogSnNSZXNvbHZlckVudHJ5KTogc3RyaW5nID0+IHtcbiAgaWYgKHR5cGVvZiBlbnRyeSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAoZnMuZXhpc3RzU3luYyhlbnRyeSkpIHtcbiAgICAgIHJldHVybiBlbnRyeTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEFtcGxpZnlVc2VyRXJyb3I8QW1wbGlmeURhdGFFcnJvcj4oJ0ludmFsaWRQYXRoRXJyb3InLCB7XG4gICAgICBtZXNzYWdlOiBgQ2Fubm90IGZpbmQgZmlsZSBhdCAke2VudHJ5fWAsXG4gICAgICByZXNvbHV0aW9uOiBgQ2hlY2sgdGhhdCB0aGUgZmlsZSBleGlzdHMgYXQgJHtlbnRyeX0gYW5kIGlzIHJlYWRhYmxlYCxcbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0IGltcG9ydFBhdGggPSBuZXcgRmlsZVBhdGhFeHRyYWN0b3IoZW50cnkuaW1wb3J0TGluZSkuZXh0cmFjdCgpO1xuXG4gIGlmIChpbXBvcnRQYXRoKSB7XG4gICAgY29uc3QgZmlsZVBhdGggPSBqb2luKGRpcm5hbWUoaW1wb3J0UGF0aCksIGVudHJ5LnJlbGF0aXZlUGF0aCk7XG4gICAgaWYgKGZpbGVQYXRoICYmIGZzLmV4aXN0c1N5bmMoZmlsZVBhdGgpKSB7XG4gICAgICByZXR1cm4gZmlsZVBhdGg7XG4gICAgfVxuICB9XG5cbiAgdGhyb3cgbmV3IEFtcGxpZnlVc2VyRXJyb3I8QW1wbGlmeURhdGFFcnJvcj4oJ1VucmVzb2x2ZWRFbnRyeVBhdGhFcnJvcicsIHtcbiAgICBtZXNzYWdlOlxuICAgICAgJ0NvdWxkIG5vdCBkZXRlcm1pbmUgaW1wb3J0IHBhdGggdG8gY29uc3RydWN0IGFic29sdXRlIGNvZGUgcGF0aCBmcm9tIHJlbGF0aXZlIHBhdGg6ICcgK1xuICAgICAgSlNPTi5zdHJpbmdpZnkoZW50cnkpLFxuICAgIHJlc29sdXRpb246ICdDb25zaWRlciB1c2luZyBhbiBhYnNvbHV0ZSBwYXRoIGluc3RlYWQuJyxcbiAgfSk7XG59O1xuIl19