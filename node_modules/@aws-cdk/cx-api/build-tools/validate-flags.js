"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateFlags = validateFlags;
const features_1 = require("../lib/features");
const flag_modeling_1 = require("../lib/private/flag-modeling");
function validateFlags() {
    for (const [flagName, flag] of Object.entries(features_1.FLAGS)) {
        if (flag.introducedIn[features_1.CURRENT_MV] !== undefined) {
            if (!/^[0-9.]+$/.test(flag.introducedIn[features_1.CURRENT_MV]) && flag.introducedIn[features_1.CURRENT_MV] != flag_modeling_1.MAGIC_V2NEXT) {
                // eslint-disable-next-line @cdklabs/no-throw-default-error
                throw new Error(`Flag '${flagName}': introducedIn is not a valid version or the magic string. Did you misspell the magic string? (If you are introducing a new flag, you will not know the future release number yet, so there's no meaningful value you can put in "introducedIn". Use the magic string and it will be string-replaced in the source file on the next release.)`);
            }
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGUtZmxhZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ2YWxpZGF0ZS1mbGFncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLHNDQVNDO0FBWkQsOENBQW9EO0FBQ3BELGdFQUE0RDtBQUU1RCxTQUFnQixhQUFhO0lBQzNCLEtBQUssTUFBTSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLGdCQUFLLENBQUMsRUFBRSxDQUFDO1FBQ3JELElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxxQkFBVSxDQUFDLEtBQUssU0FBUyxFQUFFLENBQUM7WUFDaEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxxQkFBVSxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLHFCQUFVLENBQUMsSUFBSSw0QkFBWSxFQUFFLENBQUM7Z0JBQ3RHLDJEQUEyRDtnQkFDM0QsTUFBTSxJQUFJLEtBQUssQ0FBQyxTQUFTLFFBQVEsZ1ZBQWdWLENBQUMsQ0FBQztZQUNyWCxDQUFDO1FBQ0gsQ0FBQztJQUNILENBQUM7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ1VSUkVOVF9NViwgRkxBR1MgfSBmcm9tICcuLi9saWIvZmVhdHVyZXMnO1xuaW1wb3J0IHsgTUFHSUNfVjJORVhUIH0gZnJvbSAnLi4vbGliL3ByaXZhdGUvZmxhZy1tb2RlbGluZyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUZsYWdzKCkge1xuICBmb3IgKGNvbnN0IFtmbGFnTmFtZSwgZmxhZ10gb2YgT2JqZWN0LmVudHJpZXMoRkxBR1MpKSB7XG4gICAgaWYgKGZsYWcuaW50cm9kdWNlZEluW0NVUlJFTlRfTVZdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmICghL15bMC05Ll0rJC8udGVzdChmbGFnLmludHJvZHVjZWRJbltDVVJSRU5UX01WXSkgJiYgZmxhZy5pbnRyb2R1Y2VkSW5bQ1VSUkVOVF9NVl0gIT0gTUFHSUNfVjJORVhUKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAY2RrbGFicy9uby10aHJvdy1kZWZhdWx0LWVycm9yXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmxhZyAnJHtmbGFnTmFtZX0nOiBpbnRyb2R1Y2VkSW4gaXMgbm90IGEgdmFsaWQgdmVyc2lvbiBvciB0aGUgbWFnaWMgc3RyaW5nLiBEaWQgeW91IG1pc3NwZWxsIHRoZSBtYWdpYyBzdHJpbmc/IChJZiB5b3UgYXJlIGludHJvZHVjaW5nIGEgbmV3IGZsYWcsIHlvdSB3aWxsIG5vdCBrbm93IHRoZSBmdXR1cmUgcmVsZWFzZSBudW1iZXIgeWV0LCBzbyB0aGVyZSdzIG5vIG1lYW5pbmdmdWwgdmFsdWUgeW91IGNhbiBwdXQgaW4gXCJpbnRyb2R1Y2VkSW5cIi4gVXNlIHRoZSBtYWdpYyBzdHJpbmcgYW5kIGl0IHdpbGwgYmUgc3RyaW5nLXJlcGxhY2VkIGluIHRoZSBzb3VyY2UgZmlsZSBvbiB0aGUgbmV4dCByZWxlYXNlLilgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ==