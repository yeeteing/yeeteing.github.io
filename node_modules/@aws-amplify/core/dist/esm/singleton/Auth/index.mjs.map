{"version":3,"file":"index.mjs","sources":["../../../../src/singleton/Auth/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../../Logger';\nconst logger = new ConsoleLogger('Auth');\nexport class AuthClass {\n    /**\n     * Configure Auth category\n     *\n     * @internal\n     *\n     * @param authResourcesConfig - Resources configurations required by Auth providers.\n     * @param authOptions - Client options used by library\n     *\n     * @returns void\n     */\n    configure(authResourcesConfig, authOptions) {\n        this.authConfig = authResourcesConfig;\n        this.authOptions = authOptions;\n        if (authResourcesConfig && authResourcesConfig.Cognito?.userPoolEndpoint) {\n            logger.warn(getCustomEndpointWarningMessage('Amazon Cognito User Pool'));\n        }\n        if (authResourcesConfig &&\n            authResourcesConfig.Cognito?.identityPoolEndpoint) {\n            logger.warn(getCustomEndpointWarningMessage('Amazon Cognito Identity Pool'));\n        }\n    }\n    /**\n     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n     * will automatically refresh expired auth tokens if a valid refresh token is present. You can force a refresh\n     * of non-expired tokens with `{ forceRefresh: true }` input.\n     *\n     * @param options - Options configuring the fetch behavior.\n     *\n     * @returns Promise of current auth session {@link AuthSession}.\n     */\n    async fetchAuthSession(options = {}) {\n        let credentialsAndIdentityId;\n        let userSub;\n        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n        const tokens = await this.getTokens(options);\n        if (tokens) {\n            userSub = tokens.accessToken?.payload?.sub;\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    tokens,\n                    authenticated: true,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        else {\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    authenticated: false,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        return {\n            tokens,\n            credentials: credentialsAndIdentityId?.credentials,\n            identityId: credentialsAndIdentityId?.identityId,\n            userSub,\n        };\n    }\n    async clearCredentials() {\n        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n    }\n    async getTokens(options) {\n        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n    }\n}\nconst getCustomEndpointWarningMessage = (target) => `You are using a custom Amazon ${target} endpoint, ensure the endpoint is correct.`;\n"],"names":[],"mappings":";;AAAA;AACA;AAEA,MAAM,MAAM,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC;AACjC,MAAM,SAAS,CAAC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,mBAAmB,EAAE,WAAW,EAAE;AAChD,QAAQ,IAAI,CAAC,UAAU,GAAG,mBAAmB;AAC7C,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;AACtC,QAAQ,IAAI,mBAAmB,IAAI,mBAAmB,CAAC,OAAO,EAAE,gBAAgB,EAAE;AAClF,YAAY,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,0BAA0B,CAAC,CAAC;AACpF,QAAQ;AACR,QAAQ,IAAI,mBAAmB;AAC/B,YAAY,mBAAmB,CAAC,OAAO,EAAE,oBAAoB,EAAE;AAC/D,YAAY,MAAM,CAAC,IAAI,CAAC,+BAA+B,CAAC,8BAA8B,CAAC,CAAC;AACxF,QAAQ;AACR,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,gBAAgB,CAAC,OAAO,GAAG,EAAE,EAAE;AACzC,QAAQ,IAAI,wBAAwB;AACpC,QAAQ,IAAI,OAAO;AACnB;AACA,QAAQ,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;AACpD,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,OAAO,GAAG,MAAM,CAAC,WAAW,EAAE,OAAO,EAAE,GAAG;AACtD;AACA,YAAY,wBAAwB;AACpC,gBAAgB,MAAM,IAAI,CAAC,WAAW,EAAE,mBAAmB,EAAE,2BAA2B,CAAC;AACzF,oBAAoB,UAAU,EAAE,IAAI,CAAC,UAAU;AAC/C,oBAAoB,MAAM;AAC1B,oBAAoB,aAAa,EAAE,IAAI;AACvC,oBAAoB,YAAY,EAAE,OAAO,CAAC,YAAY;AACtD,iBAAiB,CAAC;AAClB,QAAQ;AACR,aAAa;AACb;AACA,YAAY,wBAAwB;AACpC,gBAAgB,MAAM,IAAI,CAAC,WAAW,EAAE,mBAAmB,EAAE,2BAA2B,CAAC;AACzF,oBAAoB,UAAU,EAAE,IAAI,CAAC,UAAU;AAC/C,oBAAoB,aAAa,EAAE,KAAK;AACxC,oBAAoB,YAAY,EAAE,OAAO,CAAC,YAAY;AACtD,iBAAiB,CAAC;AAClB,QAAQ;AACR,QAAQ,OAAO;AACf,YAAY,MAAM;AAClB,YAAY,WAAW,EAAE,wBAAwB,EAAE,WAAW;AAC9D,YAAY,UAAU,EAAE,wBAAwB,EAAE,UAAU;AAC5D,YAAY,OAAO;AACnB,SAAS;AACT,IAAI;AACJ,IAAI,MAAM,gBAAgB,GAAG;AAC7B,QAAQ,MAAM,IAAI,CAAC,WAAW,EAAE,mBAAmB,EAAE,6BAA6B,EAAE;AACpF,IAAI;AACJ,IAAI,MAAM,SAAS,CAAC,OAAO,EAAE;AAC7B,QAAQ,QAAQ,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,OAAO,CAAC,KAAK,SAAS;AACxF,IAAI;AACJ;AACA,MAAM,+BAA+B,GAAG,CAAC,MAAM,KAAK,CAAC,8BAA8B,EAAE,MAAM,CAAC,0CAA0C,CAAC;;;;"}