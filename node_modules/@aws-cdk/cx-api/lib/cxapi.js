"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SSMPARAM_NO_INVALIDATE = exports.PROVIDER_ERROR_KEY = exports.TOOLKIT_VERSION_ENV = exports.CLI_VERSION_ENV = exports.CLI_ASM_VERSION_ENV = exports.DEFAULT_REGION_ENV = exports.DEFAULT_ACCOUNT_ENV = exports.CONTEXT_OVERFLOW_LOCATION_ENV = exports.CONTEXT_ENV = exports.OUTDIR_ENV = void 0;
// output directory into which to emit synthesis outputs. CDK doesn't allow outdir
// to be specified both through the CDK_OUTDIR environment variable and the through
// aws:cdk:outdir context.
exports.OUTDIR_ENV = 'CDK_OUTDIR';
exports.CONTEXT_ENV = 'CDK_CONTEXT_JSON';
/**
 * The name of the temporary file where the context is stored.
 */
exports.CONTEXT_OVERFLOW_LOCATION_ENV = 'CONTEXT_OVERFLOW_LOCATION_ENV';
/**
 * Environment variable set by the CDK CLI with the default AWS account ID.
 */
exports.DEFAULT_ACCOUNT_ENV = 'CDK_DEFAULT_ACCOUNT';
/**
 * Environment variable set by the CDK CLI with the default AWS region.
 */
exports.DEFAULT_REGION_ENV = 'CDK_DEFAULT_REGION';
/**
 * Version of Cloud Assembly expected by CDK Toolkit.
 *
 * Despite it's name, this value applies to all version of the CDK Toolkit, not just the CLI.
 *
 * CLI started emitting this at 1.10.1
 */
exports.CLI_ASM_VERSION_ENV = 'CDK_CLI_ASM_VERSION';
/**
 * Version of the CLI currently running.
 *
 * CLI started emitting this at 1.10.1
 * Will not be present if the CDK app is run by any Toolkit variation other than the CLI.
 */
exports.CLI_VERSION_ENV = 'CDK_CLI_VERSION';
/**
 * Package & version of the CDK Toolkit running the app.
 *
 * In the format "<package>@x.y.z", e.g  "aws-cdk@2.1006.0" or "@aws-cdk/toolkit-lib@1.0.0"
 */
exports.TOOLKIT_VERSION_ENV = 'CDK_TOOLKIT_VERSION';
/**
 * If a context value is an object with this key, it indicates an error
 */
exports.PROVIDER_ERROR_KEY = '$providerError';
/**
 * This SSM parameter does not invalidate the template
 *
 * If this string occurs in the description of an SSM parameter, the CLI
 * will not assume that the stack must always be redeployed.
 */
exports.SSMPARAM_NO_INVALIDATE = '[cdk:skip]';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3hhcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjeGFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrRkFBa0Y7QUFDbEYsbUZBQW1GO0FBQ25GLDBCQUEwQjtBQUNiLFFBQUEsVUFBVSxHQUFHLFlBQVksQ0FBQztBQUMxQixRQUFBLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQztBQUU5Qzs7R0FFRztBQUNVLFFBQUEsNkJBQTZCLEdBQUcsK0JBQStCLENBQUM7QUFFN0U7O0dBRUc7QUFDVSxRQUFBLG1CQUFtQixHQUFHLHFCQUFxQixDQUFDO0FBRXpEOztHQUVHO0FBQ1UsUUFBQSxrQkFBa0IsR0FBRyxvQkFBb0IsQ0FBQztBQUV2RDs7Ozs7O0dBTUc7QUFDVSxRQUFBLG1CQUFtQixHQUFHLHFCQUFxQixDQUFDO0FBRXpEOzs7OztHQUtHO0FBQ1UsUUFBQSxlQUFlLEdBQUcsaUJBQWlCLENBQUM7QUFFakQ7Ozs7R0FJRztBQUNVLFFBQUEsbUJBQW1CLEdBQUcscUJBQXFCLENBQUM7QUFFekQ7O0dBRUc7QUFDVSxRQUFBLGtCQUFrQixHQUFHLGdCQUFnQixDQUFDO0FBRW5EOzs7OztHQUtHO0FBQ1UsUUFBQSxzQkFBc0IsR0FBRyxZQUFZLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBvdXRwdXQgZGlyZWN0b3J5IGludG8gd2hpY2ggdG8gZW1pdCBzeW50aGVzaXMgb3V0cHV0cy4gQ0RLIGRvZXNuJ3QgYWxsb3cgb3V0ZGlyXG4vLyB0byBiZSBzcGVjaWZpZWQgYm90aCB0aHJvdWdoIHRoZSBDREtfT1VURElSIGVudmlyb25tZW50IHZhcmlhYmxlIGFuZCB0aGUgdGhyb3VnaFxuLy8gYXdzOmNkazpvdXRkaXIgY29udGV4dC5cbmV4cG9ydCBjb25zdCBPVVRESVJfRU5WID0gJ0NES19PVVRESVInO1xuZXhwb3J0IGNvbnN0IENPTlRFWFRfRU5WID0gJ0NES19DT05URVhUX0pTT04nO1xuXG4vKipcbiAqIFRoZSBuYW1lIG9mIHRoZSB0ZW1wb3JhcnkgZmlsZSB3aGVyZSB0aGUgY29udGV4dCBpcyBzdG9yZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBDT05URVhUX09WRVJGTE9XX0xPQ0FUSU9OX0VOViA9ICdDT05URVhUX09WRVJGTE9XX0xPQ0FUSU9OX0VOVic7XG5cbi8qKlxuICogRW52aXJvbm1lbnQgdmFyaWFibGUgc2V0IGJ5IHRoZSBDREsgQ0xJIHdpdGggdGhlIGRlZmF1bHQgQVdTIGFjY291bnQgSUQuXG4gKi9cbmV4cG9ydCBjb25zdCBERUZBVUxUX0FDQ09VTlRfRU5WID0gJ0NES19ERUZBVUxUX0FDQ09VTlQnO1xuXG4vKipcbiAqIEVudmlyb25tZW50IHZhcmlhYmxlIHNldCBieSB0aGUgQ0RLIENMSSB3aXRoIHRoZSBkZWZhdWx0IEFXUyByZWdpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBERUZBVUxUX1JFR0lPTl9FTlYgPSAnQ0RLX0RFRkFVTFRfUkVHSU9OJztcblxuLyoqXG4gKiBWZXJzaW9uIG9mIENsb3VkIEFzc2VtYmx5IGV4cGVjdGVkIGJ5IENESyBUb29sa2l0LlxuICpcbiAqIERlc3BpdGUgaXQncyBuYW1lLCB0aGlzIHZhbHVlIGFwcGxpZXMgdG8gYWxsIHZlcnNpb24gb2YgdGhlIENESyBUb29sa2l0LCBub3QganVzdCB0aGUgQ0xJLlxuICpcbiAqIENMSSBzdGFydGVkIGVtaXR0aW5nIHRoaXMgYXQgMS4xMC4xXG4gKi9cbmV4cG9ydCBjb25zdCBDTElfQVNNX1ZFUlNJT05fRU5WID0gJ0NES19DTElfQVNNX1ZFUlNJT04nO1xuXG4vKipcbiAqIFZlcnNpb24gb2YgdGhlIENMSSBjdXJyZW50bHkgcnVubmluZy5cbiAqXG4gKiBDTEkgc3RhcnRlZCBlbWl0dGluZyB0aGlzIGF0IDEuMTAuMVxuICogV2lsbCBub3QgYmUgcHJlc2VudCBpZiB0aGUgQ0RLIGFwcCBpcyBydW4gYnkgYW55IFRvb2xraXQgdmFyaWF0aW9uIG90aGVyIHRoYW4gdGhlIENMSS5cbiAqL1xuZXhwb3J0IGNvbnN0IENMSV9WRVJTSU9OX0VOViA9ICdDREtfQ0xJX1ZFUlNJT04nO1xuXG4vKipcbiAqIFBhY2thZ2UgJiB2ZXJzaW9uIG9mIHRoZSBDREsgVG9vbGtpdCBydW5uaW5nIHRoZSBhcHAuXG4gKlxuICogSW4gdGhlIGZvcm1hdCBcIjxwYWNrYWdlPkB4LnkuelwiLCBlLmcgIFwiYXdzLWNka0AyLjEwMDYuMFwiIG9yIFwiQGF3cy1jZGsvdG9vbGtpdC1saWJAMS4wLjBcIlxuICovXG5leHBvcnQgY29uc3QgVE9PTEtJVF9WRVJTSU9OX0VOViA9ICdDREtfVE9PTEtJVF9WRVJTSU9OJztcblxuLyoqXG4gKiBJZiBhIGNvbnRleHQgdmFsdWUgaXMgYW4gb2JqZWN0IHdpdGggdGhpcyBrZXksIGl0IGluZGljYXRlcyBhbiBlcnJvclxuICovXG5leHBvcnQgY29uc3QgUFJPVklERVJfRVJST1JfS0VZID0gJyRwcm92aWRlckVycm9yJztcblxuLyoqXG4gKiBUaGlzIFNTTSBwYXJhbWV0ZXIgZG9lcyBub3QgaW52YWxpZGF0ZSB0aGUgdGVtcGxhdGVcbiAqXG4gKiBJZiB0aGlzIHN0cmluZyBvY2N1cnMgaW4gdGhlIGRlc2NyaXB0aW9uIG9mIGFuIFNTTSBwYXJhbWV0ZXIsIHRoZSBDTElcbiAqIHdpbGwgbm90IGFzc3VtZSB0aGF0IHRoZSBzdGFjayBtdXN0IGFsd2F5cyBiZSByZWRlcGxveWVkLlxuICovXG5leHBvcnQgY29uc3QgU1NNUEFSQU1fTk9fSU5WQUxJREFURSA9ICdbY2RrOnNraXBdJztcbiJdfQ==