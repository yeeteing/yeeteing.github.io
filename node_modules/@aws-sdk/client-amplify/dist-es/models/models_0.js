import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { AmplifyServiceException as __BaseException } from "./AmplifyServiceException";
export class BadRequestException extends __BaseException {
    name = "BadRequestException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, BadRequestException.prototype);
    }
}
export const Stage = {
    BETA: "BETA",
    DEVELOPMENT: "DEVELOPMENT",
    EXPERIMENTAL: "EXPERIMENTAL",
    PRODUCTION: "PRODUCTION",
    PULL_REQUEST: "PULL_REQUEST",
};
export const CacheConfigType = {
    AMPLIFY_MANAGED: "AMPLIFY_MANAGED",
    AMPLIFY_MANAGED_NO_COOKIES: "AMPLIFY_MANAGED_NO_COOKIES",
};
export const BuildComputeType = {
    LARGE_16GB: "LARGE_16GB",
    STANDARD_8GB: "STANDARD_8GB",
    XLARGE_72GB: "XLARGE_72GB",
};
export const Platform = {
    WEB: "WEB",
    WEB_COMPUTE: "WEB_COMPUTE",
    WEB_DYNAMIC: "WEB_DYNAMIC",
};
export const RepositoryCloneMethod = {
    SIGV4: "SIGV4",
    SSH: "SSH",
    TOKEN: "TOKEN",
};
export const WafStatus = {
    ASSOCIATING: "ASSOCIATING",
    ASSOCIATION_FAILED: "ASSOCIATION_FAILED",
    ASSOCIATION_SUCCESS: "ASSOCIATION_SUCCESS",
    DISASSOCIATING: "DISASSOCIATING",
    DISASSOCIATION_FAILED: "DISASSOCIATION_FAILED",
};
export class DependentServiceFailureException extends __BaseException {
    name = "DependentServiceFailureException";
    $fault = "server";
    constructor(opts) {
        super({
            name: "DependentServiceFailureException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, DependentServiceFailureException.prototype);
    }
}
export class InternalFailureException extends __BaseException {
    name = "InternalFailureException";
    $fault = "server";
    constructor(opts) {
        super({
            name: "InternalFailureException",
            $fault: "server",
            ...opts,
        });
        Object.setPrototypeOf(this, InternalFailureException.prototype);
    }
}
export class LimitExceededException extends __BaseException {
    name = "LimitExceededException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class UnauthorizedException extends __BaseException {
    name = "UnauthorizedException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
    }
}
export class NotFoundException extends __BaseException {
    name = "NotFoundException";
    $fault = "client";
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, NotFoundException.prototype);
    }
}
export const CertificateType = {
    AMPLIFY_MANAGED: "AMPLIFY_MANAGED",
    CUSTOM: "CUSTOM",
};
export const DomainStatus = {
    AVAILABLE: "AVAILABLE",
    AWAITING_APP_CNAME: "AWAITING_APP_CNAME",
    CREATING: "CREATING",
    FAILED: "FAILED",
    IMPORTING_CUSTOM_CERTIFICATE: "IMPORTING_CUSTOM_CERTIFICATE",
    IN_PROGRESS: "IN_PROGRESS",
    PENDING_DEPLOYMENT: "PENDING_DEPLOYMENT",
    PENDING_VERIFICATION: "PENDING_VERIFICATION",
    REQUESTING_CERTIFICATE: "REQUESTING_CERTIFICATE",
    UPDATING: "UPDATING",
};
export const UpdateStatus = {
    AWAITING_APP_CNAME: "AWAITING_APP_CNAME",
    IMPORTING_CUSTOM_CERTIFICATE: "IMPORTING_CUSTOM_CERTIFICATE",
    PENDING_DEPLOYMENT: "PENDING_DEPLOYMENT",
    PENDING_VERIFICATION: "PENDING_VERIFICATION",
    REQUESTING_CERTIFICATE: "REQUESTING_CERTIFICATE",
    UPDATE_COMPLETE: "UPDATE_COMPLETE",
    UPDATE_FAILED: "UPDATE_FAILED",
};
export const JobType = {
    MANUAL: "MANUAL",
    RELEASE: "RELEASE",
    RETRY: "RETRY",
    WEB_HOOK: "WEB_HOOK",
};
export const SourceUrlType = {
    BUCKET_PREFIX: "BUCKET_PREFIX",
    ZIP: "ZIP",
};
export const JobStatus = {
    CANCELLED: "CANCELLED",
    CANCELLING: "CANCELLING",
    CREATED: "CREATED",
    FAILED: "FAILED",
    PENDING: "PENDING",
    PROVISIONING: "PROVISIONING",
    RUNNING: "RUNNING",
    SUCCEED: "SUCCEED",
};
export class ResourceNotFoundException extends __BaseException {
    name = "ResourceNotFoundException";
    $fault = "client";
    code;
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.code = opts.code;
    }
}
export const AutoBranchCreationConfigFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.basicAuthCredentials && { basicAuthCredentials: SENSITIVE_STRING }),
    ...(obj.buildSpec && { buildSpec: SENSITIVE_STRING }),
});
export const CreateAppRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.oauthToken && { oauthToken: SENSITIVE_STRING }),
    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),
    ...(obj.basicAuthCredentials && { basicAuthCredentials: SENSITIVE_STRING }),
    ...(obj.buildSpec && { buildSpec: SENSITIVE_STRING }),
    ...(obj.autoBranchCreationConfig && {
        autoBranchCreationConfig: AutoBranchCreationConfigFilterSensitiveLog(obj.autoBranchCreationConfig),
    }),
});
export const AppFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.basicAuthCredentials && { basicAuthCredentials: SENSITIVE_STRING }),
    ...(obj.buildSpec && { buildSpec: SENSITIVE_STRING }),
    ...(obj.autoBranchCreationConfig && {
        autoBranchCreationConfig: AutoBranchCreationConfigFilterSensitiveLog(obj.autoBranchCreationConfig),
    }),
});
export const CreateAppResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.app && { app: AppFilterSensitiveLog(obj.app) }),
});
export const CreateBranchRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.basicAuthCredentials && { basicAuthCredentials: SENSITIVE_STRING }),
    ...(obj.buildSpec && { buildSpec: SENSITIVE_STRING }),
});
export const BranchFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.basicAuthCredentials && { basicAuthCredentials: SENSITIVE_STRING }),
    ...(obj.buildSpec && { buildSpec: SENSITIVE_STRING }),
});
export const CreateBranchResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.branch && { branch: BranchFilterSensitiveLog(obj.branch) }),
});
export const DeleteAppResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.app && { app: AppFilterSensitiveLog(obj.app) }),
});
export const DeleteBranchResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.branch && { branch: BranchFilterSensitiveLog(obj.branch) }),
});
export const GetAppResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.app && { app: AppFilterSensitiveLog(obj.app) }),
});
export const GetBranchResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.branch && { branch: BranchFilterSensitiveLog(obj.branch) }),
});
export const ListAppsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.apps && { apps: obj.apps.map((item) => AppFilterSensitiveLog(item)) }),
});
export const ListBranchesResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.branches && { branches: obj.branches.map((item) => BranchFilterSensitiveLog(item)) }),
});
export const UpdateAppRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.basicAuthCredentials && { basicAuthCredentials: SENSITIVE_STRING }),
    ...(obj.buildSpec && { buildSpec: SENSITIVE_STRING }),
    ...(obj.autoBranchCreationConfig && {
        autoBranchCreationConfig: AutoBranchCreationConfigFilterSensitiveLog(obj.autoBranchCreationConfig),
    }),
    ...(obj.oauthToken && { oauthToken: SENSITIVE_STRING }),
    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),
});
export const UpdateAppResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.app && { app: AppFilterSensitiveLog(obj.app) }),
});
export const UpdateBranchRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.basicAuthCredentials && { basicAuthCredentials: SENSITIVE_STRING }),
    ...(obj.buildSpec && { buildSpec: SENSITIVE_STRING }),
});
export const UpdateBranchResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.branch && { branch: BranchFilterSensitiveLog(obj.branch) }),
});
