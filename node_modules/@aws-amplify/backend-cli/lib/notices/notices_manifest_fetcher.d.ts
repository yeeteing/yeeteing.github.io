import { NoticesManifest, NoticesManifestValidator } from '@aws-amplify/cli-core';
/**
 * Notices manifest fetcher.
 */
export declare class NoticesManifestFetcher {
    private readonly noticesMetadataFile;
    private readonly noticeManifestValidator;
    private readonly noticesManifestUrl;
    private readonly cacheTTLMs;
    private readonly _fetch;
    private readonly _printer;
    private cachedManifest;
    private refreshedAt;
    /**
     * Creates new notices manifest fetcher.
     */
    constructor(noticesMetadataFile?: import("@aws-amplify/platform-core").TypedConfigurationFile<{
        printTimes: {
            projectName: string;
            noticeId: string;
            shownAt: number;
        }[];
        manifestCache: {
            noticesManifest: {
                notices: {
                    details: string;
                    id: string;
                    title: string;
                    predicates: ({
                        type: "packageVersion";
                        packageName: string;
                        versionRange: string;
                    } | {
                        type: "nodeVersion";
                        versionRange: string;
                    } | {
                        type: "osFamily";
                        osFamily: "linux" | "windows" | "macos";
                    } | {
                        type: "backendComponent";
                        backendComponent: "function" | "data" | "auth" | "storage" | "ai";
                    } | {
                        command: "sandbox" | "pipeline-deploy" | "generate" | "configure";
                        type: "command";
                    } | {
                        type: "errorMessage";
                        errorMessage: string;
                    })[];
                    link?: string | undefined;
                    frequency?: "once" | "command" | "deployment" | "daily" | undefined;
                    validFrom?: number | undefined;
                    validTo?: number | undefined;
                }[];
            };
            refreshedAt: number;
        };
    }>, noticeManifestValidator?: NoticesManifestValidator, noticesManifestUrl?: string, cacheTTLMs?: number, // one hour
    _fetch?: typeof fetch, _printer?: import("@aws-amplify/cli-core").Printer);
    fetchNoticesManifest: () => Promise<NoticesManifest>;
    private isStale;
    private loadManifestFromWebsiteAndCache;
    private tryLoadManifestFromDisk;
}
//# sourceMappingURL=notices_manifest_fetcher.d.ts.map