import type { ActionLessMessage, IoHelper } from './io-helper';
import type { IoMessageLevel } from '../io-message';
/**
 * Helper class to emit standard log messages to an IoHost
 *
 * It wraps an `IoHelper`, and adds convenience methods to emit default messages
 * for the various log levels.
 */
export declare class IoDefaultMessages {
    private readonly ioHelper;
    constructor(ioHelper: IoHelper);
    notify(msg: Omit<ActionLessMessage<unknown>, 'code'>): Promise<void>;
    error(input: string, ...args: unknown[]): Promise<void>;
    warn(input: string, ...args: unknown[]): Promise<void>;
    warning(input: string, ...args: unknown[]): Promise<void>;
    info(input: string, ...args: unknown[]): Promise<void>;
    debug(input: string, ...args: unknown[]): Promise<void>;
    trace(input: string, ...args: unknown[]): Promise<void>;
    result(input: string, ...args: unknown[]): Promise<void>;
    /**
     * Makes a default message object from a level and a message
     */
    msg(level: IoMessageLevel, input: string, ...args: unknown[]): ActionLessMessage<undefined>;
    private emitMessage;
}
