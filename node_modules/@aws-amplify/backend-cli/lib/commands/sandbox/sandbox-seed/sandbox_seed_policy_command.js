import { printer } from '@aws-amplify/cli-core';
import { generateSeedPolicyTemplate } from '../../../seed-policy-generation/generate_seed_policy_template.js';
/**
 * Command that generates policy template with permissions to be able to run seed in sandbox environment
 */
export class SandboxSeedGeneratePolicyCommand {
    backendIdResolver;
    seedPolicyTemplate;
    /**
     * @inheritDoc
     */
    command;
    /**
     * @inheritDoc
     */
    describe;
    /**
     * Generates policy to run seed, is a subcommand of seed
     */
    constructor(backendIdResolver, seedPolicyTemplate = generateSeedPolicyTemplate) {
        this.backendIdResolver = backendIdResolver;
        this.seedPolicyTemplate = seedPolicyTemplate;
        this.command = 'generate-policy';
        this.describe = 'Generates policy for seeding';
    }
    /**
     * @inheritDoc
     */
    handler = async (args) => {
        const backendId = await this.backendIdResolver.resolve(args.identifier);
        const policyDocument = await this.seedPolicyTemplate(backendId);
        printer.print(JSON.stringify(policyDocument.toJSON(), null, 2));
    };
    /**
     * @inheritDoc
     */
    builder = (yargs) => {
        return yargs;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FuZGJveF9zZWVkX3BvbGljeV9jb21tYW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbW1hbmRzL3NhbmRib3gvc2FuZGJveC1zZWVkL3NhbmRib3hfc2VlZF9wb2xpY3lfY29tbWFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFaEQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0VBQWtFLENBQUM7QUFHOUc7O0dBRUc7QUFDSCxNQUFNLE9BQU8sZ0NBQWdDO0lBZXhCO0lBQ0E7SUFmbkI7O09BRUc7SUFDTSxPQUFPLENBQVM7SUFFekI7O09BRUc7SUFDTSxRQUFRLENBQVM7SUFFMUI7O09BRUc7SUFDSCxZQUNtQixpQkFBMkMsRUFDM0MscUJBQXFCLDBCQUEwQjtRQUQvQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQTBCO1FBQzNDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBNkI7UUFFaEUsSUFBSSxDQUFDLE9BQU8sR0FBRyxpQkFBaUIsQ0FBQztRQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLDhCQUE4QixDQUFDO0lBQ2pELENBQUM7SUFFRDs7T0FFRztJQUNILE9BQU8sR0FBRyxLQUFLLEVBQ2IsSUFBcUQsRUFDdEMsRUFBRTtRQUNqQixNQUFNLFNBQVMsR0FBRyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3hFLE1BQU0sY0FBYyxHQUFHLE1BQU0sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2hFLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEUsQ0FBQyxDQUFDO0lBRUY7O09BRUc7SUFDSCxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQUUsRUFBRTtRQUN4QixPQUFPLEtBQUssQ0FBQztJQUNmLENBQUMsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXJndW1lbnRzQ2FtZWxDYXNlLCBBcmd2LCBDb21tYW5kTW9kdWxlIH0gZnJvbSAneWFyZ3MnO1xuaW1wb3J0IHsgcHJpbnRlciB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9jbGktY29yZSc7XG5pbXBvcnQgeyBTYW5kYm94QmFja2VuZElkUmVzb2x2ZXIgfSBmcm9tICcuLi9zYW5kYm94X2lkX3Jlc29sdmVyLmpzJztcbmltcG9ydCB7IGdlbmVyYXRlU2VlZFBvbGljeVRlbXBsYXRlIH0gZnJvbSAnLi4vLi4vLi4vc2VlZC1wb2xpY3ktZ2VuZXJhdGlvbi9nZW5lcmF0ZV9zZWVkX3BvbGljeV90ZW1wbGF0ZS5qcyc7XG5pbXBvcnQgeyBTYW5kYm94Q29tbWFuZEdsb2JhbE9wdGlvbnMgfSBmcm9tICcuLi9vcHRpb25fdHlwZXMuanMnO1xuXG4vKipcbiAqIENvbW1hbmQgdGhhdCBnZW5lcmF0ZXMgcG9saWN5IHRlbXBsYXRlIHdpdGggcGVybWlzc2lvbnMgdG8gYmUgYWJsZSB0byBydW4gc2VlZCBpbiBzYW5kYm94IGVudmlyb25tZW50XG4gKi9cbmV4cG9ydCBjbGFzcyBTYW5kYm94U2VlZEdlbmVyYXRlUG9saWN5Q29tbWFuZCBpbXBsZW1lbnRzIENvbW1hbmRNb2R1bGU8b2JqZWN0PiB7XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgY29tbWFuZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgcmVhZG9ubHkgZGVzY3JpYmU6IHN0cmluZztcblxuICAvKipcbiAgICogR2VuZXJhdGVzIHBvbGljeSB0byBydW4gc2VlZCwgaXMgYSBzdWJjb21tYW5kIG9mIHNlZWRcbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgYmFja2VuZElkUmVzb2x2ZXI6IFNhbmRib3hCYWNrZW5kSWRSZXNvbHZlcixcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNlZWRQb2xpY3lUZW1wbGF0ZSA9IGdlbmVyYXRlU2VlZFBvbGljeVRlbXBsYXRlLFxuICApIHtcbiAgICB0aGlzLmNvbW1hbmQgPSAnZ2VuZXJhdGUtcG9saWN5JztcbiAgICB0aGlzLmRlc2NyaWJlID0gJ0dlbmVyYXRlcyBwb2xpY3kgZm9yIHNlZWRpbmcnO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICBoYW5kbGVyID0gYXN5bmMgKFxuICAgIGFyZ3M6IEFyZ3VtZW50c0NhbWVsQ2FzZTxTYW5kYm94Q29tbWFuZEdsb2JhbE9wdGlvbnM+LFxuICApOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBjb25zdCBiYWNrZW5kSWQgPSBhd2FpdCB0aGlzLmJhY2tlbmRJZFJlc29sdmVyLnJlc29sdmUoYXJncy5pZGVudGlmaWVyKTtcbiAgICBjb25zdCBwb2xpY3lEb2N1bWVudCA9IGF3YWl0IHRoaXMuc2VlZFBvbGljeVRlbXBsYXRlKGJhY2tlbmRJZCk7XG4gICAgcHJpbnRlci5wcmludChKU09OLnN0cmluZ2lmeShwb2xpY3lEb2N1bWVudC50b0pTT04oKSwgbnVsbCwgMikpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgYnVpbGRlciA9ICh5YXJnczogQXJndikgPT4ge1xuICAgIHJldHVybiB5YXJncztcbiAgfTtcbn1cbiJdfQ==