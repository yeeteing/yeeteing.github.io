import { ExportResult } from '@opentelemetry/core';
import { ReadableSpan } from '@opentelemetry/sdk-trace-base';
import { AccountIdFetcher } from './account_id_fetcher';
import { RegionFetcher } from './region_fetcher';
import { Dependency } from '@aws-amplify/plugin-types';
/**
 * Maps data from span to payload and sends the payload
 */
export declare class DefaultTelemetryPayloadExporter {
    private readonly dependencies?;
    private readonly payloadVersion;
    private readonly sessionId;
    private readonly url;
    private readonly accountIdFetcher;
    private readonly regionFetcher;
    private isShutdown;
    private spanQueue;
    private dependenciesToReport?;
    /**
     * Constructor for DefaultTelemetryPayloadExporter
     */
    constructor(dependencies?: Array<Dependency> | undefined, payloadVersion?: string, sessionId?: string, url?: import("url").UrlWithStringQuery, accountIdFetcher?: AccountIdFetcher, regionFetcher?: RegionFetcher);
    export: (spans: ReadableSpan[], resultCallback: (result: ExportResult) => void) => Promise<void>;
    shutdown: () => Promise<void>;
    forceFlush: () => Promise<void>;
    private sendSpans;
    private getTelemetryPayload;
    private unflattenSpanAttributes;
    private send;
}
//# sourceMappingURL=telemetry_payload_exporter.d.ts.map