import { printer } from '@aws-amplify/cli-core';
/**
 * Notices acknowledge command.
 */
export class NoticesAcknowledgeCommand {
    noticesController;
    /**
     * @inheritDoc
     */
    command;
    /**
     * @inheritDoc
     */
    describe;
    /**
     * Creates notices command
     */
    constructor(noticesController) {
        this.noticesController = noticesController;
        this.command = 'acknowledge <notice-id>';
        this.describe =
            'Mark a specific notice as acknowledged. ' +
                "Use this command with a notice ID to indicate you've reviewed and understood the notification.";
    }
    /**
     * @inheritDoc
     */
    handler = async (args) => {
        const noticeId = args['notice-id'];
        await this.noticesController.acknowledge(noticeId);
        printer.print(`Notice ${noticeId} has been acknowledged.`);
    };
    /**
     * @inheritDoc
     */
    builder = (yargs) => {
        return yargs
            .version(false)
            .positional('notice-id', {
            describe: 'Id of the notice',
            type: 'string',
            demandOption: true,
        })
            .help();
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWNlc19hY2tub3dsZWRnZV9jb21tYW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbW1hbmRzL25vdGljZXMvbm90aWNlc19hY2tub3dsZWRnZV9jb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQVFoRDs7R0FFRztBQUNILE1BQU0sT0FBTyx5QkFBeUI7SUFnQlA7SUFiN0I7O09BRUc7SUFDTSxPQUFPLENBQVM7SUFFekI7O09BRUc7SUFDTSxRQUFRLENBQVM7SUFFMUI7O09BRUc7SUFDSCxZQUE2QixpQkFBb0M7UUFBcEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQUMvRCxJQUFJLENBQUMsT0FBTyxHQUFHLHlCQUF5QixDQUFDO1FBQ3pDLElBQUksQ0FBQyxRQUFRO1lBQ1gsMENBQTBDO2dCQUMxQyxnR0FBZ0csQ0FBQztJQUNyRyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxPQUFPLEdBQUcsS0FBSyxFQUNiLElBQStDLEVBQ2hDLEVBQUU7UUFDakIsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ25DLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNuRCxPQUFPLENBQUMsS0FBSyxDQUFDLFVBQVUsUUFBUSx5QkFBeUIsQ0FBQyxDQUFDO0lBQzdELENBQUMsQ0FBQztJQUVGOztPQUVHO0lBQ0gsT0FBTyxHQUFHLENBQUMsS0FBVyxFQUFtRCxFQUFFO1FBQ3pFLE9BQU8sS0FBSzthQUNULE9BQU8sQ0FBQyxLQUFLLENBQUM7YUFDZCxVQUFVLENBQUMsV0FBVyxFQUFFO1lBQ3ZCLFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsSUFBSSxFQUFFLFFBQVE7WUFDZCxZQUFZLEVBQUUsSUFBSTtTQUNuQixDQUFDO2FBQ0QsSUFBSSxFQUFFLENBQUM7SUFDWixDQUFDLENBQUM7Q0FDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFyZ3YsIENvbW1hbmRNb2R1bGUgfSBmcm9tICd5YXJncyc7XG5pbXBvcnQgeyBwcmludGVyIH0gZnJvbSAnQGF3cy1hbXBsaWZ5L2NsaS1jb3JlJztcbmltcG9ydCB7IE5vdGljZXNDb250cm9sbGVyIH0gZnJvbSAnLi4vLi4vbm90aWNlcy9ub3RpY2VzX2NvbnRyb2xsZXIuanMnO1xuaW1wb3J0IHsgQXJndW1lbnRzS2ViYWJDYXNlIH0gZnJvbSAnLi4vLi4va2ViYWJfY2FzZS5qcyc7XG5cbnR5cGUgTm90aWNlc0Fja25vd2xlZGdlQ29tbWFuZE9wdGlvbnNLZWJhYkNhc2UgPSBBcmd1bWVudHNLZWJhYkNhc2U8e1xuICBub3RpY2VJZDogc3RyaW5nO1xufT47XG5cbi8qKlxuICogTm90aWNlcyBhY2tub3dsZWRnZSBjb21tYW5kLlxuICovXG5leHBvcnQgY2xhc3MgTm90aWNlc0Fja25vd2xlZGdlQ29tbWFuZFxuICBpbXBsZW1lbnRzIENvbW1hbmRNb2R1bGU8b2JqZWN0LCBOb3RpY2VzQWNrbm93bGVkZ2VDb21tYW5kT3B0aW9uc0tlYmFiQ2FzZT5cbntcbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICByZWFkb25seSBjb21tYW5kOiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICByZWFkb25seSBkZXNjcmliZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIG5vdGljZXMgY29tbWFuZFxuICAgKi9cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBub3RpY2VzQ29udHJvbGxlcjogTm90aWNlc0NvbnRyb2xsZXIpIHtcbiAgICB0aGlzLmNvbW1hbmQgPSAnYWNrbm93bGVkZ2UgPG5vdGljZS1pZD4nO1xuICAgIHRoaXMuZGVzY3JpYmUgPVxuICAgICAgJ01hcmsgYSBzcGVjaWZpYyBub3RpY2UgYXMgYWNrbm93bGVkZ2VkLiAnICtcbiAgICAgIFwiVXNlIHRoaXMgY29tbWFuZCB3aXRoIGEgbm90aWNlIElEIHRvIGluZGljYXRlIHlvdSd2ZSByZXZpZXdlZCBhbmQgdW5kZXJzdG9vZCB0aGUgbm90aWZpY2F0aW9uLlwiO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICBoYW5kbGVyID0gYXN5bmMgKFxuICAgIGFyZ3M6IE5vdGljZXNBY2tub3dsZWRnZUNvbW1hbmRPcHRpb25zS2ViYWJDYXNlLFxuICApOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgICBjb25zdCBub3RpY2VJZCA9IGFyZ3NbJ25vdGljZS1pZCddO1xuICAgIGF3YWl0IHRoaXMubm90aWNlc0NvbnRyb2xsZXIuYWNrbm93bGVkZ2Uobm90aWNlSWQpO1xuICAgIHByaW50ZXIucHJpbnQoYE5vdGljZSAke25vdGljZUlkfSBoYXMgYmVlbiBhY2tub3dsZWRnZWQuYCk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICBidWlsZGVyID0gKHlhcmdzOiBBcmd2KTogQXJndjxOb3RpY2VzQWNrbm93bGVkZ2VDb21tYW5kT3B0aW9uc0tlYmFiQ2FzZT4gPT4ge1xuICAgIHJldHVybiB5YXJnc1xuICAgICAgLnZlcnNpb24oZmFsc2UpXG4gICAgICAucG9zaXRpb25hbCgnbm90aWNlLWlkJywge1xuICAgICAgICBkZXNjcmliZTogJ0lkIG9mIHRoZSBub3RpY2UnLFxuICAgICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgICAgZGVtYW5kT3B0aW9uOiB0cnVlLFxuICAgICAgfSlcbiAgICAgIC5oZWxwKCk7XG4gIH07XG59XG4iXX0=