import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AddListenerCertificatesCommandInput,
  AddListenerCertificatesCommandOutput,
} from "./commands/AddListenerCertificatesCommand";
import {
  AddTagsCommandInput,
  AddTagsCommandOutput,
} from "./commands/AddTagsCommand";
import {
  AddTrustStoreRevocationsCommandInput,
  AddTrustStoreRevocationsCommandOutput,
} from "./commands/AddTrustStoreRevocationsCommand";
import {
  CreateListenerCommandInput,
  CreateListenerCommandOutput,
} from "./commands/CreateListenerCommand";
import {
  CreateLoadBalancerCommandInput,
  CreateLoadBalancerCommandOutput,
} from "./commands/CreateLoadBalancerCommand";
import {
  CreateRuleCommandInput,
  CreateRuleCommandOutput,
} from "./commands/CreateRuleCommand";
import {
  CreateTargetGroupCommandInput,
  CreateTargetGroupCommandOutput,
} from "./commands/CreateTargetGroupCommand";
import {
  CreateTrustStoreCommandInput,
  CreateTrustStoreCommandOutput,
} from "./commands/CreateTrustStoreCommand";
import {
  DeleteListenerCommandInput,
  DeleteListenerCommandOutput,
} from "./commands/DeleteListenerCommand";
import {
  DeleteLoadBalancerCommandInput,
  DeleteLoadBalancerCommandOutput,
} from "./commands/DeleteLoadBalancerCommand";
import {
  DeleteRuleCommandInput,
  DeleteRuleCommandOutput,
} from "./commands/DeleteRuleCommand";
import {
  DeleteSharedTrustStoreAssociationCommandInput,
  DeleteSharedTrustStoreAssociationCommandOutput,
} from "./commands/DeleteSharedTrustStoreAssociationCommand";
import {
  DeleteTargetGroupCommandInput,
  DeleteTargetGroupCommandOutput,
} from "./commands/DeleteTargetGroupCommand";
import {
  DeleteTrustStoreCommandInput,
  DeleteTrustStoreCommandOutput,
} from "./commands/DeleteTrustStoreCommand";
import {
  DeregisterTargetsCommandInput,
  DeregisterTargetsCommandOutput,
} from "./commands/DeregisterTargetsCommand";
import {
  DescribeAccountLimitsCommandInput,
  DescribeAccountLimitsCommandOutput,
} from "./commands/DescribeAccountLimitsCommand";
import {
  DescribeCapacityReservationCommandInput,
  DescribeCapacityReservationCommandOutput,
} from "./commands/DescribeCapacityReservationCommand";
import {
  DescribeListenerAttributesCommandInput,
  DescribeListenerAttributesCommandOutput,
} from "./commands/DescribeListenerAttributesCommand";
import {
  DescribeListenerCertificatesCommandInput,
  DescribeListenerCertificatesCommandOutput,
} from "./commands/DescribeListenerCertificatesCommand";
import {
  DescribeListenersCommandInput,
  DescribeListenersCommandOutput,
} from "./commands/DescribeListenersCommand";
import {
  DescribeLoadBalancerAttributesCommandInput,
  DescribeLoadBalancerAttributesCommandOutput,
} from "./commands/DescribeLoadBalancerAttributesCommand";
import {
  DescribeLoadBalancersCommandInput,
  DescribeLoadBalancersCommandOutput,
} from "./commands/DescribeLoadBalancersCommand";
import {
  DescribeRulesCommandInput,
  DescribeRulesCommandOutput,
} from "./commands/DescribeRulesCommand";
import {
  DescribeSSLPoliciesCommandInput,
  DescribeSSLPoliciesCommandOutput,
} from "./commands/DescribeSSLPoliciesCommand";
import {
  DescribeTagsCommandInput,
  DescribeTagsCommandOutput,
} from "./commands/DescribeTagsCommand";
import {
  DescribeTargetGroupAttributesCommandInput,
  DescribeTargetGroupAttributesCommandOutput,
} from "./commands/DescribeTargetGroupAttributesCommand";
import {
  DescribeTargetGroupsCommandInput,
  DescribeTargetGroupsCommandOutput,
} from "./commands/DescribeTargetGroupsCommand";
import {
  DescribeTargetHealthCommandInput,
  DescribeTargetHealthCommandOutput,
} from "./commands/DescribeTargetHealthCommand";
import {
  DescribeTrustStoreAssociationsCommandInput,
  DescribeTrustStoreAssociationsCommandOutput,
} from "./commands/DescribeTrustStoreAssociationsCommand";
import {
  DescribeTrustStoreRevocationsCommandInput,
  DescribeTrustStoreRevocationsCommandOutput,
} from "./commands/DescribeTrustStoreRevocationsCommand";
import {
  DescribeTrustStoresCommandInput,
  DescribeTrustStoresCommandOutput,
} from "./commands/DescribeTrustStoresCommand";
import {
  GetResourcePolicyCommandInput,
  GetResourcePolicyCommandOutput,
} from "./commands/GetResourcePolicyCommand";
import {
  GetTrustStoreCaCertificatesBundleCommandInput,
  GetTrustStoreCaCertificatesBundleCommandOutput,
} from "./commands/GetTrustStoreCaCertificatesBundleCommand";
import {
  GetTrustStoreRevocationContentCommandInput,
  GetTrustStoreRevocationContentCommandOutput,
} from "./commands/GetTrustStoreRevocationContentCommand";
import {
  ModifyCapacityReservationCommandInput,
  ModifyCapacityReservationCommandOutput,
} from "./commands/ModifyCapacityReservationCommand";
import {
  ModifyIpPoolsCommandInput,
  ModifyIpPoolsCommandOutput,
} from "./commands/ModifyIpPoolsCommand";
import {
  ModifyListenerAttributesCommandInput,
  ModifyListenerAttributesCommandOutput,
} from "./commands/ModifyListenerAttributesCommand";
import {
  ModifyListenerCommandInput,
  ModifyListenerCommandOutput,
} from "./commands/ModifyListenerCommand";
import {
  ModifyLoadBalancerAttributesCommandInput,
  ModifyLoadBalancerAttributesCommandOutput,
} from "./commands/ModifyLoadBalancerAttributesCommand";
import {
  ModifyRuleCommandInput,
  ModifyRuleCommandOutput,
} from "./commands/ModifyRuleCommand";
import {
  ModifyTargetGroupAttributesCommandInput,
  ModifyTargetGroupAttributesCommandOutput,
} from "./commands/ModifyTargetGroupAttributesCommand";
import {
  ModifyTargetGroupCommandInput,
  ModifyTargetGroupCommandOutput,
} from "./commands/ModifyTargetGroupCommand";
import {
  ModifyTrustStoreCommandInput,
  ModifyTrustStoreCommandOutput,
} from "./commands/ModifyTrustStoreCommand";
import {
  RegisterTargetsCommandInput,
  RegisterTargetsCommandOutput,
} from "./commands/RegisterTargetsCommand";
import {
  RemoveListenerCertificatesCommandInput,
  RemoveListenerCertificatesCommandOutput,
} from "./commands/RemoveListenerCertificatesCommand";
import {
  RemoveTagsCommandInput,
  RemoveTagsCommandOutput,
} from "./commands/RemoveTagsCommand";
import {
  RemoveTrustStoreRevocationsCommandInput,
  RemoveTrustStoreRevocationsCommandOutput,
} from "./commands/RemoveTrustStoreRevocationsCommand";
import {
  SetIpAddressTypeCommandInput,
  SetIpAddressTypeCommandOutput,
} from "./commands/SetIpAddressTypeCommand";
import {
  SetRulePrioritiesCommandInput,
  SetRulePrioritiesCommandOutput,
} from "./commands/SetRulePrioritiesCommand";
import {
  SetSecurityGroupsCommandInput,
  SetSecurityGroupsCommandOutput,
} from "./commands/SetSecurityGroupsCommand";
import {
  SetSubnetsCommandInput,
  SetSubnetsCommandOutput,
} from "./commands/SetSubnetsCommand";
import { ElasticLoadBalancingV2Client } from "./ElasticLoadBalancingV2Client";
export interface ElasticLoadBalancingV2 {
  addListenerCertificates(
    args: AddListenerCertificatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddListenerCertificatesCommandOutput>;
  addListenerCertificates(
    args: AddListenerCertificatesCommandInput,
    cb: (err: any, data?: AddListenerCertificatesCommandOutput) => void
  ): void;
  addListenerCertificates(
    args: AddListenerCertificatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddListenerCertificatesCommandOutput) => void
  ): void;
  addTags(
    args: AddTagsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddTagsCommandOutput>;
  addTags(
    args: AddTagsCommandInput,
    cb: (err: any, data?: AddTagsCommandOutput) => void
  ): void;
  addTags(
    args: AddTagsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddTagsCommandOutput) => void
  ): void;
  addTrustStoreRevocations(
    args: AddTrustStoreRevocationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AddTrustStoreRevocationsCommandOutput>;
  addTrustStoreRevocations(
    args: AddTrustStoreRevocationsCommandInput,
    cb: (err: any, data?: AddTrustStoreRevocationsCommandOutput) => void
  ): void;
  addTrustStoreRevocations(
    args: AddTrustStoreRevocationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AddTrustStoreRevocationsCommandOutput) => void
  ): void;
  createListener(
    args: CreateListenerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateListenerCommandOutput>;
  createListener(
    args: CreateListenerCommandInput,
    cb: (err: any, data?: CreateListenerCommandOutput) => void
  ): void;
  createListener(
    args: CreateListenerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateListenerCommandOutput) => void
  ): void;
  createLoadBalancer(
    args: CreateLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateLoadBalancerCommandOutput>;
  createLoadBalancer(
    args: CreateLoadBalancerCommandInput,
    cb: (err: any, data?: CreateLoadBalancerCommandOutput) => void
  ): void;
  createLoadBalancer(
    args: CreateLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateLoadBalancerCommandOutput) => void
  ): void;
  createRule(
    args: CreateRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRuleCommandOutput>;
  createRule(
    args: CreateRuleCommandInput,
    cb: (err: any, data?: CreateRuleCommandOutput) => void
  ): void;
  createRule(
    args: CreateRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRuleCommandOutput) => void
  ): void;
  createTargetGroup(
    args: CreateTargetGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateTargetGroupCommandOutput>;
  createTargetGroup(
    args: CreateTargetGroupCommandInput,
    cb: (err: any, data?: CreateTargetGroupCommandOutput) => void
  ): void;
  createTargetGroup(
    args: CreateTargetGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateTargetGroupCommandOutput) => void
  ): void;
  createTrustStore(
    args: CreateTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateTrustStoreCommandOutput>;
  createTrustStore(
    args: CreateTrustStoreCommandInput,
    cb: (err: any, data?: CreateTrustStoreCommandOutput) => void
  ): void;
  createTrustStore(
    args: CreateTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateTrustStoreCommandOutput) => void
  ): void;
  deleteListener(
    args: DeleteListenerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteListenerCommandOutput>;
  deleteListener(
    args: DeleteListenerCommandInput,
    cb: (err: any, data?: DeleteListenerCommandOutput) => void
  ): void;
  deleteListener(
    args: DeleteListenerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteListenerCommandOutput) => void
  ): void;
  deleteLoadBalancer(
    args: DeleteLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLoadBalancerCommandOutput>;
  deleteLoadBalancer(
    args: DeleteLoadBalancerCommandInput,
    cb: (err: any, data?: DeleteLoadBalancerCommandOutput) => void
  ): void;
  deleteLoadBalancer(
    args: DeleteLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLoadBalancerCommandOutput) => void
  ): void;
  deleteRule(
    args: DeleteRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRuleCommandOutput>;
  deleteRule(
    args: DeleteRuleCommandInput,
    cb: (err: any, data?: DeleteRuleCommandOutput) => void
  ): void;
  deleteRule(
    args: DeleteRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRuleCommandOutput) => void
  ): void;
  deleteSharedTrustStoreAssociation(
    args: DeleteSharedTrustStoreAssociationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteSharedTrustStoreAssociationCommandOutput>;
  deleteSharedTrustStoreAssociation(
    args: DeleteSharedTrustStoreAssociationCommandInput,
    cb: (
      err: any,
      data?: DeleteSharedTrustStoreAssociationCommandOutput
    ) => void
  ): void;
  deleteSharedTrustStoreAssociation(
    args: DeleteSharedTrustStoreAssociationCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DeleteSharedTrustStoreAssociationCommandOutput
    ) => void
  ): void;
  deleteTargetGroup(
    args: DeleteTargetGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteTargetGroupCommandOutput>;
  deleteTargetGroup(
    args: DeleteTargetGroupCommandInput,
    cb: (err: any, data?: DeleteTargetGroupCommandOutput) => void
  ): void;
  deleteTargetGroup(
    args: DeleteTargetGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteTargetGroupCommandOutput) => void
  ): void;
  deleteTrustStore(
    args: DeleteTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteTrustStoreCommandOutput>;
  deleteTrustStore(
    args: DeleteTrustStoreCommandInput,
    cb: (err: any, data?: DeleteTrustStoreCommandOutput) => void
  ): void;
  deleteTrustStore(
    args: DeleteTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteTrustStoreCommandOutput) => void
  ): void;
  deregisterTargets(
    args: DeregisterTargetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeregisterTargetsCommandOutput>;
  deregisterTargets(
    args: DeregisterTargetsCommandInput,
    cb: (err: any, data?: DeregisterTargetsCommandOutput) => void
  ): void;
  deregisterTargets(
    args: DeregisterTargetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeregisterTargetsCommandOutput) => void
  ): void;
  describeAccountLimits(): Promise<DescribeAccountLimitsCommandOutput>;
  describeAccountLimits(
    args: DescribeAccountLimitsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeAccountLimitsCommandOutput>;
  describeAccountLimits(
    args: DescribeAccountLimitsCommandInput,
    cb: (err: any, data?: DescribeAccountLimitsCommandOutput) => void
  ): void;
  describeAccountLimits(
    args: DescribeAccountLimitsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeAccountLimitsCommandOutput) => void
  ): void;
  describeCapacityReservation(
    args: DescribeCapacityReservationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeCapacityReservationCommandOutput>;
  describeCapacityReservation(
    args: DescribeCapacityReservationCommandInput,
    cb: (err: any, data?: DescribeCapacityReservationCommandOutput) => void
  ): void;
  describeCapacityReservation(
    args: DescribeCapacityReservationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeCapacityReservationCommandOutput) => void
  ): void;
  describeListenerAttributes(
    args: DescribeListenerAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeListenerAttributesCommandOutput>;
  describeListenerAttributes(
    args: DescribeListenerAttributesCommandInput,
    cb: (err: any, data?: DescribeListenerAttributesCommandOutput) => void
  ): void;
  describeListenerAttributes(
    args: DescribeListenerAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeListenerAttributesCommandOutput) => void
  ): void;
  describeListenerCertificates(
    args: DescribeListenerCertificatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeListenerCertificatesCommandOutput>;
  describeListenerCertificates(
    args: DescribeListenerCertificatesCommandInput,
    cb: (err: any, data?: DescribeListenerCertificatesCommandOutput) => void
  ): void;
  describeListenerCertificates(
    args: DescribeListenerCertificatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeListenerCertificatesCommandOutput) => void
  ): void;
  describeListeners(): Promise<DescribeListenersCommandOutput>;
  describeListeners(
    args: DescribeListenersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeListenersCommandOutput>;
  describeListeners(
    args: DescribeListenersCommandInput,
    cb: (err: any, data?: DescribeListenersCommandOutput) => void
  ): void;
  describeListeners(
    args: DescribeListenersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeListenersCommandOutput) => void
  ): void;
  describeLoadBalancerAttributes(
    args: DescribeLoadBalancerAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeLoadBalancerAttributesCommandOutput>;
  describeLoadBalancerAttributes(
    args: DescribeLoadBalancerAttributesCommandInput,
    cb: (err: any, data?: DescribeLoadBalancerAttributesCommandOutput) => void
  ): void;
  describeLoadBalancerAttributes(
    args: DescribeLoadBalancerAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeLoadBalancerAttributesCommandOutput) => void
  ): void;
  describeLoadBalancers(): Promise<DescribeLoadBalancersCommandOutput>;
  describeLoadBalancers(
    args: DescribeLoadBalancersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeLoadBalancersCommandOutput>;
  describeLoadBalancers(
    args: DescribeLoadBalancersCommandInput,
    cb: (err: any, data?: DescribeLoadBalancersCommandOutput) => void
  ): void;
  describeLoadBalancers(
    args: DescribeLoadBalancersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeLoadBalancersCommandOutput) => void
  ): void;
  describeRules(): Promise<DescribeRulesCommandOutput>;
  describeRules(
    args: DescribeRulesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeRulesCommandOutput>;
  describeRules(
    args: DescribeRulesCommandInput,
    cb: (err: any, data?: DescribeRulesCommandOutput) => void
  ): void;
  describeRules(
    args: DescribeRulesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeRulesCommandOutput) => void
  ): void;
  describeSSLPolicies(): Promise<DescribeSSLPoliciesCommandOutput>;
  describeSSLPolicies(
    args: DescribeSSLPoliciesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeSSLPoliciesCommandOutput>;
  describeSSLPolicies(
    args: DescribeSSLPoliciesCommandInput,
    cb: (err: any, data?: DescribeSSLPoliciesCommandOutput) => void
  ): void;
  describeSSLPolicies(
    args: DescribeSSLPoliciesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeSSLPoliciesCommandOutput) => void
  ): void;
  describeTags(
    args: DescribeTagsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTagsCommandOutput>;
  describeTags(
    args: DescribeTagsCommandInput,
    cb: (err: any, data?: DescribeTagsCommandOutput) => void
  ): void;
  describeTags(
    args: DescribeTagsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTagsCommandOutput) => void
  ): void;
  describeTargetGroupAttributes(
    args: DescribeTargetGroupAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTargetGroupAttributesCommandOutput>;
  describeTargetGroupAttributes(
    args: DescribeTargetGroupAttributesCommandInput,
    cb: (err: any, data?: DescribeTargetGroupAttributesCommandOutput) => void
  ): void;
  describeTargetGroupAttributes(
    args: DescribeTargetGroupAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTargetGroupAttributesCommandOutput) => void
  ): void;
  describeTargetGroups(): Promise<DescribeTargetGroupsCommandOutput>;
  describeTargetGroups(
    args: DescribeTargetGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTargetGroupsCommandOutput>;
  describeTargetGroups(
    args: DescribeTargetGroupsCommandInput,
    cb: (err: any, data?: DescribeTargetGroupsCommandOutput) => void
  ): void;
  describeTargetGroups(
    args: DescribeTargetGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTargetGroupsCommandOutput) => void
  ): void;
  describeTargetHealth(
    args: DescribeTargetHealthCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTargetHealthCommandOutput>;
  describeTargetHealth(
    args: DescribeTargetHealthCommandInput,
    cb: (err: any, data?: DescribeTargetHealthCommandOutput) => void
  ): void;
  describeTargetHealth(
    args: DescribeTargetHealthCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTargetHealthCommandOutput) => void
  ): void;
  describeTrustStoreAssociations(
    args: DescribeTrustStoreAssociationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTrustStoreAssociationsCommandOutput>;
  describeTrustStoreAssociations(
    args: DescribeTrustStoreAssociationsCommandInput,
    cb: (err: any, data?: DescribeTrustStoreAssociationsCommandOutput) => void
  ): void;
  describeTrustStoreAssociations(
    args: DescribeTrustStoreAssociationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTrustStoreAssociationsCommandOutput) => void
  ): void;
  describeTrustStoreRevocations(
    args: DescribeTrustStoreRevocationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTrustStoreRevocationsCommandOutput>;
  describeTrustStoreRevocations(
    args: DescribeTrustStoreRevocationsCommandInput,
    cb: (err: any, data?: DescribeTrustStoreRevocationsCommandOutput) => void
  ): void;
  describeTrustStoreRevocations(
    args: DescribeTrustStoreRevocationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTrustStoreRevocationsCommandOutput) => void
  ): void;
  describeTrustStores(): Promise<DescribeTrustStoresCommandOutput>;
  describeTrustStores(
    args: DescribeTrustStoresCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeTrustStoresCommandOutput>;
  describeTrustStores(
    args: DescribeTrustStoresCommandInput,
    cb: (err: any, data?: DescribeTrustStoresCommandOutput) => void
  ): void;
  describeTrustStores(
    args: DescribeTrustStoresCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeTrustStoresCommandOutput) => void
  ): void;
  getResourcePolicy(
    args: GetResourcePolicyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetResourcePolicyCommandOutput>;
  getResourcePolicy(
    args: GetResourcePolicyCommandInput,
    cb: (err: any, data?: GetResourcePolicyCommandOutput) => void
  ): void;
  getResourcePolicy(
    args: GetResourcePolicyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetResourcePolicyCommandOutput) => void
  ): void;
  getTrustStoreCaCertificatesBundle(
    args: GetTrustStoreCaCertificatesBundleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetTrustStoreCaCertificatesBundleCommandOutput>;
  getTrustStoreCaCertificatesBundle(
    args: GetTrustStoreCaCertificatesBundleCommandInput,
    cb: (
      err: any,
      data?: GetTrustStoreCaCertificatesBundleCommandOutput
    ) => void
  ): void;
  getTrustStoreCaCertificatesBundle(
    args: GetTrustStoreCaCertificatesBundleCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: GetTrustStoreCaCertificatesBundleCommandOutput
    ) => void
  ): void;
  getTrustStoreRevocationContent(
    args: GetTrustStoreRevocationContentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetTrustStoreRevocationContentCommandOutput>;
  getTrustStoreRevocationContent(
    args: GetTrustStoreRevocationContentCommandInput,
    cb: (err: any, data?: GetTrustStoreRevocationContentCommandOutput) => void
  ): void;
  getTrustStoreRevocationContent(
    args: GetTrustStoreRevocationContentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetTrustStoreRevocationContentCommandOutput) => void
  ): void;
  modifyCapacityReservation(
    args: ModifyCapacityReservationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyCapacityReservationCommandOutput>;
  modifyCapacityReservation(
    args: ModifyCapacityReservationCommandInput,
    cb: (err: any, data?: ModifyCapacityReservationCommandOutput) => void
  ): void;
  modifyCapacityReservation(
    args: ModifyCapacityReservationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyCapacityReservationCommandOutput) => void
  ): void;
  modifyIpPools(
    args: ModifyIpPoolsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyIpPoolsCommandOutput>;
  modifyIpPools(
    args: ModifyIpPoolsCommandInput,
    cb: (err: any, data?: ModifyIpPoolsCommandOutput) => void
  ): void;
  modifyIpPools(
    args: ModifyIpPoolsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyIpPoolsCommandOutput) => void
  ): void;
  modifyListener(
    args: ModifyListenerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyListenerCommandOutput>;
  modifyListener(
    args: ModifyListenerCommandInput,
    cb: (err: any, data?: ModifyListenerCommandOutput) => void
  ): void;
  modifyListener(
    args: ModifyListenerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyListenerCommandOutput) => void
  ): void;
  modifyListenerAttributes(
    args: ModifyListenerAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyListenerAttributesCommandOutput>;
  modifyListenerAttributes(
    args: ModifyListenerAttributesCommandInput,
    cb: (err: any, data?: ModifyListenerAttributesCommandOutput) => void
  ): void;
  modifyListenerAttributes(
    args: ModifyListenerAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyListenerAttributesCommandOutput) => void
  ): void;
  modifyLoadBalancerAttributes(
    args: ModifyLoadBalancerAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyLoadBalancerAttributesCommandOutput>;
  modifyLoadBalancerAttributes(
    args: ModifyLoadBalancerAttributesCommandInput,
    cb: (err: any, data?: ModifyLoadBalancerAttributesCommandOutput) => void
  ): void;
  modifyLoadBalancerAttributes(
    args: ModifyLoadBalancerAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyLoadBalancerAttributesCommandOutput) => void
  ): void;
  modifyRule(
    args: ModifyRuleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyRuleCommandOutput>;
  modifyRule(
    args: ModifyRuleCommandInput,
    cb: (err: any, data?: ModifyRuleCommandOutput) => void
  ): void;
  modifyRule(
    args: ModifyRuleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyRuleCommandOutput) => void
  ): void;
  modifyTargetGroup(
    args: ModifyTargetGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyTargetGroupCommandOutput>;
  modifyTargetGroup(
    args: ModifyTargetGroupCommandInput,
    cb: (err: any, data?: ModifyTargetGroupCommandOutput) => void
  ): void;
  modifyTargetGroup(
    args: ModifyTargetGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyTargetGroupCommandOutput) => void
  ): void;
  modifyTargetGroupAttributes(
    args: ModifyTargetGroupAttributesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyTargetGroupAttributesCommandOutput>;
  modifyTargetGroupAttributes(
    args: ModifyTargetGroupAttributesCommandInput,
    cb: (err: any, data?: ModifyTargetGroupAttributesCommandOutput) => void
  ): void;
  modifyTargetGroupAttributes(
    args: ModifyTargetGroupAttributesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyTargetGroupAttributesCommandOutput) => void
  ): void;
  modifyTrustStore(
    args: ModifyTrustStoreCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ModifyTrustStoreCommandOutput>;
  modifyTrustStore(
    args: ModifyTrustStoreCommandInput,
    cb: (err: any, data?: ModifyTrustStoreCommandOutput) => void
  ): void;
  modifyTrustStore(
    args: ModifyTrustStoreCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ModifyTrustStoreCommandOutput) => void
  ): void;
  registerTargets(
    args: RegisterTargetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterTargetsCommandOutput>;
  registerTargets(
    args: RegisterTargetsCommandInput,
    cb: (err: any, data?: RegisterTargetsCommandOutput) => void
  ): void;
  registerTargets(
    args: RegisterTargetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterTargetsCommandOutput) => void
  ): void;
  removeListenerCertificates(
    args: RemoveListenerCertificatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveListenerCertificatesCommandOutput>;
  removeListenerCertificates(
    args: RemoveListenerCertificatesCommandInput,
    cb: (err: any, data?: RemoveListenerCertificatesCommandOutput) => void
  ): void;
  removeListenerCertificates(
    args: RemoveListenerCertificatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveListenerCertificatesCommandOutput) => void
  ): void;
  removeTags(
    args: RemoveTagsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveTagsCommandOutput>;
  removeTags(
    args: RemoveTagsCommandInput,
    cb: (err: any, data?: RemoveTagsCommandOutput) => void
  ): void;
  removeTags(
    args: RemoveTagsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveTagsCommandOutput) => void
  ): void;
  removeTrustStoreRevocations(
    args: RemoveTrustStoreRevocationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RemoveTrustStoreRevocationsCommandOutput>;
  removeTrustStoreRevocations(
    args: RemoveTrustStoreRevocationsCommandInput,
    cb: (err: any, data?: RemoveTrustStoreRevocationsCommandOutput) => void
  ): void;
  removeTrustStoreRevocations(
    args: RemoveTrustStoreRevocationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RemoveTrustStoreRevocationsCommandOutput) => void
  ): void;
  setIpAddressType(
    args: SetIpAddressTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetIpAddressTypeCommandOutput>;
  setIpAddressType(
    args: SetIpAddressTypeCommandInput,
    cb: (err: any, data?: SetIpAddressTypeCommandOutput) => void
  ): void;
  setIpAddressType(
    args: SetIpAddressTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetIpAddressTypeCommandOutput) => void
  ): void;
  setRulePriorities(
    args: SetRulePrioritiesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetRulePrioritiesCommandOutput>;
  setRulePriorities(
    args: SetRulePrioritiesCommandInput,
    cb: (err: any, data?: SetRulePrioritiesCommandOutput) => void
  ): void;
  setRulePriorities(
    args: SetRulePrioritiesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetRulePrioritiesCommandOutput) => void
  ): void;
  setSecurityGroups(
    args: SetSecurityGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetSecurityGroupsCommandOutput>;
  setSecurityGroups(
    args: SetSecurityGroupsCommandInput,
    cb: (err: any, data?: SetSecurityGroupsCommandOutput) => void
  ): void;
  setSecurityGroups(
    args: SetSecurityGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetSecurityGroupsCommandOutput) => void
  ): void;
  setSubnets(
    args: SetSubnetsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetSubnetsCommandOutput>;
  setSubnets(
    args: SetSubnetsCommandInput,
    cb: (err: any, data?: SetSubnetsCommandOutput) => void
  ): void;
  setSubnets(
    args: SetSubnetsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetSubnetsCommandOutput) => void
  ): void;
}
export declare class ElasticLoadBalancingV2
  extends ElasticLoadBalancingV2Client
  implements ElasticLoadBalancingV2 {}
