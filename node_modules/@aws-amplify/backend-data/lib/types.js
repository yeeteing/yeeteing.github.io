export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  DerivedCombinedSchema,\n  DerivedModelSchema,\n} from '@aws-amplify/data-schema-types';\nimport {\n  AmplifyFunction,\n  ConstructFactory,\n  LogLevel,\n  LogRetention,\n} from '@aws-amplify/plugin-types';\n\n/**\n * Authorization modes used in by client side Amplify represented in camelCase.\n */\nexport type DefaultAuthorizationMode =\n  | 'iam'\n  | 'identityPool'\n  | 'userPool'\n  | 'oidc'\n  | 'apiKey'\n  | 'lambda';\n\n/**\n * Props for Api Keys on the Graphql Api.\n */\nexport type ApiKeyAuthorizationModeProps = {\n  /**\n   * Optional description for the Api Key to attach to the Api.\n   */\n  description?: string;\n\n  /**\n   * A duration representing the time from Cloudformation deploy until expiry.\n   * @default 7\n   */\n  expiresInDays?: number;\n};\n\n/**\n * Props for Custom Lambda authorization on the Graphql Api.\n */\nexport type LambdaAuthorizationModeProps = {\n  /**\n   * The authorization lambda function. The specific input type of the function is subject to change or removal.\n   */\n  function: ConstructFactory<AmplifyFunction>;\n\n  /**\n   * How long the results are cached.\n   * @default 60\n   */\n  timeToLiveInSeconds?: number;\n};\n\n/**\n * Props for OpenId Connect Authorization on the Graphql Api.\n */\nexport type OIDCAuthorizationModeProps = {\n  /**\n   * The issuer for the OIDC configuration.\n   */\n  oidcProviderName: string;\n\n  /**\n   * Url for the OIDC token issuer.\n   */\n  oidcIssuerUrl: string;\n\n  /**\n   * The client identifier of the Relying party at the OpenID identity provider.\n   * A regular expression can be specified so AppSync can validate against multiple client identifiers at a time. Example\n   */\n  clientId?: string;\n\n  /**\n   * The duration an OIDC token is valid after being authenticated by OIDC provider in seconds.\n   * auth_time claim in OIDC token is required for this validation to work.\n   */\n  tokenExpiryFromAuthInSeconds: number;\n  /**\n   * The duration an OIDC token is valid after being issued to a user in seconds.\n   * This validation uses iat claim of OIDC token.\n   */\n  tokenExpireFromIssueInSeconds: number;\n};\n\n/**\n * AppSync Authorization config for the generated API.\n */\nexport type AuthorizationModes = {\n  /**\n   * Default auth mode to use in the API, only required if more than one auth mode is specified.\n   */\n  defaultAuthorizationMode?: DefaultAuthorizationMode;\n  /**\n   * Override API Key config if apiKey auth provider is specified in api definition.\n   */\n  apiKeyAuthorizationMode?: ApiKeyAuthorizationModeProps;\n\n  /**\n   * Lambda authorization config if function provider is specified in the api definition.\n   */\n  lambdaAuthorizationMode?: LambdaAuthorizationModeProps;\n\n  /**\n   * OIDC authorization config if oidc provider is specified in the api definition.\n   */\n  oidcAuthorizationMode?: OIDCAuthorizationModeProps;\n};\n\n/**\n * Schemas type definition, can be either a raw Graphql string, or a typed model schema, or a collection of combined Schemas.\n */\nexport type DataSchemaInput =\n  | string\n  | DerivedModelSchema\n  | DerivedCombinedSchema;\n\n/**\n * Schema type definition, can be either a raw Graphql string, or a typed model schema.\n */\nexport type DataSchema = string | DerivedModelSchema;\n\n/**\n * Exposed props for Data which are configurable by the end user.\n */\nexport type DataProps = {\n  /**\n   * Graphql Schema as a string to be passed into the CDK construct.\n   */\n  schema: DataSchemaInput;\n\n  /**\n   * Optional name for the generated Api.\n   */\n  name?: string;\n\n  /**\n   * Override authorization config, which will apply on top of defaults based on availability of auth, etc.\n   */\n  authorizationModes?: AuthorizationModes;\n\n  /**\n   * Functions invokable by the API. The specific input type of the function is subject to change or removal.\n   */\n  functions?: Record<string, ConstructFactory<AmplifyFunction>>;\n\n  /**\n   * Logging configuration for the API.\n   */\n  logging?: DataLoggingOptions;\n\n  /**\n   * Mapping of model name to existing DynamoDB table that should be used as the data source.\n   * Each element in the array represents a mapping for a specific branch.\n   */\n  migratedAmplifyGen1DynamoDbTableMappings?: AmplifyGen1DynamoDbTableMapping[];\n};\n\nexport type AmplifyDataError =\n  | 'DefineDataConfigurationError'\n  | 'InvalidPathError'\n  | 'InvalidSchemaAuthError'\n  | 'InvalidSchemaError'\n  | 'MultipleSingletonResourcesError'\n  | 'UnresolvedEntryPathError';\n\n/**\n * The logging configuration when writing GraphQL operations and tracing to Amazon CloudWatch for an AWS AppSync GraphQL API.\n * Values can be `true` or a `DataLogConfig` object.\n *\n * ### Defaults\n * Default settings will be applied when logging is set to `true` or an empty object, or for unspecified fields:\n * - `excludeVerboseContent`: `true`\n * - `fieldLogLevel`: `none`\n * - `retention`: `1 week`\n *\n * **WARNING**: Verbose logging will log the full incoming query including user parameters.\n * Sensitive information may be exposed in CloudWatch logs. Ensure that your IAM policies only grant access to authorized users.\n *\n * For information on AppSync's LogConfig, refer to https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-logconfig.html.\n */\nexport type DataLoggingOptions = true | DataLogConfig;\n\n/**\n * Customizable logging configuration when writing GraphQL operations and tracing to Amazon CloudWatch for an AWS AppSync GraphQL API.\n *\n * **WARNING**: Verbose logging will log the full incoming query including user parameters.\n * Sensitive information may be exposed in CloudWatch logs. Ensure that your IAM policies only grant access to authorized users.\n *\n * For information on AppSync's LogConfig, refer to https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-appsync-graphqlapi-logconfig.html.\n * For information on RetentionDays, refer to https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_logs.RetentionDays.html.\n * @default excludeVerboseContent: true, fieldLogLevel: 'none', retention: '1 week'\n */\nexport type DataLogConfig = {\n  /**\n   * The number of days log events are kept in CloudWatch Logs.\n   * @default RetentionDays.ONE_WEEK\n   * @see https://docs.aws.amazon.com/cdk/api/v2/docs/aws-cdk-lib.aws_logs.RetentionDays.html\n   */\n  retention?: LogRetention;\n\n  /**\n   * When set to `true`, excludes verbose information from the logs, such as:\n   * - GraphQL Query\n   * - Request Headers\n   * - Response Headers\n   * - Context\n   * - Evaluated Mapping Templates\n   *\n   * This setting applies regardless of the specified logging level.\n   *\n   * **WARNING**: Verbose logging will log the full incoming query including user parameters.\n   * Sensitive information may be exposed in CloudWatch logs. Ensure that your IAM policies only grant access to authorized users.\n   * @default true\n   */\n  excludeVerboseContent?: boolean;\n\n  /**\n   * The field logging level. Values can be `'none'`, `'error'`, `'info'`, `'debug'`, or `'all'`.\n   *\n   * - **'none'**: No field-level logs are captured.\n   * - **'error'**: Logs the following information only for the fields that are in the error category:\n   *   - The error section in the server response.\n   *   - Field-level errors.\n   *   - The generated request/response functions that got resolved for error fields.\n   * - **'info'**: Logs the following information only for the fields that are in the info and error categories:\n   *   - Info-level messages.\n   *   - The user messages sent through `$util.log.info` and `console.log`.\n   *   - Field-level tracing and mapping logs are not shown.\n   * - **'debug'**: Logs the following information only for the fields that are in the debug, info, and error categories:\n   *   - Debug-level messages.\n   *   - The user messages sent through `$util.log.info`, `$util.log.debug`, `console.log`, and `console.debug`.\n   *   - Field-level tracing and mapping logs are not shown.\n   * - **'all'**: The following information is logged for all fields in the query:\n   *   - Field-level tracing information.\n   *   - The generated request/response functions that were resolved for each field.\n   * @default 'none'\n   */\n  fieldLogLevel?: DataLogLevel;\n};\n\nexport type DataLogLevel = Extract<\n  LogLevel,\n  'none' | 'all' | 'info' | 'debug' | 'error'\n>;\n\n/**\n * Mapping of model name to existing DynamoDB table that should be used as the data source.\n * The mapping will only apply to the branch specified.\n * If the mapping is undefined or empty, no tables will be imported for that branch.\n */\nexport type AmplifyGen1DynamoDbTableMapping = {\n  branchName: string;\n  modelNameToTableNameMapping?: Record<string, string>;\n};\n"]}