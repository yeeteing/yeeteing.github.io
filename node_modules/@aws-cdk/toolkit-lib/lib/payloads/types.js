"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgKiBhcyBjeGFwaSBmcm9tICdAYXdzLWNkay9jeC1hcGknO1xuXG4vKipcbiAqIEFzc2VtYmx5IGRhdGEgcmV0dXJuZWQgaW4gdGhlIHBheWxvYWQgb2YgYW4gSU8gTWVzc2FnZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBc3NlbWJseURhdGEge1xuICAvKipcbiAgICogVGhlIHBhdGggdG8gdGhlIGFzc2VtYmx5IGRpcmVjdG9yeVxuICAgKi9cbiAgcmVhZG9ubHkgYXNzZW1ibHlEaXJlY3Rvcnk6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIG51bWJlciBvZiBzdGFja3MgYWN0aW9uZWQgb25cbiAgICovXG4gIHJlYWRvbmx5IHN0YWNrc0NvdW50OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBzdGFjayBJRHNcbiAgICovXG4gIHJlYWRvbmx5IHN0YWNrSWRzOiBzdHJpbmdbXTtcbn1cblxuLyoqXG4gKiBTdGFjayBkYXRhIHJldHVybmVkIGluIHRoZSBwYXlsb2FkIG9mIGFuIElPIE1lc3NhZ2UuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU3RhY2tEYXRhIHtcbiAgLyoqXG4gICAqIFRoZSBzdGFjayBuYW1lXG4gICAqL1xuICByZWFkb25seSBzdGFja05hbWU6IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHN0YWNrIElEXG4gICAqL1xuICByZWFkb25seSBoaWVyYXJjaGljYWxJZDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgc3RhY2sgdGVtcGxhdGVcbiAgICovXG4gIHJlYWRvbmx5IHRlbXBsYXRlOiBhbnk7XG5cbiAgLyoqXG4gICAqIFRoZSBzdGFjayB0ZW1wbGF0ZSBjb252ZXJ0ZWQgdG8gSlNPTiBmb3JtYXRcbiAgICovXG4gIHJlYWRvbmx5IHN0cmluZ2lmaWVkSnNvbjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgc3RhY2sgdGVtcGxhdGUgY29udmVydGVkIHRvIFlBTUwgZm9ybWF0XG4gICAqL1xuICByZWFkb25seSBzdHJpbmdpZmllZFlhbWw6IHN0cmluZztcbn1cblxuLyoqXG4gKiBTdGFjayBkYXRhIHJldHVybmVkIGluIHRoZSBwYXlsb2FkIG9mIGFuIElPIE1lc3NhZ2UuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU3RhY2tBbmRBc3NlbWJseURhdGEgZXh0ZW5kcyBBc3NlbWJseURhdGEge1xuICAvKipcbiAgICogU3RhY2sgRGF0YVxuICAgKi9cbiAgcmVhZG9ubHkgc3RhY2s6IFN0YWNrRGF0YTtcbn1cblxuLyoqXG4gKiBBIHBheWxvYWQgaWRlbnRpZnlpbmcgYSBzaW5nbGUgc3RhY2tzXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU2luZ2xlU3RhY2sge1xuICAvKipcbiAgICogQSBzaW5nbGUgc3RhY2tcbiAgICovXG4gIHJlYWRvbmx5IHN0YWNrOiBjeGFwaS5DbG91ZEZvcm1hdGlvblN0YWNrQXJ0aWZhY3Q7XG59XG5cbi8qKlxuICogRHVyYXRpb24gaW5mb3JtYXRpb24gcmV0dXJuZWQgaW4gdGhlIHBheWxvYWQgb2YgYW4gSU8gTWVzc2FnZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBEdXJhdGlvbiB7XG4gIC8qKlxuICAgKiBUaGUgZHVyYXRpb24gb2YgdGhlIGFjdGlvbi5cbiAgICovXG4gIHJlYWRvbmx5IGR1cmF0aW9uOiBudW1iZXI7XG59XG5cbi8qKlxuICogR2VuZXJpYyBwYXlsb2FkIG9mIGVycm9yIElvTWVzc2FnZXMgdGhhdCBwYXNzIG9uIGFuIGluc3RhbmNlIG9mIGBFcnJvcmBcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBFcnJvclBheWxvYWQge1xuICAvKipcbiAgICogVGhlIGVycm9yIHRoYXQgb2NjdXJyZWRcbiAgICovXG4gIHJlYWRvbmx5IGVycm9yOiBFcnJvcjtcbn1cblxuLyoqXG4gKiBHZW5lcmljIHBheWxvYWQgb2YgYSBzaW1wbGUgeWVzL25vIHF1ZXN0aW9uLlxuICpcbiAqIFRoZSBleHBlY3RhdGlvbiBpcyB0aGF0ICd5ZXMnIG1lYW5zIG1vdmluZyBvbixcbiAqIGFuZCAnbm8nIG1lYW5zIGFib3J0aW5nIHRoZSBjdXJyZW50IGFjdGlvbi5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDb25maXJtYXRpb25SZXF1ZXN0IHtcbiAgLyoqXG4gICAqIFNvbWUgYWRkaXRpb25hbCBtb3RpdmF0aW9uIGZvciB0aGUgY29uZmlybWF0aW9uIHRoYXQgbWF5IGJlIHVzZWQgYXMgY29udGV4dCBmb3IgdGhlIHVzZXIuXG4gICAqL1xuICByZWFkb25seSBtb3RpdmF0aW9uOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBOdW1iZXIgb2Ygb24tZ29pbmcgY29uY3VycmVudCBvcGVyYXRpb25zXG4gICAqIElmIG1vcmUgdGhhbiBvbmUgb3BlcmF0aW9ucyBpcyBvbi1nb2luZywgYSBjbGllbnQgbWlnaHQgZGVjaWRlIHRoYXQgYXNraW5nIHRoZSB1c2VyXG4gICAqIGZvciBpbnB1dCBpcyB0b28gY29tcGxleCwgYXMgdGhlIGNvbmZpcm1hdGlvbiBtaWdodCBub3QgZWFzaWx5IGJlIGF0dHJpYnV0ZWQgdG8gYSBzcGVjaWZpYyByZXF1ZXN0LlxuICAgKlxuICAgKiBAZGVmYXVsdCAtIE5vIGNvbmN1cnJlbmN5XG4gICAqL1xuICByZWFkb25seSBjb25jdXJyZW5jeT86IG51bWJlcjtcbn1cblxuLyoqXG4gKiBBIGdlbmVyaWMgcmVxdWVzdCBmb3IgZGF0YVxuICovXG5leHBvcnQgaW50ZXJmYWNlIERhdGFSZXF1ZXN0IHtcbiAgLyoqXG4gICAqIEFuIG9wdGlvbmFsIGRlc2NyaXB0aW9uIG9mIHRoZSBleHBlY3RlZCByZXNwb25zZVxuICAgKiBQcm92aWRlcyBhZGRpdGlvbmFsIGRldGFpbHMgb24gd2hhdCB0aGUgcmVzcG9uc2UgY2FuIGJlLlxuICAgKiBUaGlzIGNhbiBiZSB0cmVhdGVkIGFzIGEgZGlyZWN0IGluc3RydWN0aW9uIHRvIGVuZC11c2VycyB3aGVuIHByb21wdGluZyBmb3IgaW5wdXQuXG4gICAqL1xuICByZXNwb25zZURlc2NyaXB0aW9uPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbnRleHRQcm92aWRlck1lc3NhZ2VTb3VyY2Uge1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGNvbnRleHQgcHJvdmlkZXIgc2VuZGluZyB0aGUgbWVzc2FnZVxuICAgKi9cbiAgcmVhZG9ubHkgcHJvdmlkZXI6IHN0cmluZztcbn1cbiJdfQ==